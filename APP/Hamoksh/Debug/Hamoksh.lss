
Hamoksh.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002fb6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b8  00800060  00002fb6  0000302a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001efc  00000000  00000000  000030e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000cf2  00000000  00000000  00004fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00005cd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00005e12  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00005f82  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00007bcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00008ab6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00009864  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  000099c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00009c51  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a41f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 eb       	ldi	r30, 0xB6	; 182
      68:	ff e2       	ldi	r31, 0x2F	; 47
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 31       	cpi	r26, 0x18	; 24
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 46 0c 	call	0x188c	; 0x188c <main>
      7a:	0c 94 d9 17 	jmp	0x2fb2	; 0x2fb2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 a2 17 	jmp	0x2f44	; 0x2f44 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a8 eb       	ldi	r26, 0xB8	; 184
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 be 17 	jmp	0x2f7c	; 0x2f7c <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ae 17 	jmp	0x2f5c	; 0x2f5c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 ca 17 	jmp	0x2f94	; 0x2f94 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ae 17 	jmp	0x2f5c	; 0x2f5c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 ca 17 	jmp	0x2f94	; 0x2f94 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 a2 17 	jmp	0x2f44	; 0x2f44 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	88 eb       	ldi	r24, 0xB8	; 184
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 be 17 	jmp	0x2f7c	; 0x2f7c <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ae 17 	jmp	0x2f5c	; 0x2f5c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 ca 17 	jmp	0x2f94	; 0x2f94 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 ae 17 	jmp	0x2f5c	; 0x2f5c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 ca 17 	jmp	0x2f94	; 0x2f94 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 ae 17 	jmp	0x2f5c	; 0x2f5c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 ca 17 	jmp	0x2f94	; 0x2f94 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 b2 17 	jmp	0x2f64	; 0x2f64 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 ce 17 	jmp	0x2f9c	; 0x2f9c <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <voidSendEnablePulse>:
#include "CLCD_interface.h"
#include "CLCD_prv.h"
#include "CLCD_cfg.h"

static void voidSendEnablePulse(void)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	2e 97       	sbiw	r28, 0x0e	; 14
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
	/*Send enable pulse*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     b4a:	80 e0       	ldi	r24, 0x00	; 0
     b4c:	62 e0       	ldi	r22, 0x02	; 2
     b4e:	41 e0       	ldi	r20, 0x01	; 1
     b50:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	a0 e0       	ldi	r26, 0x00	; 0
     b5a:	b0 e4       	ldi	r27, 0x40	; 64
     b5c:	8b 87       	std	Y+11, r24	; 0x0b
     b5e:	9c 87       	std	Y+12, r25	; 0x0c
     b60:	ad 87       	std	Y+13, r26	; 0x0d
     b62:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b64:	6b 85       	ldd	r22, Y+11	; 0x0b
     b66:	7c 85       	ldd	r23, Y+12	; 0x0c
     b68:	8d 85       	ldd	r24, Y+13	; 0x0d
     b6a:	9e 85       	ldd	r25, Y+14	; 0x0e
     b6c:	20 e0       	ldi	r18, 0x00	; 0
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	4a e7       	ldi	r20, 0x7A	; 122
     b72:	55 e4       	ldi	r21, 0x45	; 69
     b74:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b78:	dc 01       	movw	r26, r24
     b7a:	cb 01       	movw	r24, r22
     b7c:	8f 83       	std	Y+7, r24	; 0x07
     b7e:	98 87       	std	Y+8, r25	; 0x08
     b80:	a9 87       	std	Y+9, r26	; 0x09
     b82:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     b84:	6f 81       	ldd	r22, Y+7	; 0x07
     b86:	78 85       	ldd	r23, Y+8	; 0x08
     b88:	89 85       	ldd	r24, Y+9	; 0x09
     b8a:	9a 85       	ldd	r25, Y+10	; 0x0a
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	40 e8       	ldi	r20, 0x80	; 128
     b92:	5f e3       	ldi	r21, 0x3F	; 63
     b94:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     b98:	88 23       	and	r24, r24
     b9a:	2c f4       	brge	.+10     	; 0xba6 <voidSendEnablePulse+0x70>
		__ticks = 1;
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	9e 83       	std	Y+6, r25	; 0x06
     ba2:	8d 83       	std	Y+5, r24	; 0x05
     ba4:	3f c0       	rjmp	.+126    	; 0xc24 <voidSendEnablePulse+0xee>
	else if (__tmp > 65535)
     ba6:	6f 81       	ldd	r22, Y+7	; 0x07
     ba8:	78 85       	ldd	r23, Y+8	; 0x08
     baa:	89 85       	ldd	r24, Y+9	; 0x09
     bac:	9a 85       	ldd	r25, Y+10	; 0x0a
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	3f ef       	ldi	r19, 0xFF	; 255
     bb2:	4f e7       	ldi	r20, 0x7F	; 127
     bb4:	57 e4       	ldi	r21, 0x47	; 71
     bb6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     bba:	18 16       	cp	r1, r24
     bbc:	4c f5       	brge	.+82     	; 0xc10 <voidSendEnablePulse+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bbe:	6b 85       	ldd	r22, Y+11	; 0x0b
     bc0:	7c 85       	ldd	r23, Y+12	; 0x0c
     bc2:	8d 85       	ldd	r24, Y+13	; 0x0d
     bc4:	9e 85       	ldd	r25, Y+14	; 0x0e
     bc6:	20 e0       	ldi	r18, 0x00	; 0
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	40 e2       	ldi	r20, 0x20	; 32
     bcc:	51 e4       	ldi	r21, 0x41	; 65
     bce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     bd2:	dc 01       	movw	r26, r24
     bd4:	cb 01       	movw	r24, r22
     bd6:	bc 01       	movw	r22, r24
     bd8:	cd 01       	movw	r24, r26
     bda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     bde:	dc 01       	movw	r26, r24
     be0:	cb 01       	movw	r24, r22
     be2:	9e 83       	std	Y+6, r25	; 0x06
     be4:	8d 83       	std	Y+5, r24	; 0x05
     be6:	0f c0       	rjmp	.+30     	; 0xc06 <voidSendEnablePulse+0xd0>
     be8:	80 e9       	ldi	r24, 0x90	; 144
     bea:	91 e0       	ldi	r25, 0x01	; 1
     bec:	9c 83       	std	Y+4, r25	; 0x04
     bee:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     bf0:	8b 81       	ldd	r24, Y+3	; 0x03
     bf2:	9c 81       	ldd	r25, Y+4	; 0x04
     bf4:	01 97       	sbiw	r24, 0x01	; 1
     bf6:	f1 f7       	brne	.-4      	; 0xbf4 <voidSendEnablePulse+0xbe>
     bf8:	9c 83       	std	Y+4, r25	; 0x04
     bfa:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     bfc:	8d 81       	ldd	r24, Y+5	; 0x05
     bfe:	9e 81       	ldd	r25, Y+6	; 0x06
     c00:	01 97       	sbiw	r24, 0x01	; 1
     c02:	9e 83       	std	Y+6, r25	; 0x06
     c04:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c06:	8d 81       	ldd	r24, Y+5	; 0x05
     c08:	9e 81       	ldd	r25, Y+6	; 0x06
     c0a:	00 97       	sbiw	r24, 0x00	; 0
     c0c:	69 f7       	brne	.-38     	; 0xbe8 <voidSendEnablePulse+0xb2>
     c0e:	14 c0       	rjmp	.+40     	; 0xc38 <voidSendEnablePulse+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c10:	6f 81       	ldd	r22, Y+7	; 0x07
     c12:	78 85       	ldd	r23, Y+8	; 0x08
     c14:	89 85       	ldd	r24, Y+9	; 0x09
     c16:	9a 85       	ldd	r25, Y+10	; 0x0a
     c18:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c1c:	dc 01       	movw	r26, r24
     c1e:	cb 01       	movw	r24, r22
     c20:	9e 83       	std	Y+6, r25	; 0x06
     c22:	8d 83       	std	Y+5, r24	; 0x05
     c24:	8d 81       	ldd	r24, Y+5	; 0x05
     c26:	9e 81       	ldd	r25, Y+6	; 0x06
     c28:	9a 83       	std	Y+2, r25	; 0x02
     c2a:	89 83       	std	Y+1, r24	; 0x01
     c2c:	89 81       	ldd	r24, Y+1	; 0x01
     c2e:	9a 81       	ldd	r25, Y+2	; 0x02
     c30:	01 97       	sbiw	r24, 0x01	; 1
     c32:	f1 f7       	brne	.-4      	; 0xc30 <voidSendEnablePulse+0xfa>
     c34:	9a 83       	std	Y+2, r25	; 0x02
     c36:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	62 e0       	ldi	r22, 0x02	; 2
     c3c:	40 e0       	ldi	r20, 0x00	; 0
     c3e:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>
}
     c42:	2e 96       	adiw	r28, 0x0e	; 14
     c44:	0f b6       	in	r0, 0x3f	; 63
     c46:	f8 94       	cli
     c48:	de bf       	out	0x3e, r29	; 62
     c4a:	0f be       	out	0x3f, r0	; 63
     c4c:	cd bf       	out	0x3d, r28	; 61
     c4e:	cf 91       	pop	r28
     c50:	df 91       	pop	r29
     c52:	08 95       	ret

00000c54 <voidSetLCDHalfDataPort>:

static void voidSetLCDHalfDataPort(uint8 Copy_u8Nipple)
{
     c54:	df 93       	push	r29
     c56:	cf 93       	push	r28
     c58:	0f 92       	push	r0
     c5a:	cd b7       	in	r28, 0x3d	; 61
     c5c:	de b7       	in	r29, 0x3e	; 62
     c5e:	89 83       	std	Y+1, r24	; 0x01
	DIO_u8SetPinValue(CLCD_DATA_PORT,CLCD_D4_PIN,GET_BIT(Copy_u8Nipple,0));
     c60:	89 81       	ldd	r24, Y+1	; 0x01
     c62:	98 2f       	mov	r25, r24
     c64:	91 70       	andi	r25, 0x01	; 1
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	63 e0       	ldi	r22, 0x03	; 3
     c6a:	49 2f       	mov	r20, r25
     c6c:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_DATA_PORT,CLCD_D5_PIN,GET_BIT(Copy_u8Nipple,1));
     c70:	89 81       	ldd	r24, Y+1	; 0x01
     c72:	86 95       	lsr	r24
     c74:	98 2f       	mov	r25, r24
     c76:	91 70       	andi	r25, 0x01	; 1
     c78:	80 e0       	ldi	r24, 0x00	; 0
     c7a:	64 e0       	ldi	r22, 0x04	; 4
     c7c:	49 2f       	mov	r20, r25
     c7e:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_DATA_PORT,CLCD_D6_PIN,GET_BIT(Copy_u8Nipple,2));
     c82:	89 81       	ldd	r24, Y+1	; 0x01
     c84:	86 95       	lsr	r24
     c86:	86 95       	lsr	r24
     c88:	98 2f       	mov	r25, r24
     c8a:	91 70       	andi	r25, 0x01	; 1
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	65 e0       	ldi	r22, 0x05	; 5
     c90:	49 2f       	mov	r20, r25
     c92:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>
	DIO_u8SetPinValue(CLCD_DATA_PORT,CLCD_D7_PIN,GET_BIT(Copy_u8Nipple,3));
     c96:	89 81       	ldd	r24, Y+1	; 0x01
     c98:	86 95       	lsr	r24
     c9a:	86 95       	lsr	r24
     c9c:	86 95       	lsr	r24
     c9e:	98 2f       	mov	r25, r24
     ca0:	91 70       	andi	r25, 0x01	; 1
     ca2:	80 e0       	ldi	r24, 0x00	; 0
     ca4:	66 e0       	ldi	r22, 0x06	; 6
     ca6:	49 2f       	mov	r20, r25
     ca8:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>
}
     cac:	0f 90       	pop	r0
     cae:	cf 91       	pop	r28
     cb0:	df 91       	pop	r29
     cb2:	08 95       	ret

00000cb4 <CLCD_voidSendCmd>:

void CLCD_voidSendCmd(uint8 Copy_u8Cmd)
{
     cb4:	df 93       	push	r29
     cb6:	cf 93       	push	r28
     cb8:	0f 92       	push	r0
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	89 83       	std	Y+1, r24	; 0x01
	/*Set RS pin to low for command*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_LOW);
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	61 e0       	ldi	r22, 0x01	; 1
     cc4:	40 e0       	ldi	r20, 0x00	; 0
     cc6:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>

	voidSendEnablePulse();

#elif CLCD_OP_MODE == FOUR_BIT_MODE

	voidSetLCDHalfDataPort(Copy_u8Cmd>>4);	/*send the most 4 bits to the LCD*/
     cca:	89 81       	ldd	r24, Y+1	; 0x01
     ccc:	82 95       	swap	r24
     cce:	8f 70       	andi	r24, 0x0F	; 15
     cd0:	0e 94 2a 06 	call	0xc54	; 0xc54 <voidSetLCDHalfDataPort>
	voidSendEnablePulse();
     cd4:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSendEnablePulse>

	voidSetLCDHalfDataPort(Copy_u8Cmd);		/*send the least 4 bits to the LCD*/
     cd8:	89 81       	ldd	r24, Y+1	; 0x01
     cda:	0e 94 2a 06 	call	0xc54	; 0xc54 <voidSetLCDHalfDataPort>
	voidSendEnablePulse();
     cde:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSendEnablePulse>
#endif
}
     ce2:	0f 90       	pop	r0
     ce4:	cf 91       	pop	r28
     ce6:	df 91       	pop	r29
     ce8:	08 95       	ret

00000cea <CLCD_voidSendData>:

void CLCD_voidSendData(uint8 Copy_u8Data)
{
     cea:	df 93       	push	r29
     cec:	cf 93       	push	r28
     cee:	0f 92       	push	r0
     cf0:	cd b7       	in	r28, 0x3d	; 61
     cf2:	de b7       	in	r29, 0x3e	; 62
     cf4:	89 83       	std	Y+1, r24	; 0x01
	/*Set RS pin to high for Data*/
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_HIGH);
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	61 e0       	ldi	r22, 0x01	; 1
     cfa:	41 e0       	ldi	r20, 0x01	; 1
     cfc:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8SetPinValue>

	voidSendEnablePulse();

#elif CLCD_OP_MODE == FOUR_BIT_MODE

	voidSetLCDHalfDataPort(Copy_u8Data>>4);	/*send the most 4 bits to the LCD*/
     d00:	89 81       	ldd	r24, Y+1	; 0x01
     d02:	82 95       	swap	r24
     d04:	8f 70       	andi	r24, 0x0F	; 15
     d06:	0e 94 2a 06 	call	0xc54	; 0xc54 <voidSetLCDHalfDataPort>
	voidSendEnablePulse();
     d0a:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSendEnablePulse>

	voidSetLCDHalfDataPort(Copy_u8Data);	/*send the least 4 bits to the LCD*/
     d0e:	89 81       	ldd	r24, Y+1	; 0x01
     d10:	0e 94 2a 06 	call	0xc54	; 0xc54 <voidSetLCDHalfDataPort>
	voidSendEnablePulse();
     d14:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSendEnablePulse>
#endif

}
     d18:	0f 90       	pop	r0
     d1a:	cf 91       	pop	r28
     d1c:	df 91       	pop	r29
     d1e:	08 95       	ret

00000d20 <CLCD_voidInit>:

void CLCD_voidInit(void)
{
     d20:	df 93       	push	r29
     d22:	cf 93       	push	r28
     d24:	cd b7       	in	r28, 0x3d	; 61
     d26:	de b7       	in	r29, 0x3e	; 62
     d28:	2e 97       	sbiw	r28, 0x0e	; 14
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	f8 94       	cli
     d2e:	de bf       	out	0x3e, r29	; 62
     d30:	0f be       	out	0x3f, r0	; 63
     d32:	cd bf       	out	0x3d, r28	; 61
     d34:	80 e0       	ldi	r24, 0x00	; 0
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	a0 e2       	ldi	r26, 0x20	; 32
     d3a:	b2 e4       	ldi	r27, 0x42	; 66
     d3c:	8b 87       	std	Y+11, r24	; 0x0b
     d3e:	9c 87       	std	Y+12, r25	; 0x0c
     d40:	ad 87       	std	Y+13, r26	; 0x0d
     d42:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d44:	6b 85       	ldd	r22, Y+11	; 0x0b
     d46:	7c 85       	ldd	r23, Y+12	; 0x0c
     d48:	8d 85       	ldd	r24, Y+13	; 0x0d
     d4a:	9e 85       	ldd	r25, Y+14	; 0x0e
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	4a e7       	ldi	r20, 0x7A	; 122
     d52:	55 e4       	ldi	r21, 0x45	; 69
     d54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d58:	dc 01       	movw	r26, r24
     d5a:	cb 01       	movw	r24, r22
     d5c:	8f 83       	std	Y+7, r24	; 0x07
     d5e:	98 87       	std	Y+8, r25	; 0x08
     d60:	a9 87       	std	Y+9, r26	; 0x09
     d62:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d64:	6f 81       	ldd	r22, Y+7	; 0x07
     d66:	78 85       	ldd	r23, Y+8	; 0x08
     d68:	89 85       	ldd	r24, Y+9	; 0x09
     d6a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d6c:	20 e0       	ldi	r18, 0x00	; 0
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	40 e8       	ldi	r20, 0x80	; 128
     d72:	5f e3       	ldi	r21, 0x3F	; 63
     d74:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d78:	88 23       	and	r24, r24
     d7a:	2c f4       	brge	.+10     	; 0xd86 <CLCD_voidInit+0x66>
		__ticks = 1;
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	9e 83       	std	Y+6, r25	; 0x06
     d82:	8d 83       	std	Y+5, r24	; 0x05
     d84:	3f c0       	rjmp	.+126    	; 0xe04 <CLCD_voidInit+0xe4>
	else if (__tmp > 65535)
     d86:	6f 81       	ldd	r22, Y+7	; 0x07
     d88:	78 85       	ldd	r23, Y+8	; 0x08
     d8a:	89 85       	ldd	r24, Y+9	; 0x09
     d8c:	9a 85       	ldd	r25, Y+10	; 0x0a
     d8e:	20 e0       	ldi	r18, 0x00	; 0
     d90:	3f ef       	ldi	r19, 0xFF	; 255
     d92:	4f e7       	ldi	r20, 0x7F	; 127
     d94:	57 e4       	ldi	r21, 0x47	; 71
     d96:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d9a:	18 16       	cp	r1, r24
     d9c:	4c f5       	brge	.+82     	; 0xdf0 <CLCD_voidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d9e:	6b 85       	ldd	r22, Y+11	; 0x0b
     da0:	7c 85       	ldd	r23, Y+12	; 0x0c
     da2:	8d 85       	ldd	r24, Y+13	; 0x0d
     da4:	9e 85       	ldd	r25, Y+14	; 0x0e
     da6:	20 e0       	ldi	r18, 0x00	; 0
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	40 e2       	ldi	r20, 0x20	; 32
     dac:	51 e4       	ldi	r21, 0x41	; 65
     dae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     db2:	dc 01       	movw	r26, r24
     db4:	cb 01       	movw	r24, r22
     db6:	bc 01       	movw	r22, r24
     db8:	cd 01       	movw	r24, r26
     dba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dbe:	dc 01       	movw	r26, r24
     dc0:	cb 01       	movw	r24, r22
     dc2:	9e 83       	std	Y+6, r25	; 0x06
     dc4:	8d 83       	std	Y+5, r24	; 0x05
     dc6:	0f c0       	rjmp	.+30     	; 0xde6 <CLCD_voidInit+0xc6>
     dc8:	80 e9       	ldi	r24, 0x90	; 144
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	9c 83       	std	Y+4, r25	; 0x04
     dce:	8b 83       	std	Y+3, r24	; 0x03
     dd0:	8b 81       	ldd	r24, Y+3	; 0x03
     dd2:	9c 81       	ldd	r25, Y+4	; 0x04
     dd4:	01 97       	sbiw	r24, 0x01	; 1
     dd6:	f1 f7       	brne	.-4      	; 0xdd4 <CLCD_voidInit+0xb4>
     dd8:	9c 83       	std	Y+4, r25	; 0x04
     dda:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ddc:	8d 81       	ldd	r24, Y+5	; 0x05
     dde:	9e 81       	ldd	r25, Y+6	; 0x06
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	9e 83       	std	Y+6, r25	; 0x06
     de4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     de6:	8d 81       	ldd	r24, Y+5	; 0x05
     de8:	9e 81       	ldd	r25, Y+6	; 0x06
     dea:	00 97       	sbiw	r24, 0x00	; 0
     dec:	69 f7       	brne	.-38     	; 0xdc8 <CLCD_voidInit+0xa8>
     dee:	14 c0       	rjmp	.+40     	; 0xe18 <CLCD_voidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     df0:	6f 81       	ldd	r22, Y+7	; 0x07
     df2:	78 85       	ldd	r23, Y+8	; 0x08
     df4:	89 85       	ldd	r24, Y+9	; 0x09
     df6:	9a 85       	ldd	r25, Y+10	; 0x0a
     df8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dfc:	dc 01       	movw	r26, r24
     dfe:	cb 01       	movw	r24, r22
     e00:	9e 83       	std	Y+6, r25	; 0x06
     e02:	8d 83       	std	Y+5, r24	; 0x05
     e04:	8d 81       	ldd	r24, Y+5	; 0x05
     e06:	9e 81       	ldd	r25, Y+6	; 0x06
     e08:	9a 83       	std	Y+2, r25	; 0x02
     e0a:	89 83       	std	Y+1, r24	; 0x01
     e0c:	89 81       	ldd	r24, Y+1	; 0x01
     e0e:	9a 81       	ldd	r25, Y+2	; 0x02
     e10:	01 97       	sbiw	r24, 0x01	; 1
     e12:	f1 f7       	brne	.-4      	; 0xe10 <CLCD_voidInit+0xf0>
     e14:	9a 83       	std	Y+2, r25	; 0x02
     e16:	89 83       	std	Y+1, r24	; 0x01
	/*Function set command: 2 lines, 5*7 font size*/
#if CLCD_OP_MODE == EIGHT_BIT_MODE
	CLCD_voidSendCmd(0b00111000);

#elif CLCD_OP_MODE == FOUR_BIT_MODE
	voidSetLCDHalfDataPort(0b0010);
     e18:	82 e0       	ldi	r24, 0x02	; 2
     e1a:	0e 94 2a 06 	call	0xc54	; 0xc54 <voidSetLCDHalfDataPort>
	voidSendEnablePulse();
     e1e:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSendEnablePulse>
	voidSetLCDHalfDataPort(0b0010);
     e22:	82 e0       	ldi	r24, 0x02	; 2
     e24:	0e 94 2a 06 	call	0xc54	; 0xc54 <voidSetLCDHalfDataPort>
	voidSendEnablePulse();
     e28:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSendEnablePulse>
	voidSetLCDHalfDataPort(0b1000);
     e2c:	88 e0       	ldi	r24, 0x08	; 8
     e2e:	0e 94 2a 06 	call	0xc54	; 0xc54 <voidSetLCDHalfDataPort>
	voidSendEnablePulse();
     e32:	0e 94 9b 05 	call	0xb36	; 0xb36 <voidSendEnablePulse>
#endif

	/*Display on/off control: display enable, cursor and blink disable*/
	CLCD_voidSendCmd(0b00001100);
     e36:	8c e0       	ldi	r24, 0x0C	; 12
     e38:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>

	/*Display clear*/
	CLCD_voidSendCmd(1);
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
}
     e42:	2e 96       	adiw	r28, 0x0e	; 14
     e44:	0f b6       	in	r0, 0x3f	; 63
     e46:	f8 94       	cli
     e48:	de bf       	out	0x3e, r29	; 62
     e4a:	0f be       	out	0x3f, r0	; 63
     e4c:	cd bf       	out	0x3d, r28	; 61
     e4e:	cf 91       	pop	r28
     e50:	df 91       	pop	r29
     e52:	08 95       	ret

00000e54 <CLCD_u8SendString>:

uint8 CLCD_u8SendString(const char* Copy_chString)
{
     e54:	df 93       	push	r29
     e56:	cf 93       	push	r28
     e58:	00 d0       	rcall	.+0      	; 0xe5a <CLCD_u8SendString+0x6>
     e5a:	00 d0       	rcall	.+0      	; 0xe5c <CLCD_u8SendString+0x8>
     e5c:	cd b7       	in	r28, 0x3d	; 61
     e5e:	de b7       	in	r29, 0x3e	; 62
     e60:	9c 83       	std	Y+4, r25	; 0x04
     e62:	8b 83       	std	Y+3, r24	; 0x03
	uint8 Local_u8ErrorState= OK;
     e64:	1a 82       	std	Y+2, r1	; 0x02
	if(Copy_chString != NULL)
     e66:	8b 81       	ldd	r24, Y+3	; 0x03
     e68:	9c 81       	ldd	r25, Y+4	; 0x04
     e6a:	00 97       	sbiw	r24, 0x00	; 0
     e6c:	e1 f0       	breq	.+56     	; 0xea6 <CLCD_u8SendString+0x52>
	{
		uint8 Local_u8Counter=0u;
     e6e:	19 82       	std	Y+1, r1	; 0x01
     e70:	0e c0       	rjmp	.+28     	; 0xe8e <CLCD_u8SendString+0x3a>
		while(Copy_chString[Local_u8Counter] != '\0')
		{
			CLCD_voidSendData(Copy_chString[Local_u8Counter]);
     e72:	89 81       	ldd	r24, Y+1	; 0x01
     e74:	28 2f       	mov	r18, r24
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	8b 81       	ldd	r24, Y+3	; 0x03
     e7a:	9c 81       	ldd	r25, Y+4	; 0x04
     e7c:	fc 01       	movw	r30, r24
     e7e:	e2 0f       	add	r30, r18
     e80:	f3 1f       	adc	r31, r19
     e82:	80 81       	ld	r24, Z
     e84:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
			Local_u8Counter++;
     e88:	89 81       	ldd	r24, Y+1	; 0x01
     e8a:	8f 5f       	subi	r24, 0xFF	; 255
     e8c:	89 83       	std	Y+1, r24	; 0x01
{
	uint8 Local_u8ErrorState= OK;
	if(Copy_chString != NULL)
	{
		uint8 Local_u8Counter=0u;
		while(Copy_chString[Local_u8Counter] != '\0')
     e8e:	89 81       	ldd	r24, Y+1	; 0x01
     e90:	28 2f       	mov	r18, r24
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	9c 81       	ldd	r25, Y+4	; 0x04
     e98:	fc 01       	movw	r30, r24
     e9a:	e2 0f       	add	r30, r18
     e9c:	f3 1f       	adc	r31, r19
     e9e:	80 81       	ld	r24, Z
     ea0:	88 23       	and	r24, r24
     ea2:	39 f7       	brne	.-50     	; 0xe72 <CLCD_u8SendString+0x1e>
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <CLCD_u8SendString+0x56>
			Local_u8Counter++;
		}
	}
	else
	{
		Local_u8ErrorState= NULL_PTR_ERR;
     ea6:	82 e0       	ldi	r24, 0x02	; 2
     ea8:	8a 83       	std	Y+2, r24	; 0x02
	}
	return Local_u8ErrorState;
     eaa:	8a 81       	ldd	r24, Y+2	; 0x02
}
     eac:	0f 90       	pop	r0
     eae:	0f 90       	pop	r0
     eb0:	0f 90       	pop	r0
     eb2:	0f 90       	pop	r0
     eb4:	cf 91       	pop	r28
     eb6:	df 91       	pop	r29
     eb8:	08 95       	ret

00000eba <CLCD_voidSendNumber>:

void CLCD_voidSendNumber(sint32 Copy_s32Number)
{
     eba:	df 93       	push	r29
     ebc:	cf 93       	push	r28
     ebe:	cd b7       	in	r28, 0x3d	; 61
     ec0:	de b7       	in	r29, 0x3e	; 62
     ec2:	61 97       	sbiw	r28, 0x11	; 17
     ec4:	0f b6       	in	r0, 0x3f	; 63
     ec6:	f8 94       	cli
     ec8:	de bf       	out	0x3e, r29	; 62
     eca:	0f be       	out	0x3f, r0	; 63
     ecc:	cd bf       	out	0x3d, r28	; 61
     ece:	6e 87       	std	Y+14, r22	; 0x0e
     ed0:	7f 87       	std	Y+15, r23	; 0x0f
     ed2:	88 8b       	std	Y+16, r24	; 0x10
     ed4:	99 8b       	std	Y+17, r25	; 0x11
	char Local_chNumberArr[10];
	uint8 Local_u8RightDigit;
	uint8 Local_u8Counter=0;
     ed6:	1a 82       	std	Y+2, r1	; 0x02
	sint8 Local_s8Counter2;

	if (Copy_s32Number == 0)
     ed8:	8e 85       	ldd	r24, Y+14	; 0x0e
     eda:	9f 85       	ldd	r25, Y+15	; 0x0f
     edc:	a8 89       	ldd	r26, Y+16	; 0x10
     ede:	b9 89       	ldd	r27, Y+17	; 0x11
     ee0:	00 97       	sbiw	r24, 0x00	; 0
     ee2:	a1 05       	cpc	r26, r1
     ee4:	b1 05       	cpc	r27, r1
     ee6:	21 f4       	brne	.+8      	; 0xef0 <CLCD_voidSendNumber+0x36>
	{
		CLCD_voidSendData('0');
     ee8:	80 e3       	ldi	r24, 0x30	; 48
     eea:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
     eee:	69 c0       	rjmp	.+210    	; 0xfc2 <CLCD_voidSendNumber+0x108>
		return ;
	}
	else if(Copy_s32Number < 0)
     ef0:	8e 85       	ldd	r24, Y+14	; 0x0e
     ef2:	9f 85       	ldd	r25, Y+15	; 0x0f
     ef4:	a8 89       	ldd	r26, Y+16	; 0x10
     ef6:	b9 89       	ldd	r27, Y+17	; 0x11
     ef8:	bb 23       	and	r27, r27
     efa:	0c f0       	brlt	.+2      	; 0xefe <CLCD_voidSendNumber+0x44>
     efc:	43 c0       	rjmp	.+134    	; 0xf84 <CLCD_voidSendNumber+0xca>
	{
		CLCD_voidSendData('-');
     efe:	8d e2       	ldi	r24, 0x2D	; 45
     f00:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
		Copy_s32Number *= -1;
     f04:	8e 85       	ldd	r24, Y+14	; 0x0e
     f06:	9f 85       	ldd	r25, Y+15	; 0x0f
     f08:	a8 89       	ldd	r26, Y+16	; 0x10
     f0a:	b9 89       	ldd	r27, Y+17	; 0x11
     f0c:	b0 95       	com	r27
     f0e:	a0 95       	com	r26
     f10:	90 95       	com	r25
     f12:	81 95       	neg	r24
     f14:	9f 4f       	sbci	r25, 0xFF	; 255
     f16:	af 4f       	sbci	r26, 0xFF	; 255
     f18:	bf 4f       	sbci	r27, 0xFF	; 255
     f1a:	8e 87       	std	Y+14, r24	; 0x0e
     f1c:	9f 87       	std	Y+15, r25	; 0x0f
     f1e:	a8 8b       	std	Y+16, r26	; 0x10
     f20:	b9 8b       	std	Y+17, r27	; 0x11
     f22:	30 c0       	rjmp	.+96     	; 0xf84 <CLCD_voidSendNumber+0xca>
	}
	while(Copy_s32Number != 0)
	{
		Local_u8RightDigit = Copy_s32Number%10;		/*Extract the right most digit*/
     f24:	8e 85       	ldd	r24, Y+14	; 0x0e
     f26:	9f 85       	ldd	r25, Y+15	; 0x0f
     f28:	a8 89       	ldd	r26, Y+16	; 0x10
     f2a:	b9 89       	ldd	r27, Y+17	; 0x11
     f2c:	2a e0       	ldi	r18, 0x0A	; 10
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	40 e0       	ldi	r20, 0x00	; 0
     f32:	50 e0       	ldi	r21, 0x00	; 0
     f34:	bc 01       	movw	r22, r24
     f36:	cd 01       	movw	r24, r26
     f38:	0e 94 65 17 	call	0x2eca	; 0x2eca <__divmodsi4>
     f3c:	dc 01       	movw	r26, r24
     f3e:	cb 01       	movw	r24, r22
     f40:	8b 83       	std	Y+3, r24	; 0x03
		Copy_s32Number /=10;						/*Get rid of the right most digit*/
     f42:	8e 85       	ldd	r24, Y+14	; 0x0e
     f44:	9f 85       	ldd	r25, Y+15	; 0x0f
     f46:	a8 89       	ldd	r26, Y+16	; 0x10
     f48:	b9 89       	ldd	r27, Y+17	; 0x11
     f4a:	2a e0       	ldi	r18, 0x0A	; 10
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	40 e0       	ldi	r20, 0x00	; 0
     f50:	50 e0       	ldi	r21, 0x00	; 0
     f52:	bc 01       	movw	r22, r24
     f54:	cd 01       	movw	r24, r26
     f56:	0e 94 65 17 	call	0x2eca	; 0x2eca <__divmodsi4>
     f5a:	da 01       	movw	r26, r20
     f5c:	c9 01       	movw	r24, r18
     f5e:	8e 87       	std	Y+14, r24	; 0x0e
     f60:	9f 87       	std	Y+15, r25	; 0x0f
     f62:	a8 8b       	std	Y+16, r26	; 0x10
     f64:	b9 8b       	std	Y+17, r27	; 0x11
		Local_chNumberArr[Local_u8Counter]= Local_u8RightDigit + '0'; /*convert to ascii value*/
     f66:	8a 81       	ldd	r24, Y+2	; 0x02
     f68:	28 2f       	mov	r18, r24
     f6a:	30 e0       	ldi	r19, 0x00	; 0
     f6c:	8b 81       	ldd	r24, Y+3	; 0x03
     f6e:	48 2f       	mov	r20, r24
     f70:	40 5d       	subi	r20, 0xD0	; 208
     f72:	ce 01       	movw	r24, r28
     f74:	04 96       	adiw	r24, 0x04	; 4
     f76:	fc 01       	movw	r30, r24
     f78:	e2 0f       	add	r30, r18
     f7a:	f3 1f       	adc	r31, r19
     f7c:	40 83       	st	Z, r20
		Local_u8Counter++;
     f7e:	8a 81       	ldd	r24, Y+2	; 0x02
     f80:	8f 5f       	subi	r24, 0xFF	; 255
     f82:	8a 83       	std	Y+2, r24	; 0x02
	else if(Copy_s32Number < 0)
	{
		CLCD_voidSendData('-');
		Copy_s32Number *= -1;
	}
	while(Copy_s32Number != 0)
     f84:	8e 85       	ldd	r24, Y+14	; 0x0e
     f86:	9f 85       	ldd	r25, Y+15	; 0x0f
     f88:	a8 89       	ldd	r26, Y+16	; 0x10
     f8a:	b9 89       	ldd	r27, Y+17	; 0x11
     f8c:	00 97       	sbiw	r24, 0x00	; 0
     f8e:	a1 05       	cpc	r26, r1
     f90:	b1 05       	cpc	r27, r1
     f92:	41 f6       	brne	.-112    	; 0xf24 <CLCD_voidSendNumber+0x6a>
		Local_u8RightDigit = Copy_s32Number%10;		/*Extract the right most digit*/
		Copy_s32Number /=10;						/*Get rid of the right most digit*/
		Local_chNumberArr[Local_u8Counter]= Local_u8RightDigit + '0'; /*convert to ascii value*/
		Local_u8Counter++;
	}
	for(Local_s8Counter2= Local_u8Counter-1; Local_s8Counter2>=0; Local_s8Counter2--)
     f94:	8a 81       	ldd	r24, Y+2	; 0x02
     f96:	81 50       	subi	r24, 0x01	; 1
     f98:	89 83       	std	Y+1, r24	; 0x01
     f9a:	10 c0       	rjmp	.+32     	; 0xfbc <CLCD_voidSendNumber+0x102>
	{
		CLCD_voidSendData(Local_chNumberArr[Local_s8Counter2]);
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	28 2f       	mov	r18, r24
     fa0:	33 27       	eor	r19, r19
     fa2:	27 fd       	sbrc	r18, 7
     fa4:	30 95       	com	r19
     fa6:	ce 01       	movw	r24, r28
     fa8:	04 96       	adiw	r24, 0x04	; 4
     faa:	fc 01       	movw	r30, r24
     fac:	e2 0f       	add	r30, r18
     fae:	f3 1f       	adc	r31, r19
     fb0:	80 81       	ld	r24, Z
     fb2:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
		Local_u8RightDigit = Copy_s32Number%10;		/*Extract the right most digit*/
		Copy_s32Number /=10;						/*Get rid of the right most digit*/
		Local_chNumberArr[Local_u8Counter]= Local_u8RightDigit + '0'; /*convert to ascii value*/
		Local_u8Counter++;
	}
	for(Local_s8Counter2= Local_u8Counter-1; Local_s8Counter2>=0; Local_s8Counter2--)
     fb6:	89 81       	ldd	r24, Y+1	; 0x01
     fb8:	81 50       	subi	r24, 0x01	; 1
     fba:	89 83       	std	Y+1, r24	; 0x01
     fbc:	89 81       	ldd	r24, Y+1	; 0x01
     fbe:	88 23       	and	r24, r24
     fc0:	6c f7       	brge	.-38     	; 0xf9c <CLCD_voidSendNumber+0xe2>
	{
		CLCD_voidSendData(Local_chNumberArr[Local_s8Counter2]);
	}
}
     fc2:	61 96       	adiw	r28, 0x11	; 17
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	cf 91       	pop	r28
     fd0:	df 91       	pop	r29
     fd2:	08 95       	ret

00000fd4 <CLCD_viodGoToXY>:
void CLCD_viodGoToXY(uint8 Copy_u8XPos,uint8 Copy_u8YPos)
{
     fd4:	df 93       	push	r29
     fd6:	cf 93       	push	r28
     fd8:	00 d0       	rcall	.+0      	; 0xfda <CLCD_viodGoToXY+0x6>
     fda:	0f 92       	push	r0
     fdc:	cd b7       	in	r28, 0x3d	; 61
     fde:	de b7       	in	r29, 0x3e	; 62
     fe0:	8a 83       	std	Y+2, r24	; 0x02
     fe2:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8DDRamAdd;
	if(Copy_u8YPos == 0u)
     fe4:	8b 81       	ldd	r24, Y+3	; 0x03
     fe6:	88 23       	and	r24, r24
     fe8:	19 f4       	brne	.+6      	; 0xff0 <CLCD_viodGoToXY+0x1c>
	{
		Local_u8DDRamAdd= Copy_u8XPos;
     fea:	8a 81       	ldd	r24, Y+2	; 0x02
     fec:	89 83       	std	Y+1, r24	; 0x01
     fee:	06 c0       	rjmp	.+12     	; 0xffc <CLCD_viodGoToXY+0x28>
	}
	else if (Copy_u8YPos == 1u)
     ff0:	8b 81       	ldd	r24, Y+3	; 0x03
     ff2:	81 30       	cpi	r24, 0x01	; 1
     ff4:	19 f4       	brne	.+6      	; 0xffc <CLCD_viodGoToXY+0x28>
	{
		Local_u8DDRamAdd= 0x40+ Copy_u8XPos;
     ff6:	8a 81       	ldd	r24, Y+2	; 0x02
     ff8:	80 5c       	subi	r24, 0xC0	; 192
     ffa:	89 83       	std	Y+1, r24	; 0x01
	}
	Local_u8DDRamAdd |= 1<<7u;
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	80 68       	ori	r24, 0x80	; 128
    1000:	89 83       	std	Y+1, r24	; 0x01
	CLCD_voidSendCmd(Local_u8DDRamAdd);
    1002:	89 81       	ldd	r24, Y+1	; 0x01
    1004:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
}
    1008:	0f 90       	pop	r0
    100a:	0f 90       	pop	r0
    100c:	0f 90       	pop	r0
    100e:	cf 91       	pop	r28
    1010:	df 91       	pop	r29
    1012:	08 95       	ret

00001014 <CLCD_voidSendSpecialCharacter>:
void CLCD_voidSendSpecialCharacter(uint8 *Copy_pu8Pattern, uint8 Copy_PatternNumber,uint8 Copy_u8XPos,uint8 Copy_u8YPos)
{
    1014:	df 93       	push	r29
    1016:	cf 93       	push	r28
    1018:	cd b7       	in	r28, 0x3d	; 61
    101a:	de b7       	in	r29, 0x3e	; 62
    101c:	27 97       	sbiw	r28, 0x07	; 7
    101e:	0f b6       	in	r0, 0x3f	; 63
    1020:	f8 94       	cli
    1022:	de bf       	out	0x3e, r29	; 62
    1024:	0f be       	out	0x3f, r0	; 63
    1026:	cd bf       	out	0x3d, r28	; 61
    1028:	9c 83       	std	Y+4, r25	; 0x04
    102a:	8b 83       	std	Y+3, r24	; 0x03
    102c:	6d 83       	std	Y+5, r22	; 0x05
    102e:	4e 83       	std	Y+6, r20	; 0x06
    1030:	2f 83       	std	Y+7, r18	; 0x07
	uint8 Local_u8CGRAMAdd= Copy_PatternNumber * 8u;
    1032:	8d 81       	ldd	r24, Y+5	; 0x05
    1034:	88 2f       	mov	r24, r24
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	88 0f       	add	r24, r24
    103a:	99 1f       	adc	r25, r25
    103c:	88 0f       	add	r24, r24
    103e:	99 1f       	adc	r25, r25
    1040:	88 0f       	add	r24, r24
    1042:	99 1f       	adc	r25, r25
    1044:	8a 83       	std	Y+2, r24	; 0x02
	uint8 Local_u8LoopCounter;
	/*Set bit number 6 for set CGRAM address command*/
	Local_u8CGRAMAdd |= 1<<6;
    1046:	8a 81       	ldd	r24, Y+2	; 0x02
    1048:	80 64       	ori	r24, 0x40	; 64
    104a:	8a 83       	std	Y+2, r24	; 0x02
	CLCD_voidSendCmd(Local_u8CGRAMAdd);
    104c:	8a 81       	ldd	r24, Y+2	; 0x02
    104e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>

	for(Local_u8LoopCounter=0;Local_u8LoopCounter<8u;Local_u8LoopCounter++)
    1052:	19 82       	std	Y+1, r1	; 0x01
    1054:	0e c0       	rjmp	.+28     	; 0x1072 <CLCD_voidSendSpecialCharacter+0x5e>
	{
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8LoopCounter]);
    1056:	89 81       	ldd	r24, Y+1	; 0x01
    1058:	28 2f       	mov	r18, r24
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	8b 81       	ldd	r24, Y+3	; 0x03
    105e:	9c 81       	ldd	r25, Y+4	; 0x04
    1060:	fc 01       	movw	r30, r24
    1062:	e2 0f       	add	r30, r18
    1064:	f3 1f       	adc	r31, r19
    1066:	80 81       	ld	r24, Z
    1068:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
	uint8 Local_u8LoopCounter;
	/*Set bit number 6 for set CGRAM address command*/
	Local_u8CGRAMAdd |= 1<<6;
	CLCD_voidSendCmd(Local_u8CGRAMAdd);

	for(Local_u8LoopCounter=0;Local_u8LoopCounter<8u;Local_u8LoopCounter++)
    106c:	89 81       	ldd	r24, Y+1	; 0x01
    106e:	8f 5f       	subi	r24, 0xFF	; 255
    1070:	89 83       	std	Y+1, r24	; 0x01
    1072:	89 81       	ldd	r24, Y+1	; 0x01
    1074:	88 30       	cpi	r24, 0x08	; 8
    1076:	78 f3       	brcs	.-34     	; 0x1056 <CLCD_voidSendSpecialCharacter+0x42>
	{
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8LoopCounter]);
	}

	/*Goto DDRAM to display*/
	CLCD_viodGoToXY(Copy_u8XPos, Copy_u8YPos);
    1078:	8e 81       	ldd	r24, Y+6	; 0x06
    107a:	6f 81       	ldd	r22, Y+7	; 0x07
    107c:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>

	CLCD_voidSendData(Copy_PatternNumber);
    1080:	8d 81       	ldd	r24, Y+5	; 0x05
    1082:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
}
    1086:	27 96       	adiw	r28, 0x07	; 7
    1088:	0f b6       	in	r0, 0x3f	; 63
    108a:	f8 94       	cli
    108c:	de bf       	out	0x3e, r29	; 62
    108e:	0f be       	out	0x3f, r0	; 63
    1090:	cd bf       	out	0x3d, r28	; 61
    1092:	cf 91       	pop	r28
    1094:	df 91       	pop	r29
    1096:	08 95       	ret

00001098 <DIO_u8SetPinDirection>:
#include "DIO_interface.h"
#include "DIO_prv.h"
#include "DIO_reg.h"

uint8 DIO_u8SetPinDirection(uint8 Copy_u8Port, uint8 Copy_u8Pin, uint8 Copy_u8Direction)
{
    1098:	df 93       	push	r29
    109a:	cf 93       	push	r28
    109c:	cd b7       	in	r28, 0x3d	; 61
    109e:	de b7       	in	r29, 0x3e	; 62
    10a0:	28 97       	sbiw	r28, 0x08	; 8
    10a2:	0f b6       	in	r0, 0x3f	; 63
    10a4:	f8 94       	cli
    10a6:	de bf       	out	0x3e, r29	; 62
    10a8:	0f be       	out	0x3f, r0	; 63
    10aa:	cd bf       	out	0x3d, r28	; 61
    10ac:	8a 83       	std	Y+2, r24	; 0x02
    10ae:	6b 83       	std	Y+3, r22	; 0x03
    10b0:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_u8ErrorState = OK;
    10b2:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin <= DIO_u8PIN7)
    10b4:	8b 81       	ldd	r24, Y+3	; 0x03
    10b6:	88 30       	cpi	r24, 0x08	; 8
    10b8:	08 f0       	brcs	.+2      	; 0x10bc <DIO_u8SetPinDirection+0x24>
    10ba:	f4 c0       	rjmp	.+488    	; 0x12a4 <DIO_u8SetPinDirection+0x20c>
	{
		if(Copy_u8Direction == DIO_u8PIN_INPUT)
    10bc:	8c 81       	ldd	r24, Y+4	; 0x04
    10be:	88 23       	and	r24, r24
    10c0:	09 f0       	breq	.+2      	; 0x10c4 <DIO_u8SetPinDirection+0x2c>
    10c2:	77 c0       	rjmp	.+238    	; 0x11b2 <DIO_u8SetPinDirection+0x11a>
		{
			switch(Copy_u8Port)
    10c4:	8a 81       	ldd	r24, Y+2	; 0x02
    10c6:	28 2f       	mov	r18, r24
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	38 87       	std	Y+8, r19	; 0x08
    10cc:	2f 83       	std	Y+7, r18	; 0x07
    10ce:	8f 81       	ldd	r24, Y+7	; 0x07
    10d0:	98 85       	ldd	r25, Y+8	; 0x08
    10d2:	81 30       	cpi	r24, 0x01	; 1
    10d4:	91 05       	cpc	r25, r1
    10d6:	59 f1       	breq	.+86     	; 0x112e <DIO_u8SetPinDirection+0x96>
    10d8:	2f 81       	ldd	r18, Y+7	; 0x07
    10da:	38 85       	ldd	r19, Y+8	; 0x08
    10dc:	22 30       	cpi	r18, 0x02	; 2
    10de:	31 05       	cpc	r19, r1
    10e0:	2c f4       	brge	.+10     	; 0x10ec <DIO_u8SetPinDirection+0x54>
    10e2:	8f 81       	ldd	r24, Y+7	; 0x07
    10e4:	98 85       	ldd	r25, Y+8	; 0x08
    10e6:	00 97       	sbiw	r24, 0x00	; 0
    10e8:	69 f0       	breq	.+26     	; 0x1104 <DIO_u8SetPinDirection+0x6c>
    10ea:	60 c0       	rjmp	.+192    	; 0x11ac <DIO_u8SetPinDirection+0x114>
    10ec:	2f 81       	ldd	r18, Y+7	; 0x07
    10ee:	38 85       	ldd	r19, Y+8	; 0x08
    10f0:	22 30       	cpi	r18, 0x02	; 2
    10f2:	31 05       	cpc	r19, r1
    10f4:	89 f1       	breq	.+98     	; 0x1158 <DIO_u8SetPinDirection+0xc0>
    10f6:	8f 81       	ldd	r24, Y+7	; 0x07
    10f8:	98 85       	ldd	r25, Y+8	; 0x08
    10fa:	83 30       	cpi	r24, 0x03	; 3
    10fc:	91 05       	cpc	r25, r1
    10fe:	09 f4       	brne	.+2      	; 0x1102 <DIO_u8SetPinDirection+0x6a>
    1100:	40 c0       	rjmp	.+128    	; 0x1182 <DIO_u8SetPinDirection+0xea>
    1102:	54 c0       	rjmp	.+168    	; 0x11ac <DIO_u8SetPinDirection+0x114>
			{
			case DIO_u8PORTA: CLR_BIT(DDRA,Copy_u8Pin); break;
    1104:	aa e3       	ldi	r26, 0x3A	; 58
    1106:	b0 e0       	ldi	r27, 0x00	; 0
    1108:	ea e3       	ldi	r30, 0x3A	; 58
    110a:	f0 e0       	ldi	r31, 0x00	; 0
    110c:	80 81       	ld	r24, Z
    110e:	48 2f       	mov	r20, r24
    1110:	8b 81       	ldd	r24, Y+3	; 0x03
    1112:	28 2f       	mov	r18, r24
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	02 2e       	mov	r0, r18
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <DIO_u8SetPinDirection+0x8a>
    111e:	88 0f       	add	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	0a 94       	dec	r0
    1124:	e2 f7       	brpl	.-8      	; 0x111e <DIO_u8SetPinDirection+0x86>
    1126:	80 95       	com	r24
    1128:	84 23       	and	r24, r20
    112a:	8c 93       	st	X, r24
    112c:	bd c0       	rjmp	.+378    	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTB: CLR_BIT(DDRB,Copy_u8Pin); break;
    112e:	a7 e3       	ldi	r26, 0x37	; 55
    1130:	b0 e0       	ldi	r27, 0x00	; 0
    1132:	e7 e3       	ldi	r30, 0x37	; 55
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	80 81       	ld	r24, Z
    1138:	48 2f       	mov	r20, r24
    113a:	8b 81       	ldd	r24, Y+3	; 0x03
    113c:	28 2f       	mov	r18, r24
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	81 e0       	ldi	r24, 0x01	; 1
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	02 2e       	mov	r0, r18
    1146:	02 c0       	rjmp	.+4      	; 0x114c <DIO_u8SetPinDirection+0xb4>
    1148:	88 0f       	add	r24, r24
    114a:	99 1f       	adc	r25, r25
    114c:	0a 94       	dec	r0
    114e:	e2 f7       	brpl	.-8      	; 0x1148 <DIO_u8SetPinDirection+0xb0>
    1150:	80 95       	com	r24
    1152:	84 23       	and	r24, r20
    1154:	8c 93       	st	X, r24
    1156:	a8 c0       	rjmp	.+336    	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTC: CLR_BIT(DDRC,Copy_u8Pin); break;
    1158:	a4 e3       	ldi	r26, 0x34	; 52
    115a:	b0 e0       	ldi	r27, 0x00	; 0
    115c:	e4 e3       	ldi	r30, 0x34	; 52
    115e:	f0 e0       	ldi	r31, 0x00	; 0
    1160:	80 81       	ld	r24, Z
    1162:	48 2f       	mov	r20, r24
    1164:	8b 81       	ldd	r24, Y+3	; 0x03
    1166:	28 2f       	mov	r18, r24
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	02 2e       	mov	r0, r18
    1170:	02 c0       	rjmp	.+4      	; 0x1176 <DIO_u8SetPinDirection+0xde>
    1172:	88 0f       	add	r24, r24
    1174:	99 1f       	adc	r25, r25
    1176:	0a 94       	dec	r0
    1178:	e2 f7       	brpl	.-8      	; 0x1172 <DIO_u8SetPinDirection+0xda>
    117a:	80 95       	com	r24
    117c:	84 23       	and	r24, r20
    117e:	8c 93       	st	X, r24
    1180:	93 c0       	rjmp	.+294    	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTD: CLR_BIT(DDRD,Copy_u8Pin); break;
    1182:	a1 e3       	ldi	r26, 0x31	; 49
    1184:	b0 e0       	ldi	r27, 0x00	; 0
    1186:	e1 e3       	ldi	r30, 0x31	; 49
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	80 81       	ld	r24, Z
    118c:	48 2f       	mov	r20, r24
    118e:	8b 81       	ldd	r24, Y+3	; 0x03
    1190:	28 2f       	mov	r18, r24
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	02 2e       	mov	r0, r18
    119a:	02 c0       	rjmp	.+4      	; 0x11a0 <DIO_u8SetPinDirection+0x108>
    119c:	88 0f       	add	r24, r24
    119e:	99 1f       	adc	r25, r25
    11a0:	0a 94       	dec	r0
    11a2:	e2 f7       	brpl	.-8      	; 0x119c <DIO_u8SetPinDirection+0x104>
    11a4:	80 95       	com	r24
    11a6:	84 23       	and	r24, r20
    11a8:	8c 93       	st	X, r24
    11aa:	7e c0       	rjmp	.+252    	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			default: Local_u8ErrorState= NOK; break;
    11ac:	81 e0       	ldi	r24, 0x01	; 1
    11ae:	89 83       	std	Y+1, r24	; 0x01
    11b0:	7b c0       	rjmp	.+246    	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			}
		}
		else if(Copy_u8Direction == DIO_u8PIN_OUTPUT)
    11b2:	8c 81       	ldd	r24, Y+4	; 0x04
    11b4:	81 30       	cpi	r24, 0x01	; 1
    11b6:	09 f0       	breq	.+2      	; 0x11ba <DIO_u8SetPinDirection+0x122>
    11b8:	72 c0       	rjmp	.+228    	; 0x129e <DIO_u8SetPinDirection+0x206>
		{
			switch(Copy_u8Port)
    11ba:	8a 81       	ldd	r24, Y+2	; 0x02
    11bc:	28 2f       	mov	r18, r24
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	3e 83       	std	Y+6, r19	; 0x06
    11c2:	2d 83       	std	Y+5, r18	; 0x05
    11c4:	8d 81       	ldd	r24, Y+5	; 0x05
    11c6:	9e 81       	ldd	r25, Y+6	; 0x06
    11c8:	81 30       	cpi	r24, 0x01	; 1
    11ca:	91 05       	cpc	r25, r1
    11cc:	49 f1       	breq	.+82     	; 0x1220 <DIO_u8SetPinDirection+0x188>
    11ce:	2d 81       	ldd	r18, Y+5	; 0x05
    11d0:	3e 81       	ldd	r19, Y+6	; 0x06
    11d2:	22 30       	cpi	r18, 0x02	; 2
    11d4:	31 05       	cpc	r19, r1
    11d6:	2c f4       	brge	.+10     	; 0x11e2 <DIO_u8SetPinDirection+0x14a>
    11d8:	8d 81       	ldd	r24, Y+5	; 0x05
    11da:	9e 81       	ldd	r25, Y+6	; 0x06
    11dc:	00 97       	sbiw	r24, 0x00	; 0
    11de:	61 f0       	breq	.+24     	; 0x11f8 <DIO_u8SetPinDirection+0x160>
    11e0:	5b c0       	rjmp	.+182    	; 0x1298 <DIO_u8SetPinDirection+0x200>
    11e2:	2d 81       	ldd	r18, Y+5	; 0x05
    11e4:	3e 81       	ldd	r19, Y+6	; 0x06
    11e6:	22 30       	cpi	r18, 0x02	; 2
    11e8:	31 05       	cpc	r19, r1
    11ea:	71 f1       	breq	.+92     	; 0x1248 <DIO_u8SetPinDirection+0x1b0>
    11ec:	8d 81       	ldd	r24, Y+5	; 0x05
    11ee:	9e 81       	ldd	r25, Y+6	; 0x06
    11f0:	83 30       	cpi	r24, 0x03	; 3
    11f2:	91 05       	cpc	r25, r1
    11f4:	e9 f1       	breq	.+122    	; 0x1270 <DIO_u8SetPinDirection+0x1d8>
    11f6:	50 c0       	rjmp	.+160    	; 0x1298 <DIO_u8SetPinDirection+0x200>
			{
			case DIO_u8PORTA: SET_BIT(DDRA,Copy_u8Pin); break;
    11f8:	aa e3       	ldi	r26, 0x3A	; 58
    11fa:	b0 e0       	ldi	r27, 0x00	; 0
    11fc:	ea e3       	ldi	r30, 0x3A	; 58
    11fe:	f0 e0       	ldi	r31, 0x00	; 0
    1200:	80 81       	ld	r24, Z
    1202:	48 2f       	mov	r20, r24
    1204:	8b 81       	ldd	r24, Y+3	; 0x03
    1206:	28 2f       	mov	r18, r24
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	02 2e       	mov	r0, r18
    1210:	02 c0       	rjmp	.+4      	; 0x1216 <DIO_u8SetPinDirection+0x17e>
    1212:	88 0f       	add	r24, r24
    1214:	99 1f       	adc	r25, r25
    1216:	0a 94       	dec	r0
    1218:	e2 f7       	brpl	.-8      	; 0x1212 <DIO_u8SetPinDirection+0x17a>
    121a:	84 2b       	or	r24, r20
    121c:	8c 93       	st	X, r24
    121e:	44 c0       	rjmp	.+136    	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTB: SET_BIT(DDRB,Copy_u8Pin); break;
    1220:	a7 e3       	ldi	r26, 0x37	; 55
    1222:	b0 e0       	ldi	r27, 0x00	; 0
    1224:	e7 e3       	ldi	r30, 0x37	; 55
    1226:	f0 e0       	ldi	r31, 0x00	; 0
    1228:	80 81       	ld	r24, Z
    122a:	48 2f       	mov	r20, r24
    122c:	8b 81       	ldd	r24, Y+3	; 0x03
    122e:	28 2f       	mov	r18, r24
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	02 2e       	mov	r0, r18
    1238:	02 c0       	rjmp	.+4      	; 0x123e <DIO_u8SetPinDirection+0x1a6>
    123a:	88 0f       	add	r24, r24
    123c:	99 1f       	adc	r25, r25
    123e:	0a 94       	dec	r0
    1240:	e2 f7       	brpl	.-8      	; 0x123a <DIO_u8SetPinDirection+0x1a2>
    1242:	84 2b       	or	r24, r20
    1244:	8c 93       	st	X, r24
    1246:	30 c0       	rjmp	.+96     	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTC: SET_BIT(DDRC,Copy_u8Pin); break;
    1248:	a4 e3       	ldi	r26, 0x34	; 52
    124a:	b0 e0       	ldi	r27, 0x00	; 0
    124c:	e4 e3       	ldi	r30, 0x34	; 52
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	80 81       	ld	r24, Z
    1252:	48 2f       	mov	r20, r24
    1254:	8b 81       	ldd	r24, Y+3	; 0x03
    1256:	28 2f       	mov	r18, r24
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	02 2e       	mov	r0, r18
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <DIO_u8SetPinDirection+0x1ce>
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	0a 94       	dec	r0
    1268:	e2 f7       	brpl	.-8      	; 0x1262 <DIO_u8SetPinDirection+0x1ca>
    126a:	84 2b       	or	r24, r20
    126c:	8c 93       	st	X, r24
    126e:	1c c0       	rjmp	.+56     	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTD: SET_BIT(DDRD,Copy_u8Pin); break;
    1270:	a1 e3       	ldi	r26, 0x31	; 49
    1272:	b0 e0       	ldi	r27, 0x00	; 0
    1274:	e1 e3       	ldi	r30, 0x31	; 49
    1276:	f0 e0       	ldi	r31, 0x00	; 0
    1278:	80 81       	ld	r24, Z
    127a:	48 2f       	mov	r20, r24
    127c:	8b 81       	ldd	r24, Y+3	; 0x03
    127e:	28 2f       	mov	r18, r24
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	81 e0       	ldi	r24, 0x01	; 1
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	02 2e       	mov	r0, r18
    1288:	02 c0       	rjmp	.+4      	; 0x128e <DIO_u8SetPinDirection+0x1f6>
    128a:	88 0f       	add	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	0a 94       	dec	r0
    1290:	e2 f7       	brpl	.-8      	; 0x128a <DIO_u8SetPinDirection+0x1f2>
    1292:	84 2b       	or	r24, r20
    1294:	8c 93       	st	X, r24
    1296:	08 c0       	rjmp	.+16     	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			default: Local_u8ErrorState= NOK; break;
    1298:	81 e0       	ldi	r24, 0x01	; 1
    129a:	89 83       	std	Y+1, r24	; 0x01
    129c:	05 c0       	rjmp	.+10     	; 0x12a8 <DIO_u8SetPinDirection+0x210>
			}
		}
		else
		{
			Local_u8ErrorState = NOK;
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	89 83       	std	Y+1, r24	; 0x01
    12a2:	02 c0       	rjmp	.+4      	; 0x12a8 <DIO_u8SetPinDirection+0x210>
		}
	}
	else
	{
		Local_u8ErrorState = NOK;
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_u8ErrorState;
    12a8:	89 81       	ldd	r24, Y+1	; 0x01
}
    12aa:	28 96       	adiw	r28, 0x08	; 8
    12ac:	0f b6       	in	r0, 0x3f	; 63
    12ae:	f8 94       	cli
    12b0:	de bf       	out	0x3e, r29	; 62
    12b2:	0f be       	out	0x3f, r0	; 63
    12b4:	cd bf       	out	0x3d, r28	; 61
    12b6:	cf 91       	pop	r28
    12b8:	df 91       	pop	r29
    12ba:	08 95       	ret

000012bc <DIO_u8SetPinValue>:

uint8 DIO_u8SetPinValue(uint8 Copy_u8Port, uint8 Copy_u8Pin, uint8 Copy_u8Value)
{
    12bc:	df 93       	push	r29
    12be:	cf 93       	push	r28
    12c0:	cd b7       	in	r28, 0x3d	; 61
    12c2:	de b7       	in	r29, 0x3e	; 62
    12c4:	28 97       	sbiw	r28, 0x08	; 8
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	8a 83       	std	Y+2, r24	; 0x02
    12d2:	6b 83       	std	Y+3, r22	; 0x03
    12d4:	4c 83       	std	Y+4, r20	; 0x04

	uint8 Local_u8ErrorState = OK;
    12d6:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin <= DIO_u8PIN7)
    12d8:	8b 81       	ldd	r24, Y+3	; 0x03
    12da:	88 30       	cpi	r24, 0x08	; 8
    12dc:	08 f0       	brcs	.+2      	; 0x12e0 <DIO_u8SetPinValue+0x24>
    12de:	f4 c0       	rjmp	.+488    	; 0x14c8 <DIO_u8SetPinValue+0x20c>
	{
		if(Copy_u8Value == DIO_u8PIN_LOW)
    12e0:	8c 81       	ldd	r24, Y+4	; 0x04
    12e2:	88 23       	and	r24, r24
    12e4:	09 f0       	breq	.+2      	; 0x12e8 <DIO_u8SetPinValue+0x2c>
    12e6:	77 c0       	rjmp	.+238    	; 0x13d6 <DIO_u8SetPinValue+0x11a>
		{
			switch(Copy_u8Port)
    12e8:	8a 81       	ldd	r24, Y+2	; 0x02
    12ea:	28 2f       	mov	r18, r24
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	38 87       	std	Y+8, r19	; 0x08
    12f0:	2f 83       	std	Y+7, r18	; 0x07
    12f2:	8f 81       	ldd	r24, Y+7	; 0x07
    12f4:	98 85       	ldd	r25, Y+8	; 0x08
    12f6:	81 30       	cpi	r24, 0x01	; 1
    12f8:	91 05       	cpc	r25, r1
    12fa:	59 f1       	breq	.+86     	; 0x1352 <DIO_u8SetPinValue+0x96>
    12fc:	2f 81       	ldd	r18, Y+7	; 0x07
    12fe:	38 85       	ldd	r19, Y+8	; 0x08
    1300:	22 30       	cpi	r18, 0x02	; 2
    1302:	31 05       	cpc	r19, r1
    1304:	2c f4       	brge	.+10     	; 0x1310 <DIO_u8SetPinValue+0x54>
    1306:	8f 81       	ldd	r24, Y+7	; 0x07
    1308:	98 85       	ldd	r25, Y+8	; 0x08
    130a:	00 97       	sbiw	r24, 0x00	; 0
    130c:	69 f0       	breq	.+26     	; 0x1328 <DIO_u8SetPinValue+0x6c>
    130e:	60 c0       	rjmp	.+192    	; 0x13d0 <DIO_u8SetPinValue+0x114>
    1310:	2f 81       	ldd	r18, Y+7	; 0x07
    1312:	38 85       	ldd	r19, Y+8	; 0x08
    1314:	22 30       	cpi	r18, 0x02	; 2
    1316:	31 05       	cpc	r19, r1
    1318:	89 f1       	breq	.+98     	; 0x137c <DIO_u8SetPinValue+0xc0>
    131a:	8f 81       	ldd	r24, Y+7	; 0x07
    131c:	98 85       	ldd	r25, Y+8	; 0x08
    131e:	83 30       	cpi	r24, 0x03	; 3
    1320:	91 05       	cpc	r25, r1
    1322:	09 f4       	brne	.+2      	; 0x1326 <DIO_u8SetPinValue+0x6a>
    1324:	40 c0       	rjmp	.+128    	; 0x13a6 <DIO_u8SetPinValue+0xea>
    1326:	54 c0       	rjmp	.+168    	; 0x13d0 <DIO_u8SetPinValue+0x114>
			{
			case DIO_u8PORTA: CLR_BIT(PORTA,Copy_u8Pin); break;
    1328:	ab e3       	ldi	r26, 0x3B	; 59
    132a:	b0 e0       	ldi	r27, 0x00	; 0
    132c:	eb e3       	ldi	r30, 0x3B	; 59
    132e:	f0 e0       	ldi	r31, 0x00	; 0
    1330:	80 81       	ld	r24, Z
    1332:	48 2f       	mov	r20, r24
    1334:	8b 81       	ldd	r24, Y+3	; 0x03
    1336:	28 2f       	mov	r18, r24
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	81 e0       	ldi	r24, 0x01	; 1
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	02 2e       	mov	r0, r18
    1340:	02 c0       	rjmp	.+4      	; 0x1346 <DIO_u8SetPinValue+0x8a>
    1342:	88 0f       	add	r24, r24
    1344:	99 1f       	adc	r25, r25
    1346:	0a 94       	dec	r0
    1348:	e2 f7       	brpl	.-8      	; 0x1342 <DIO_u8SetPinValue+0x86>
    134a:	80 95       	com	r24
    134c:	84 23       	and	r24, r20
    134e:	8c 93       	st	X, r24
    1350:	bd c0       	rjmp	.+378    	; 0x14cc <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: CLR_BIT(PORTB,Copy_u8Pin); break;
    1352:	a8 e3       	ldi	r26, 0x38	; 56
    1354:	b0 e0       	ldi	r27, 0x00	; 0
    1356:	e8 e3       	ldi	r30, 0x38	; 56
    1358:	f0 e0       	ldi	r31, 0x00	; 0
    135a:	80 81       	ld	r24, Z
    135c:	48 2f       	mov	r20, r24
    135e:	8b 81       	ldd	r24, Y+3	; 0x03
    1360:	28 2f       	mov	r18, r24
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	81 e0       	ldi	r24, 0x01	; 1
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	02 2e       	mov	r0, r18
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <DIO_u8SetPinValue+0xb4>
    136c:	88 0f       	add	r24, r24
    136e:	99 1f       	adc	r25, r25
    1370:	0a 94       	dec	r0
    1372:	e2 f7       	brpl	.-8      	; 0x136c <DIO_u8SetPinValue+0xb0>
    1374:	80 95       	com	r24
    1376:	84 23       	and	r24, r20
    1378:	8c 93       	st	X, r24
    137a:	a8 c0       	rjmp	.+336    	; 0x14cc <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: CLR_BIT(PORTC,Copy_u8Pin); break;
    137c:	a5 e3       	ldi	r26, 0x35	; 53
    137e:	b0 e0       	ldi	r27, 0x00	; 0
    1380:	e5 e3       	ldi	r30, 0x35	; 53
    1382:	f0 e0       	ldi	r31, 0x00	; 0
    1384:	80 81       	ld	r24, Z
    1386:	48 2f       	mov	r20, r24
    1388:	8b 81       	ldd	r24, Y+3	; 0x03
    138a:	28 2f       	mov	r18, r24
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	02 2e       	mov	r0, r18
    1394:	02 c0       	rjmp	.+4      	; 0x139a <DIO_u8SetPinValue+0xde>
    1396:	88 0f       	add	r24, r24
    1398:	99 1f       	adc	r25, r25
    139a:	0a 94       	dec	r0
    139c:	e2 f7       	brpl	.-8      	; 0x1396 <DIO_u8SetPinValue+0xda>
    139e:	80 95       	com	r24
    13a0:	84 23       	and	r24, r20
    13a2:	8c 93       	st	X, r24
    13a4:	93 c0       	rjmp	.+294    	; 0x14cc <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: CLR_BIT(PORTD,Copy_u8Pin); break;
    13a6:	a2 e3       	ldi	r26, 0x32	; 50
    13a8:	b0 e0       	ldi	r27, 0x00	; 0
    13aa:	e2 e3       	ldi	r30, 0x32	; 50
    13ac:	f0 e0       	ldi	r31, 0x00	; 0
    13ae:	80 81       	ld	r24, Z
    13b0:	48 2f       	mov	r20, r24
    13b2:	8b 81       	ldd	r24, Y+3	; 0x03
    13b4:	28 2f       	mov	r18, r24
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	81 e0       	ldi	r24, 0x01	; 1
    13ba:	90 e0       	ldi	r25, 0x00	; 0
    13bc:	02 2e       	mov	r0, r18
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <DIO_u8SetPinValue+0x108>
    13c0:	88 0f       	add	r24, r24
    13c2:	99 1f       	adc	r25, r25
    13c4:	0a 94       	dec	r0
    13c6:	e2 f7       	brpl	.-8      	; 0x13c0 <DIO_u8SetPinValue+0x104>
    13c8:	80 95       	com	r24
    13ca:	84 23       	and	r24, r20
    13cc:	8c 93       	st	X, r24
    13ce:	7e c0       	rjmp	.+252    	; 0x14cc <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState= NOK; break;
    13d0:	81 e0       	ldi	r24, 0x01	; 1
    13d2:	89 83       	std	Y+1, r24	; 0x01
    13d4:	7b c0       	rjmp	.+246    	; 0x14cc <DIO_u8SetPinValue+0x210>
			}
		}
		else if(Copy_u8Value == DIO_u8PIN_HIGH)
    13d6:	8c 81       	ldd	r24, Y+4	; 0x04
    13d8:	81 30       	cpi	r24, 0x01	; 1
    13da:	09 f0       	breq	.+2      	; 0x13de <DIO_u8SetPinValue+0x122>
    13dc:	72 c0       	rjmp	.+228    	; 0x14c2 <DIO_u8SetPinValue+0x206>
		{
			switch(Copy_u8Port)
    13de:	8a 81       	ldd	r24, Y+2	; 0x02
    13e0:	28 2f       	mov	r18, r24
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	3e 83       	std	Y+6, r19	; 0x06
    13e6:	2d 83       	std	Y+5, r18	; 0x05
    13e8:	8d 81       	ldd	r24, Y+5	; 0x05
    13ea:	9e 81       	ldd	r25, Y+6	; 0x06
    13ec:	81 30       	cpi	r24, 0x01	; 1
    13ee:	91 05       	cpc	r25, r1
    13f0:	49 f1       	breq	.+82     	; 0x1444 <DIO_u8SetPinValue+0x188>
    13f2:	2d 81       	ldd	r18, Y+5	; 0x05
    13f4:	3e 81       	ldd	r19, Y+6	; 0x06
    13f6:	22 30       	cpi	r18, 0x02	; 2
    13f8:	31 05       	cpc	r19, r1
    13fa:	2c f4       	brge	.+10     	; 0x1406 <DIO_u8SetPinValue+0x14a>
    13fc:	8d 81       	ldd	r24, Y+5	; 0x05
    13fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1400:	00 97       	sbiw	r24, 0x00	; 0
    1402:	61 f0       	breq	.+24     	; 0x141c <DIO_u8SetPinValue+0x160>
    1404:	5b c0       	rjmp	.+182    	; 0x14bc <DIO_u8SetPinValue+0x200>
    1406:	2d 81       	ldd	r18, Y+5	; 0x05
    1408:	3e 81       	ldd	r19, Y+6	; 0x06
    140a:	22 30       	cpi	r18, 0x02	; 2
    140c:	31 05       	cpc	r19, r1
    140e:	71 f1       	breq	.+92     	; 0x146c <DIO_u8SetPinValue+0x1b0>
    1410:	8d 81       	ldd	r24, Y+5	; 0x05
    1412:	9e 81       	ldd	r25, Y+6	; 0x06
    1414:	83 30       	cpi	r24, 0x03	; 3
    1416:	91 05       	cpc	r25, r1
    1418:	e9 f1       	breq	.+122    	; 0x1494 <DIO_u8SetPinValue+0x1d8>
    141a:	50 c0       	rjmp	.+160    	; 0x14bc <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA: SET_BIT(PORTA,Copy_u8Pin); break;
    141c:	ab e3       	ldi	r26, 0x3B	; 59
    141e:	b0 e0       	ldi	r27, 0x00	; 0
    1420:	eb e3       	ldi	r30, 0x3B	; 59
    1422:	f0 e0       	ldi	r31, 0x00	; 0
    1424:	80 81       	ld	r24, Z
    1426:	48 2f       	mov	r20, r24
    1428:	8b 81       	ldd	r24, Y+3	; 0x03
    142a:	28 2f       	mov	r18, r24
    142c:	30 e0       	ldi	r19, 0x00	; 0
    142e:	81 e0       	ldi	r24, 0x01	; 1
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	02 2e       	mov	r0, r18
    1434:	02 c0       	rjmp	.+4      	; 0x143a <DIO_u8SetPinValue+0x17e>
    1436:	88 0f       	add	r24, r24
    1438:	99 1f       	adc	r25, r25
    143a:	0a 94       	dec	r0
    143c:	e2 f7       	brpl	.-8      	; 0x1436 <DIO_u8SetPinValue+0x17a>
    143e:	84 2b       	or	r24, r20
    1440:	8c 93       	st	X, r24
    1442:	44 c0       	rjmp	.+136    	; 0x14cc <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: SET_BIT(PORTB,Copy_u8Pin); break;
    1444:	a8 e3       	ldi	r26, 0x38	; 56
    1446:	b0 e0       	ldi	r27, 0x00	; 0
    1448:	e8 e3       	ldi	r30, 0x38	; 56
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	80 81       	ld	r24, Z
    144e:	48 2f       	mov	r20, r24
    1450:	8b 81       	ldd	r24, Y+3	; 0x03
    1452:	28 2f       	mov	r18, r24
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	81 e0       	ldi	r24, 0x01	; 1
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	02 2e       	mov	r0, r18
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <DIO_u8SetPinValue+0x1a6>
    145e:	88 0f       	add	r24, r24
    1460:	99 1f       	adc	r25, r25
    1462:	0a 94       	dec	r0
    1464:	e2 f7       	brpl	.-8      	; 0x145e <DIO_u8SetPinValue+0x1a2>
    1466:	84 2b       	or	r24, r20
    1468:	8c 93       	st	X, r24
    146a:	30 c0       	rjmp	.+96     	; 0x14cc <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: SET_BIT(PORTC,Copy_u8Pin); break;
    146c:	a5 e3       	ldi	r26, 0x35	; 53
    146e:	b0 e0       	ldi	r27, 0x00	; 0
    1470:	e5 e3       	ldi	r30, 0x35	; 53
    1472:	f0 e0       	ldi	r31, 0x00	; 0
    1474:	80 81       	ld	r24, Z
    1476:	48 2f       	mov	r20, r24
    1478:	8b 81       	ldd	r24, Y+3	; 0x03
    147a:	28 2f       	mov	r18, r24
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	02 2e       	mov	r0, r18
    1484:	02 c0       	rjmp	.+4      	; 0x148a <DIO_u8SetPinValue+0x1ce>
    1486:	88 0f       	add	r24, r24
    1488:	99 1f       	adc	r25, r25
    148a:	0a 94       	dec	r0
    148c:	e2 f7       	brpl	.-8      	; 0x1486 <DIO_u8SetPinValue+0x1ca>
    148e:	84 2b       	or	r24, r20
    1490:	8c 93       	st	X, r24
    1492:	1c c0       	rjmp	.+56     	; 0x14cc <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: SET_BIT(PORTD,Copy_u8Pin); break;
    1494:	a2 e3       	ldi	r26, 0x32	; 50
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	e2 e3       	ldi	r30, 0x32	; 50
    149a:	f0 e0       	ldi	r31, 0x00	; 0
    149c:	80 81       	ld	r24, Z
    149e:	48 2f       	mov	r20, r24
    14a0:	8b 81       	ldd	r24, Y+3	; 0x03
    14a2:	28 2f       	mov	r18, r24
    14a4:	30 e0       	ldi	r19, 0x00	; 0
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	02 2e       	mov	r0, r18
    14ac:	02 c0       	rjmp	.+4      	; 0x14b2 <DIO_u8SetPinValue+0x1f6>
    14ae:	88 0f       	add	r24, r24
    14b0:	99 1f       	adc	r25, r25
    14b2:	0a 94       	dec	r0
    14b4:	e2 f7       	brpl	.-8      	; 0x14ae <DIO_u8SetPinValue+0x1f2>
    14b6:	84 2b       	or	r24, r20
    14b8:	8c 93       	st	X, r24
    14ba:	08 c0       	rjmp	.+16     	; 0x14cc <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState= NOK; break;
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	89 83       	std	Y+1, r24	; 0x01
    14c0:	05 c0       	rjmp	.+10     	; 0x14cc <DIO_u8SetPinValue+0x210>
			}
		}
		else
		{
			Local_u8ErrorState = NOK;
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	89 83       	std	Y+1, r24	; 0x01
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <DIO_u8SetPinValue+0x210>
		}
	}
	else
	{
		Local_u8ErrorState = NOK;
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_u8ErrorState;
    14cc:	89 81       	ldd	r24, Y+1	; 0x01

}
    14ce:	28 96       	adiw	r28, 0x08	; 8
    14d0:	0f b6       	in	r0, 0x3f	; 63
    14d2:	f8 94       	cli
    14d4:	de bf       	out	0x3e, r29	; 62
    14d6:	0f be       	out	0x3f, r0	; 63
    14d8:	cd bf       	out	0x3d, r28	; 61
    14da:	cf 91       	pop	r28
    14dc:	df 91       	pop	r29
    14de:	08 95       	ret

000014e0 <DIO_u8GetPinValue>:

uint8 DIO_u8GetPinValue(uint8 Copy_u8Port, uint8 Copy_u8Pin, uint8* Copy_pu8Value)
{
    14e0:	df 93       	push	r29
    14e2:	cf 93       	push	r28
    14e4:	cd b7       	in	r28, 0x3d	; 61
    14e6:	de b7       	in	r29, 0x3e	; 62
    14e8:	27 97       	sbiw	r28, 0x07	; 7
    14ea:	0f b6       	in	r0, 0x3f	; 63
    14ec:	f8 94       	cli
    14ee:	de bf       	out	0x3e, r29	; 62
    14f0:	0f be       	out	0x3f, r0	; 63
    14f2:	cd bf       	out	0x3d, r28	; 61
    14f4:	8a 83       	std	Y+2, r24	; 0x02
    14f6:	6b 83       	std	Y+3, r22	; 0x03
    14f8:	5d 83       	std	Y+5, r21	; 0x05
    14fa:	4c 83       	std	Y+4, r20	; 0x04
	uint8 Local_u8ErrorState = OK;
    14fc:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_pu8Value != NULL)
    14fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1500:	9d 81       	ldd	r25, Y+5	; 0x05
    1502:	00 97       	sbiw	r24, 0x00	; 0
    1504:	09 f4       	brne	.+2      	; 0x1508 <DIO_u8GetPinValue+0x28>
    1506:	7b c0       	rjmp	.+246    	; 0x15fe <DIO_u8GetPinValue+0x11e>
	{
		if(Copy_u8Pin<= DIO_u8PIN7)
    1508:	8b 81       	ldd	r24, Y+3	; 0x03
    150a:	88 30       	cpi	r24, 0x08	; 8
    150c:	08 f0       	brcs	.+2      	; 0x1510 <DIO_u8GetPinValue+0x30>
    150e:	74 c0       	rjmp	.+232    	; 0x15f8 <DIO_u8GetPinValue+0x118>
		{
			switch(Copy_u8Port)
    1510:	8a 81       	ldd	r24, Y+2	; 0x02
    1512:	28 2f       	mov	r18, r24
    1514:	30 e0       	ldi	r19, 0x00	; 0
    1516:	3f 83       	std	Y+7, r19	; 0x07
    1518:	2e 83       	std	Y+6, r18	; 0x06
    151a:	4e 81       	ldd	r20, Y+6	; 0x06
    151c:	5f 81       	ldd	r21, Y+7	; 0x07
    151e:	41 30       	cpi	r20, 0x01	; 1
    1520:	51 05       	cpc	r21, r1
    1522:	59 f1       	breq	.+86     	; 0x157a <DIO_u8GetPinValue+0x9a>
    1524:	8e 81       	ldd	r24, Y+6	; 0x06
    1526:	9f 81       	ldd	r25, Y+7	; 0x07
    1528:	82 30       	cpi	r24, 0x02	; 2
    152a:	91 05       	cpc	r25, r1
    152c:	34 f4       	brge	.+12     	; 0x153a <DIO_u8GetPinValue+0x5a>
    152e:	2e 81       	ldd	r18, Y+6	; 0x06
    1530:	3f 81       	ldd	r19, Y+7	; 0x07
    1532:	21 15       	cp	r18, r1
    1534:	31 05       	cpc	r19, r1
    1536:	69 f0       	breq	.+26     	; 0x1552 <DIO_u8GetPinValue+0x72>
    1538:	5c c0       	rjmp	.+184    	; 0x15f2 <DIO_u8GetPinValue+0x112>
    153a:	4e 81       	ldd	r20, Y+6	; 0x06
    153c:	5f 81       	ldd	r21, Y+7	; 0x07
    153e:	42 30       	cpi	r20, 0x02	; 2
    1540:	51 05       	cpc	r21, r1
    1542:	79 f1       	breq	.+94     	; 0x15a2 <DIO_u8GetPinValue+0xc2>
    1544:	8e 81       	ldd	r24, Y+6	; 0x06
    1546:	9f 81       	ldd	r25, Y+7	; 0x07
    1548:	83 30       	cpi	r24, 0x03	; 3
    154a:	91 05       	cpc	r25, r1
    154c:	09 f4       	brne	.+2      	; 0x1550 <DIO_u8GetPinValue+0x70>
    154e:	3d c0       	rjmp	.+122    	; 0x15ca <DIO_u8GetPinValue+0xea>
    1550:	50 c0       	rjmp	.+160    	; 0x15f2 <DIO_u8GetPinValue+0x112>
			{
			case DIO_u8PORTA: *Copy_pu8Value= GET_BIT(PINA, Copy_u8Pin); break;
    1552:	e9 e3       	ldi	r30, 0x39	; 57
    1554:	f0 e0       	ldi	r31, 0x00	; 0
    1556:	80 81       	ld	r24, Z
    1558:	28 2f       	mov	r18, r24
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	8b 81       	ldd	r24, Y+3	; 0x03
    155e:	88 2f       	mov	r24, r24
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	a9 01       	movw	r20, r18
    1564:	02 c0       	rjmp	.+4      	; 0x156a <DIO_u8GetPinValue+0x8a>
    1566:	55 95       	asr	r21
    1568:	47 95       	ror	r20
    156a:	8a 95       	dec	r24
    156c:	e2 f7       	brpl	.-8      	; 0x1566 <DIO_u8GetPinValue+0x86>
    156e:	ca 01       	movw	r24, r20
    1570:	81 70       	andi	r24, 0x01	; 1
    1572:	ec 81       	ldd	r30, Y+4	; 0x04
    1574:	fd 81       	ldd	r31, Y+5	; 0x05
    1576:	80 83       	st	Z, r24
    1578:	44 c0       	rjmp	.+136    	; 0x1602 <DIO_u8GetPinValue+0x122>
			case DIO_u8PORTB: *Copy_pu8Value= GET_BIT(PINB, Copy_u8Pin); break;
    157a:	e6 e3       	ldi	r30, 0x36	; 54
    157c:	f0 e0       	ldi	r31, 0x00	; 0
    157e:	80 81       	ld	r24, Z
    1580:	28 2f       	mov	r18, r24
    1582:	30 e0       	ldi	r19, 0x00	; 0
    1584:	8b 81       	ldd	r24, Y+3	; 0x03
    1586:	88 2f       	mov	r24, r24
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	a9 01       	movw	r20, r18
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <DIO_u8GetPinValue+0xb2>
    158e:	55 95       	asr	r21
    1590:	47 95       	ror	r20
    1592:	8a 95       	dec	r24
    1594:	e2 f7       	brpl	.-8      	; 0x158e <DIO_u8GetPinValue+0xae>
    1596:	ca 01       	movw	r24, r20
    1598:	81 70       	andi	r24, 0x01	; 1
    159a:	ec 81       	ldd	r30, Y+4	; 0x04
    159c:	fd 81       	ldd	r31, Y+5	; 0x05
    159e:	80 83       	st	Z, r24
    15a0:	30 c0       	rjmp	.+96     	; 0x1602 <DIO_u8GetPinValue+0x122>
			case DIO_u8PORTC: *Copy_pu8Value= GET_BIT(PINC, Copy_u8Pin); break;
    15a2:	e3 e3       	ldi	r30, 0x33	; 51
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	80 81       	ld	r24, Z
    15a8:	28 2f       	mov	r18, r24
    15aa:	30 e0       	ldi	r19, 0x00	; 0
    15ac:	8b 81       	ldd	r24, Y+3	; 0x03
    15ae:	88 2f       	mov	r24, r24
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	a9 01       	movw	r20, r18
    15b4:	02 c0       	rjmp	.+4      	; 0x15ba <DIO_u8GetPinValue+0xda>
    15b6:	55 95       	asr	r21
    15b8:	47 95       	ror	r20
    15ba:	8a 95       	dec	r24
    15bc:	e2 f7       	brpl	.-8      	; 0x15b6 <DIO_u8GetPinValue+0xd6>
    15be:	ca 01       	movw	r24, r20
    15c0:	81 70       	andi	r24, 0x01	; 1
    15c2:	ec 81       	ldd	r30, Y+4	; 0x04
    15c4:	fd 81       	ldd	r31, Y+5	; 0x05
    15c6:	80 83       	st	Z, r24
    15c8:	1c c0       	rjmp	.+56     	; 0x1602 <DIO_u8GetPinValue+0x122>
			case DIO_u8PORTD: *Copy_pu8Value= GET_BIT(PIND, Copy_u8Pin); break;
    15ca:	e0 e3       	ldi	r30, 0x30	; 48
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	80 81       	ld	r24, Z
    15d0:	28 2f       	mov	r18, r24
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	8b 81       	ldd	r24, Y+3	; 0x03
    15d6:	88 2f       	mov	r24, r24
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	a9 01       	movw	r20, r18
    15dc:	02 c0       	rjmp	.+4      	; 0x15e2 <DIO_u8GetPinValue+0x102>
    15de:	55 95       	asr	r21
    15e0:	47 95       	ror	r20
    15e2:	8a 95       	dec	r24
    15e4:	e2 f7       	brpl	.-8      	; 0x15de <DIO_u8GetPinValue+0xfe>
    15e6:	ca 01       	movw	r24, r20
    15e8:	81 70       	andi	r24, 0x01	; 1
    15ea:	ec 81       	ldd	r30, Y+4	; 0x04
    15ec:	fd 81       	ldd	r31, Y+5	; 0x05
    15ee:	80 83       	st	Z, r24
    15f0:	08 c0       	rjmp	.+16     	; 0x1602 <DIO_u8GetPinValue+0x122>
			default: Local_u8ErrorState= NOK; break;
    15f2:	81 e0       	ldi	r24, 0x01	; 1
    15f4:	89 83       	std	Y+1, r24	; 0x01
    15f6:	05 c0       	rjmp	.+10     	; 0x1602 <DIO_u8GetPinValue+0x122>
			}
		}
		else
		{
			Local_u8ErrorState = NOK;
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	89 83       	std	Y+1, r24	; 0x01
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <DIO_u8GetPinValue+0x122>
		}
	}
	else
	{
		Local_u8ErrorState= NULL_PTR_ERR;
    15fe:	82 e0       	ldi	r24, 0x02	; 2
    1600:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1602:	89 81       	ldd	r24, Y+1	; 0x01
}
    1604:	27 96       	adiw	r28, 0x07	; 7
    1606:	0f b6       	in	r0, 0x3f	; 63
    1608:	f8 94       	cli
    160a:	de bf       	out	0x3e, r29	; 62
    160c:	0f be       	out	0x3f, r0	; 63
    160e:	cd bf       	out	0x3d, r28	; 61
    1610:	cf 91       	pop	r28
    1612:	df 91       	pop	r29
    1614:	08 95       	ret

00001616 <DIO_u8SetPortDirection>:

uint8 DIO_u8SetPortDirection(uint8 Copy_u8Port, uint8 Copy_u8Direction)
{
    1616:	df 93       	push	r29
    1618:	cf 93       	push	r28
    161a:	00 d0       	rcall	.+0      	; 0x161c <DIO_u8SetPortDirection+0x6>
    161c:	00 d0       	rcall	.+0      	; 0x161e <DIO_u8SetPortDirection+0x8>
    161e:	0f 92       	push	r0
    1620:	cd b7       	in	r28, 0x3d	; 61
    1622:	de b7       	in	r29, 0x3e	; 62
    1624:	8a 83       	std	Y+2, r24	; 0x02
    1626:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8ErrorState = OK;
    1628:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
    162a:	8a 81       	ldd	r24, Y+2	; 0x02
    162c:	28 2f       	mov	r18, r24
    162e:	30 e0       	ldi	r19, 0x00	; 0
    1630:	3d 83       	std	Y+5, r19	; 0x05
    1632:	2c 83       	std	Y+4, r18	; 0x04
    1634:	8c 81       	ldd	r24, Y+4	; 0x04
    1636:	9d 81       	ldd	r25, Y+5	; 0x05
    1638:	81 30       	cpi	r24, 0x01	; 1
    163a:	91 05       	cpc	r25, r1
    163c:	d1 f0       	breq	.+52     	; 0x1672 <DIO_u8SetPortDirection+0x5c>
    163e:	2c 81       	ldd	r18, Y+4	; 0x04
    1640:	3d 81       	ldd	r19, Y+5	; 0x05
    1642:	22 30       	cpi	r18, 0x02	; 2
    1644:	31 05       	cpc	r19, r1
    1646:	2c f4       	brge	.+10     	; 0x1652 <DIO_u8SetPortDirection+0x3c>
    1648:	8c 81       	ldd	r24, Y+4	; 0x04
    164a:	9d 81       	ldd	r25, Y+5	; 0x05
    164c:	00 97       	sbiw	r24, 0x00	; 0
    164e:	61 f0       	breq	.+24     	; 0x1668 <DIO_u8SetPortDirection+0x52>
    1650:	1f c0       	rjmp	.+62     	; 0x1690 <DIO_u8SetPortDirection+0x7a>
    1652:	2c 81       	ldd	r18, Y+4	; 0x04
    1654:	3d 81       	ldd	r19, Y+5	; 0x05
    1656:	22 30       	cpi	r18, 0x02	; 2
    1658:	31 05       	cpc	r19, r1
    165a:	81 f0       	breq	.+32     	; 0x167c <DIO_u8SetPortDirection+0x66>
    165c:	8c 81       	ldd	r24, Y+4	; 0x04
    165e:	9d 81       	ldd	r25, Y+5	; 0x05
    1660:	83 30       	cpi	r24, 0x03	; 3
    1662:	91 05       	cpc	r25, r1
    1664:	81 f0       	breq	.+32     	; 0x1686 <DIO_u8SetPortDirection+0x70>
    1666:	14 c0       	rjmp	.+40     	; 0x1690 <DIO_u8SetPortDirection+0x7a>
	{
	case DIO_u8PORTA: DDRA = Copy_u8Direction; break;
    1668:	ea e3       	ldi	r30, 0x3A	; 58
    166a:	f0 e0       	ldi	r31, 0x00	; 0
    166c:	8b 81       	ldd	r24, Y+3	; 0x03
    166e:	80 83       	st	Z, r24
    1670:	11 c0       	rjmp	.+34     	; 0x1694 <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTB: DDRB = Copy_u8Direction; break;
    1672:	e7 e3       	ldi	r30, 0x37	; 55
    1674:	f0 e0       	ldi	r31, 0x00	; 0
    1676:	8b 81       	ldd	r24, Y+3	; 0x03
    1678:	80 83       	st	Z, r24
    167a:	0c c0       	rjmp	.+24     	; 0x1694 <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTC: DDRC = Copy_u8Direction; break;
    167c:	e4 e3       	ldi	r30, 0x34	; 52
    167e:	f0 e0       	ldi	r31, 0x00	; 0
    1680:	8b 81       	ldd	r24, Y+3	; 0x03
    1682:	80 83       	st	Z, r24
    1684:	07 c0       	rjmp	.+14     	; 0x1694 <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTD: DDRD = Copy_u8Direction; break;
    1686:	e1 e3       	ldi	r30, 0x31	; 49
    1688:	f0 e0       	ldi	r31, 0x00	; 0
    168a:	8b 81       	ldd	r24, Y+3	; 0x03
    168c:	80 83       	st	Z, r24
    168e:	02 c0       	rjmp	.+4      	; 0x1694 <DIO_u8SetPortDirection+0x7e>
	default: Local_u8ErrorState= NOK; break;
    1690:	81 e0       	ldi	r24, 0x01	; 1
    1692:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
    1694:	89 81       	ldd	r24, Y+1	; 0x01
}
    1696:	0f 90       	pop	r0
    1698:	0f 90       	pop	r0
    169a:	0f 90       	pop	r0
    169c:	0f 90       	pop	r0
    169e:	0f 90       	pop	r0
    16a0:	cf 91       	pop	r28
    16a2:	df 91       	pop	r29
    16a4:	08 95       	ret

000016a6 <DIO_u8SetPortValue>:

uint8 DIO_u8SetPortValue(uint8 Copy_u8Port, uint8 Copy_u8Value)
{
    16a6:	df 93       	push	r29
    16a8:	cf 93       	push	r28
    16aa:	00 d0       	rcall	.+0      	; 0x16ac <DIO_u8SetPortValue+0x6>
    16ac:	00 d0       	rcall	.+0      	; 0x16ae <DIO_u8SetPortValue+0x8>
    16ae:	0f 92       	push	r0
    16b0:	cd b7       	in	r28, 0x3d	; 61
    16b2:	de b7       	in	r29, 0x3e	; 62
    16b4:	8a 83       	std	Y+2, r24	; 0x02
    16b6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8ErrorState = OK;
    16b8:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
    16ba:	8a 81       	ldd	r24, Y+2	; 0x02
    16bc:	28 2f       	mov	r18, r24
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	3d 83       	std	Y+5, r19	; 0x05
    16c2:	2c 83       	std	Y+4, r18	; 0x04
    16c4:	8c 81       	ldd	r24, Y+4	; 0x04
    16c6:	9d 81       	ldd	r25, Y+5	; 0x05
    16c8:	81 30       	cpi	r24, 0x01	; 1
    16ca:	91 05       	cpc	r25, r1
    16cc:	d1 f0       	breq	.+52     	; 0x1702 <DIO_u8SetPortValue+0x5c>
    16ce:	2c 81       	ldd	r18, Y+4	; 0x04
    16d0:	3d 81       	ldd	r19, Y+5	; 0x05
    16d2:	22 30       	cpi	r18, 0x02	; 2
    16d4:	31 05       	cpc	r19, r1
    16d6:	2c f4       	brge	.+10     	; 0x16e2 <DIO_u8SetPortValue+0x3c>
    16d8:	8c 81       	ldd	r24, Y+4	; 0x04
    16da:	9d 81       	ldd	r25, Y+5	; 0x05
    16dc:	00 97       	sbiw	r24, 0x00	; 0
    16de:	61 f0       	breq	.+24     	; 0x16f8 <DIO_u8SetPortValue+0x52>
    16e0:	1f c0       	rjmp	.+62     	; 0x1720 <DIO_u8SetPortValue+0x7a>
    16e2:	2c 81       	ldd	r18, Y+4	; 0x04
    16e4:	3d 81       	ldd	r19, Y+5	; 0x05
    16e6:	22 30       	cpi	r18, 0x02	; 2
    16e8:	31 05       	cpc	r19, r1
    16ea:	81 f0       	breq	.+32     	; 0x170c <DIO_u8SetPortValue+0x66>
    16ec:	8c 81       	ldd	r24, Y+4	; 0x04
    16ee:	9d 81       	ldd	r25, Y+5	; 0x05
    16f0:	83 30       	cpi	r24, 0x03	; 3
    16f2:	91 05       	cpc	r25, r1
    16f4:	81 f0       	breq	.+32     	; 0x1716 <DIO_u8SetPortValue+0x70>
    16f6:	14 c0       	rjmp	.+40     	; 0x1720 <DIO_u8SetPortValue+0x7a>
	{
	case DIO_u8PORTA: PORTA = Copy_u8Value; break;
    16f8:	eb e3       	ldi	r30, 0x3B	; 59
    16fa:	f0 e0       	ldi	r31, 0x00	; 0
    16fc:	8b 81       	ldd	r24, Y+3	; 0x03
    16fe:	80 83       	st	Z, r24
    1700:	11 c0       	rjmp	.+34     	; 0x1724 <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTB: PORTB = Copy_u8Value; break;
    1702:	e8 e3       	ldi	r30, 0x38	; 56
    1704:	f0 e0       	ldi	r31, 0x00	; 0
    1706:	8b 81       	ldd	r24, Y+3	; 0x03
    1708:	80 83       	st	Z, r24
    170a:	0c c0       	rjmp	.+24     	; 0x1724 <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTC: PORTC = Copy_u8Value; break;
    170c:	e5 e3       	ldi	r30, 0x35	; 53
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	8b 81       	ldd	r24, Y+3	; 0x03
    1712:	80 83       	st	Z, r24
    1714:	07 c0       	rjmp	.+14     	; 0x1724 <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTD: PORTD = Copy_u8Value; break;
    1716:	e2 e3       	ldi	r30, 0x32	; 50
    1718:	f0 e0       	ldi	r31, 0x00	; 0
    171a:	8b 81       	ldd	r24, Y+3	; 0x03
    171c:	80 83       	st	Z, r24
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <DIO_u8SetPortValue+0x7e>
	default: Local_u8ErrorState= NOK; break;
    1720:	81 e0       	ldi	r24, 0x01	; 1
    1722:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1724:	89 81       	ldd	r24, Y+1	; 0x01
}
    1726:	0f 90       	pop	r0
    1728:	0f 90       	pop	r0
    172a:	0f 90       	pop	r0
    172c:	0f 90       	pop	r0
    172e:	0f 90       	pop	r0
    1730:	cf 91       	pop	r28
    1732:	df 91       	pop	r29
    1734:	08 95       	ret

00001736 <DIO_u8TogglePinValue>:

uint8 DIO_u8TogglePinValue(uint8 Copy_u8Port, uint8 Copy_u8Pin)
{
    1736:	df 93       	push	r29
    1738:	cf 93       	push	r28
    173a:	00 d0       	rcall	.+0      	; 0x173c <DIO_u8TogglePinValue+0x6>
    173c:	00 d0       	rcall	.+0      	; 0x173e <DIO_u8TogglePinValue+0x8>
    173e:	0f 92       	push	r0
    1740:	cd b7       	in	r28, 0x3d	; 61
    1742:	de b7       	in	r29, 0x3e	; 62
    1744:	8a 83       	std	Y+2, r24	; 0x02
    1746:	6b 83       	std	Y+3, r22	; 0x03
	uint8 Local_u8ErrorState = OK;
    1748:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin <= DIO_u8PIN7)
    174a:	8b 81       	ldd	r24, Y+3	; 0x03
    174c:	88 30       	cpi	r24, 0x08	; 8
    174e:	08 f0       	brcs	.+2      	; 0x1752 <DIO_u8TogglePinValue+0x1c>
    1750:	72 c0       	rjmp	.+228    	; 0x1836 <DIO_u8TogglePinValue+0x100>
	{
		switch(Copy_u8Port)
    1752:	8a 81       	ldd	r24, Y+2	; 0x02
    1754:	28 2f       	mov	r18, r24
    1756:	30 e0       	ldi	r19, 0x00	; 0
    1758:	3d 83       	std	Y+5, r19	; 0x05
    175a:	2c 83       	std	Y+4, r18	; 0x04
    175c:	8c 81       	ldd	r24, Y+4	; 0x04
    175e:	9d 81       	ldd	r25, Y+5	; 0x05
    1760:	81 30       	cpi	r24, 0x01	; 1
    1762:	91 05       	cpc	r25, r1
    1764:	49 f1       	breq	.+82     	; 0x17b8 <DIO_u8TogglePinValue+0x82>
    1766:	2c 81       	ldd	r18, Y+4	; 0x04
    1768:	3d 81       	ldd	r19, Y+5	; 0x05
    176a:	22 30       	cpi	r18, 0x02	; 2
    176c:	31 05       	cpc	r19, r1
    176e:	2c f4       	brge	.+10     	; 0x177a <DIO_u8TogglePinValue+0x44>
    1770:	8c 81       	ldd	r24, Y+4	; 0x04
    1772:	9d 81       	ldd	r25, Y+5	; 0x05
    1774:	00 97       	sbiw	r24, 0x00	; 0
    1776:	61 f0       	breq	.+24     	; 0x1790 <DIO_u8TogglePinValue+0x5a>
    1778:	5b c0       	rjmp	.+182    	; 0x1830 <DIO_u8TogglePinValue+0xfa>
    177a:	2c 81       	ldd	r18, Y+4	; 0x04
    177c:	3d 81       	ldd	r19, Y+5	; 0x05
    177e:	22 30       	cpi	r18, 0x02	; 2
    1780:	31 05       	cpc	r19, r1
    1782:	71 f1       	breq	.+92     	; 0x17e0 <DIO_u8TogglePinValue+0xaa>
    1784:	8c 81       	ldd	r24, Y+4	; 0x04
    1786:	9d 81       	ldd	r25, Y+5	; 0x05
    1788:	83 30       	cpi	r24, 0x03	; 3
    178a:	91 05       	cpc	r25, r1
    178c:	e9 f1       	breq	.+122    	; 0x1808 <DIO_u8TogglePinValue+0xd2>
    178e:	50 c0       	rjmp	.+160    	; 0x1830 <DIO_u8TogglePinValue+0xfa>
		{
		case DIO_u8PORTA: TOG_BIT(PORTA,Copy_u8Pin); break;
    1790:	ab e3       	ldi	r26, 0x3B	; 59
    1792:	b0 e0       	ldi	r27, 0x00	; 0
    1794:	eb e3       	ldi	r30, 0x3B	; 59
    1796:	f0 e0       	ldi	r31, 0x00	; 0
    1798:	80 81       	ld	r24, Z
    179a:	48 2f       	mov	r20, r24
    179c:	8b 81       	ldd	r24, Y+3	; 0x03
    179e:	28 2f       	mov	r18, r24
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	81 e0       	ldi	r24, 0x01	; 1
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	02 2e       	mov	r0, r18
    17a8:	02 c0       	rjmp	.+4      	; 0x17ae <DIO_u8TogglePinValue+0x78>
    17aa:	88 0f       	add	r24, r24
    17ac:	99 1f       	adc	r25, r25
    17ae:	0a 94       	dec	r0
    17b0:	e2 f7       	brpl	.-8      	; 0x17aa <DIO_u8TogglePinValue+0x74>
    17b2:	84 27       	eor	r24, r20
    17b4:	8c 93       	st	X, r24
    17b6:	41 c0       	rjmp	.+130    	; 0x183a <DIO_u8TogglePinValue+0x104>
		case DIO_u8PORTB: TOG_BIT(PORTB,Copy_u8Pin); break;
    17b8:	a8 e3       	ldi	r26, 0x38	; 56
    17ba:	b0 e0       	ldi	r27, 0x00	; 0
    17bc:	e8 e3       	ldi	r30, 0x38	; 56
    17be:	f0 e0       	ldi	r31, 0x00	; 0
    17c0:	80 81       	ld	r24, Z
    17c2:	48 2f       	mov	r20, r24
    17c4:	8b 81       	ldd	r24, Y+3	; 0x03
    17c6:	28 2f       	mov	r18, r24
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	81 e0       	ldi	r24, 0x01	; 1
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	02 2e       	mov	r0, r18
    17d0:	02 c0       	rjmp	.+4      	; 0x17d6 <DIO_u8TogglePinValue+0xa0>
    17d2:	88 0f       	add	r24, r24
    17d4:	99 1f       	adc	r25, r25
    17d6:	0a 94       	dec	r0
    17d8:	e2 f7       	brpl	.-8      	; 0x17d2 <DIO_u8TogglePinValue+0x9c>
    17da:	84 27       	eor	r24, r20
    17dc:	8c 93       	st	X, r24
    17de:	2d c0       	rjmp	.+90     	; 0x183a <DIO_u8TogglePinValue+0x104>
		case DIO_u8PORTC: TOG_BIT(PORTC,Copy_u8Pin); break;
    17e0:	a5 e3       	ldi	r26, 0x35	; 53
    17e2:	b0 e0       	ldi	r27, 0x00	; 0
    17e4:	e5 e3       	ldi	r30, 0x35	; 53
    17e6:	f0 e0       	ldi	r31, 0x00	; 0
    17e8:	80 81       	ld	r24, Z
    17ea:	48 2f       	mov	r20, r24
    17ec:	8b 81       	ldd	r24, Y+3	; 0x03
    17ee:	28 2f       	mov	r18, r24
    17f0:	30 e0       	ldi	r19, 0x00	; 0
    17f2:	81 e0       	ldi	r24, 0x01	; 1
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	02 2e       	mov	r0, r18
    17f8:	02 c0       	rjmp	.+4      	; 0x17fe <DIO_u8TogglePinValue+0xc8>
    17fa:	88 0f       	add	r24, r24
    17fc:	99 1f       	adc	r25, r25
    17fe:	0a 94       	dec	r0
    1800:	e2 f7       	brpl	.-8      	; 0x17fa <DIO_u8TogglePinValue+0xc4>
    1802:	84 27       	eor	r24, r20
    1804:	8c 93       	st	X, r24
    1806:	19 c0       	rjmp	.+50     	; 0x183a <DIO_u8TogglePinValue+0x104>
		case DIO_u8PORTD: TOG_BIT(PORTD,Copy_u8Pin); break;
    1808:	a2 e3       	ldi	r26, 0x32	; 50
    180a:	b0 e0       	ldi	r27, 0x00	; 0
    180c:	e2 e3       	ldi	r30, 0x32	; 50
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	80 81       	ld	r24, Z
    1812:	48 2f       	mov	r20, r24
    1814:	8b 81       	ldd	r24, Y+3	; 0x03
    1816:	28 2f       	mov	r18, r24
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	81 e0       	ldi	r24, 0x01	; 1
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	02 2e       	mov	r0, r18
    1820:	02 c0       	rjmp	.+4      	; 0x1826 <DIO_u8TogglePinValue+0xf0>
    1822:	88 0f       	add	r24, r24
    1824:	99 1f       	adc	r25, r25
    1826:	0a 94       	dec	r0
    1828:	e2 f7       	brpl	.-8      	; 0x1822 <DIO_u8TogglePinValue+0xec>
    182a:	84 27       	eor	r24, r20
    182c:	8c 93       	st	X, r24
    182e:	05 c0       	rjmp	.+10     	; 0x183a <DIO_u8TogglePinValue+0x104>
		default: Local_u8ErrorState= NOK; break;
    1830:	81 e0       	ldi	r24, 0x01	; 1
    1832:	89 83       	std	Y+1, r24	; 0x01
    1834:	02 c0       	rjmp	.+4      	; 0x183a <DIO_u8TogglePinValue+0x104>
		}
	}
	else
	{
		Local_u8ErrorState = NOK;
    1836:	81 e0       	ldi	r24, 0x01	; 1
    1838:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    183a:	89 81       	ldd	r24, Y+1	; 0x01
}
    183c:	0f 90       	pop	r0
    183e:	0f 90       	pop	r0
    1840:	0f 90       	pop	r0
    1842:	0f 90       	pop	r0
    1844:	0f 90       	pop	r0
    1846:	cf 91       	pop	r28
    1848:	df 91       	pop	r29
    184a:	08 95       	ret

0000184c <PORT_voidInit>:
#include "PORT_interface.h"
#include "PORT_cfg.h"
#include "PORT_private.h"

void PORT_voidInit(void)
{
    184c:	df 93       	push	r29
    184e:	cf 93       	push	r28
    1850:	cd b7       	in	r28, 0x3d	; 61
    1852:	de b7       	in	r29, 0x3e	; 62
	DDRA = PORTA_DIR;
    1854:	ea e3       	ldi	r30, 0x3A	; 58
    1856:	f0 e0       	ldi	r31, 0x00	; 0
    1858:	8e e7       	ldi	r24, 0x7E	; 126
    185a:	80 83       	st	Z, r24
	DDRB = PORTB_DIR;
    185c:	e7 e3       	ldi	r30, 0x37	; 55
    185e:	f0 e0       	ldi	r31, 0x00	; 0
    1860:	10 82       	st	Z, r1
	DDRC = PORTC_DIR;
    1862:	e4 e3       	ldi	r30, 0x34	; 52
    1864:	f0 e0       	ldi	r31, 0x00	; 0
    1866:	10 82       	st	Z, r1
	DDRD = PORTD_DIR;
    1868:	e1 e3       	ldi	r30, 0x31	; 49
    186a:	f0 e0       	ldi	r31, 0x00	; 0
    186c:	10 82       	st	Z, r1

	PORTA= PORTA_INITIAL_VAL;
    186e:	eb e3       	ldi	r30, 0x3B	; 59
    1870:	f0 e0       	ldi	r31, 0x00	; 0
    1872:	10 82       	st	Z, r1
	PORTB= PORTB_INITIAL_VAL;
    1874:	e8 e3       	ldi	r30, 0x38	; 56
    1876:	f0 e0       	ldi	r31, 0x00	; 0
    1878:	10 82       	st	Z, r1
	PORTC= PORTC_INITIAL_VAL;
    187a:	e5 e3       	ldi	r30, 0x35	; 53
    187c:	f0 e0       	ldi	r31, 0x00	; 0
    187e:	10 82       	st	Z, r1
	PORTD= PORTD_INITIAL_VAL;
    1880:	e2 e3       	ldi	r30, 0x32	; 50
    1882:	f0 e0       	ldi	r31, 0x00	; 0
    1884:	10 82       	st	Z, r1

}
    1886:	cf 91       	pop	r28
    1888:	df 91       	pop	r29
    188a:	08 95       	ret

0000188c <main>:
#include "CLCD_interface.h"
#include <util/delay.h>


void main(void)
{
    188c:	0f 93       	push	r16
    188e:	1f 93       	push	r17
    1890:	df 93       	push	r29
    1892:	cf 93       	push	r28
    1894:	cd b7       	in	r28, 0x3d	; 61
    1896:	de b7       	in	r29, 0x3e	; 62
    1898:	cc 51       	subi	r28, 0x1C	; 28
    189a:	d1 40       	sbci	r29, 0x01	; 1
    189c:	0f b6       	in	r0, 0x3f	; 63
    189e:	f8 94       	cli
    18a0:	de bf       	out	0x3e, r29	; 62
    18a2:	0f be       	out	0x3f, r0	; 63
    18a4:	cd bf       	out	0x3d, r28	; 61
	uint8 Local_u8HamokshaFace[8]={0b00001110,0b00011111,0b00010001,0b00011011,0b00010001,0b00011011,0b00001110,0};
    18a6:	ce 01       	movw	r24, r28
    18a8:	82 57       	subi	r24, 0x72	; 114
    18aa:	9f 4f       	sbci	r25, 0xFF	; 255
    18ac:	ca 51       	subi	r28, 0x1A	; 26
    18ae:	df 4f       	sbci	r29, 0xFF	; 255
    18b0:	99 83       	std	Y+1, r25	; 0x01
    18b2:	88 83       	st	Y, r24
    18b4:	c6 5e       	subi	r28, 0xE6	; 230
    18b6:	d0 40       	sbci	r29, 0x00	; 0
    18b8:	80 e1       	ldi	r24, 0x10	; 16
    18ba:	91 e0       	ldi	r25, 0x01	; 1
    18bc:	c8 51       	subi	r28, 0x18	; 24
    18be:	df 4f       	sbci	r29, 0xFF	; 255
    18c0:	99 83       	std	Y+1, r25	; 0x01
    18c2:	88 83       	st	Y, r24
    18c4:	c8 5e       	subi	r28, 0xE8	; 232
    18c6:	d0 40       	sbci	r29, 0x00	; 0
    18c8:	98 e0       	ldi	r25, 0x08	; 8
    18ca:	c6 51       	subi	r28, 0x16	; 22
    18cc:	df 4f       	sbci	r29, 0xFF	; 255
    18ce:	98 83       	st	Y, r25
    18d0:	ca 5e       	subi	r28, 0xEA	; 234
    18d2:	d0 40       	sbci	r29, 0x00	; 0
    18d4:	c8 51       	subi	r28, 0x18	; 24
    18d6:	df 4f       	sbci	r29, 0xFF	; 255
    18d8:	e8 81       	ld	r30, Y
    18da:	f9 81       	ldd	r31, Y+1	; 0x01
    18dc:	c8 5e       	subi	r28, 0xE8	; 232
    18de:	d0 40       	sbci	r29, 0x00	; 0
    18e0:	00 80       	ld	r0, Z
    18e2:	c8 51       	subi	r28, 0x18	; 24
    18e4:	df 4f       	sbci	r29, 0xFF	; 255
    18e6:	88 81       	ld	r24, Y
    18e8:	99 81       	ldd	r25, Y+1	; 0x01
    18ea:	c8 5e       	subi	r28, 0xE8	; 232
    18ec:	d0 40       	sbci	r29, 0x00	; 0
    18ee:	01 96       	adiw	r24, 0x01	; 1
    18f0:	c8 51       	subi	r28, 0x18	; 24
    18f2:	df 4f       	sbci	r29, 0xFF	; 255
    18f4:	99 83       	std	Y+1, r25	; 0x01
    18f6:	88 83       	st	Y, r24
    18f8:	c8 5e       	subi	r28, 0xE8	; 232
    18fa:	d0 40       	sbci	r29, 0x00	; 0
    18fc:	ca 51       	subi	r28, 0x1A	; 26
    18fe:	df 4f       	sbci	r29, 0xFF	; 255
    1900:	e8 81       	ld	r30, Y
    1902:	f9 81       	ldd	r31, Y+1	; 0x01
    1904:	c6 5e       	subi	r28, 0xE6	; 230
    1906:	d0 40       	sbci	r29, 0x00	; 0
    1908:	00 82       	st	Z, r0
    190a:	ca 51       	subi	r28, 0x1A	; 26
    190c:	df 4f       	sbci	r29, 0xFF	; 255
    190e:	88 81       	ld	r24, Y
    1910:	99 81       	ldd	r25, Y+1	; 0x01
    1912:	c6 5e       	subi	r28, 0xE6	; 230
    1914:	d0 40       	sbci	r29, 0x00	; 0
    1916:	01 96       	adiw	r24, 0x01	; 1
    1918:	ca 51       	subi	r28, 0x1A	; 26
    191a:	df 4f       	sbci	r29, 0xFF	; 255
    191c:	99 83       	std	Y+1, r25	; 0x01
    191e:	88 83       	st	Y, r24
    1920:	c6 5e       	subi	r28, 0xE6	; 230
    1922:	d0 40       	sbci	r29, 0x00	; 0
    1924:	c6 51       	subi	r28, 0x16	; 22
    1926:	df 4f       	sbci	r29, 0xFF	; 255
    1928:	98 81       	ld	r25, Y
    192a:	ca 5e       	subi	r28, 0xEA	; 234
    192c:	d0 40       	sbci	r29, 0x00	; 0
    192e:	91 50       	subi	r25, 0x01	; 1
    1930:	c6 51       	subi	r28, 0x16	; 22
    1932:	df 4f       	sbci	r29, 0xFF	; 255
    1934:	98 83       	st	Y, r25
    1936:	ca 5e       	subi	r28, 0xEA	; 234
    1938:	d0 40       	sbci	r29, 0x00	; 0
    193a:	c6 51       	subi	r28, 0x16	; 22
    193c:	df 4f       	sbci	r29, 0xFF	; 255
    193e:	e8 81       	ld	r30, Y
    1940:	ca 5e       	subi	r28, 0xEA	; 234
    1942:	d0 40       	sbci	r29, 0x00	; 0
    1944:	ee 23       	and	r30, r30
    1946:	31 f6       	brne	.-116    	; 0x18d4 <main+0x48>
	uint8 Local_u8HamokshaHi1[8]={0b00010101,0b00001110,0b00000100,0b00000100,0b00000100,0b00001010,0b00001010,0};
    1948:	ce 01       	movw	r24, r28
    194a:	8a 56       	subi	r24, 0x6A	; 106
    194c:	9f 4f       	sbci	r25, 0xFF	; 255
    194e:	c5 51       	subi	r28, 0x15	; 21
    1950:	df 4f       	sbci	r29, 0xFF	; 255
    1952:	99 83       	std	Y+1, r25	; 0x01
    1954:	88 83       	st	Y, r24
    1956:	cb 5e       	subi	r28, 0xEB	; 235
    1958:	d0 40       	sbci	r29, 0x00	; 0
    195a:	88 e0       	ldi	r24, 0x08	; 8
    195c:	91 e0       	ldi	r25, 0x01	; 1
    195e:	c3 51       	subi	r28, 0x13	; 19
    1960:	df 4f       	sbci	r29, 0xFF	; 255
    1962:	99 83       	std	Y+1, r25	; 0x01
    1964:	88 83       	st	Y, r24
    1966:	cd 5e       	subi	r28, 0xED	; 237
    1968:	d0 40       	sbci	r29, 0x00	; 0
    196a:	98 e0       	ldi	r25, 0x08	; 8
    196c:	c1 51       	subi	r28, 0x11	; 17
    196e:	df 4f       	sbci	r29, 0xFF	; 255
    1970:	98 83       	st	Y, r25
    1972:	cf 5e       	subi	r28, 0xEF	; 239
    1974:	d0 40       	sbci	r29, 0x00	; 0
    1976:	c3 51       	subi	r28, 0x13	; 19
    1978:	df 4f       	sbci	r29, 0xFF	; 255
    197a:	e8 81       	ld	r30, Y
    197c:	f9 81       	ldd	r31, Y+1	; 0x01
    197e:	cd 5e       	subi	r28, 0xED	; 237
    1980:	d0 40       	sbci	r29, 0x00	; 0
    1982:	00 80       	ld	r0, Z
    1984:	c3 51       	subi	r28, 0x13	; 19
    1986:	df 4f       	sbci	r29, 0xFF	; 255
    1988:	88 81       	ld	r24, Y
    198a:	99 81       	ldd	r25, Y+1	; 0x01
    198c:	cd 5e       	subi	r28, 0xED	; 237
    198e:	d0 40       	sbci	r29, 0x00	; 0
    1990:	01 96       	adiw	r24, 0x01	; 1
    1992:	c3 51       	subi	r28, 0x13	; 19
    1994:	df 4f       	sbci	r29, 0xFF	; 255
    1996:	99 83       	std	Y+1, r25	; 0x01
    1998:	88 83       	st	Y, r24
    199a:	cd 5e       	subi	r28, 0xED	; 237
    199c:	d0 40       	sbci	r29, 0x00	; 0
    199e:	c5 51       	subi	r28, 0x15	; 21
    19a0:	df 4f       	sbci	r29, 0xFF	; 255
    19a2:	e8 81       	ld	r30, Y
    19a4:	f9 81       	ldd	r31, Y+1	; 0x01
    19a6:	cb 5e       	subi	r28, 0xEB	; 235
    19a8:	d0 40       	sbci	r29, 0x00	; 0
    19aa:	00 82       	st	Z, r0
    19ac:	c5 51       	subi	r28, 0x15	; 21
    19ae:	df 4f       	sbci	r29, 0xFF	; 255
    19b0:	88 81       	ld	r24, Y
    19b2:	99 81       	ldd	r25, Y+1	; 0x01
    19b4:	cb 5e       	subi	r28, 0xEB	; 235
    19b6:	d0 40       	sbci	r29, 0x00	; 0
    19b8:	01 96       	adiw	r24, 0x01	; 1
    19ba:	c5 51       	subi	r28, 0x15	; 21
    19bc:	df 4f       	sbci	r29, 0xFF	; 255
    19be:	99 83       	std	Y+1, r25	; 0x01
    19c0:	88 83       	st	Y, r24
    19c2:	cb 5e       	subi	r28, 0xEB	; 235
    19c4:	d0 40       	sbci	r29, 0x00	; 0
    19c6:	c1 51       	subi	r28, 0x11	; 17
    19c8:	df 4f       	sbci	r29, 0xFF	; 255
    19ca:	98 81       	ld	r25, Y
    19cc:	cf 5e       	subi	r28, 0xEF	; 239
    19ce:	d0 40       	sbci	r29, 0x00	; 0
    19d0:	91 50       	subi	r25, 0x01	; 1
    19d2:	c1 51       	subi	r28, 0x11	; 17
    19d4:	df 4f       	sbci	r29, 0xFF	; 255
    19d6:	98 83       	st	Y, r25
    19d8:	cf 5e       	subi	r28, 0xEF	; 239
    19da:	d0 40       	sbci	r29, 0x00	; 0
    19dc:	c1 51       	subi	r28, 0x11	; 17
    19de:	df 4f       	sbci	r29, 0xFF	; 255
    19e0:	e8 81       	ld	r30, Y
    19e2:	cf 5e       	subi	r28, 0xEF	; 239
    19e4:	d0 40       	sbci	r29, 0x00	; 0
    19e6:	ee 23       	and	r30, r30
    19e8:	31 f6       	brne	.-116    	; 0x1976 <main+0xea>
	uint8 Local_u8HamokshaHi2[8]={0b00000100,0b00000100,0b00011111,0b00000100,0b00000100,0b00001010,0b00001010,0};
    19ea:	ce 01       	movw	r24, r28
    19ec:	82 56       	subi	r24, 0x62	; 98
    19ee:	9f 4f       	sbci	r25, 0xFF	; 255
    19f0:	c0 51       	subi	r28, 0x10	; 16
    19f2:	df 4f       	sbci	r29, 0xFF	; 255
    19f4:	99 83       	std	Y+1, r25	; 0x01
    19f6:	88 83       	st	Y, r24
    19f8:	c0 5f       	subi	r28, 0xF0	; 240
    19fa:	d0 40       	sbci	r29, 0x00	; 0
    19fc:	80 e0       	ldi	r24, 0x00	; 0
    19fe:	91 e0       	ldi	r25, 0x01	; 1
    1a00:	ce 50       	subi	r28, 0x0E	; 14
    1a02:	df 4f       	sbci	r29, 0xFF	; 255
    1a04:	99 83       	std	Y+1, r25	; 0x01
    1a06:	88 83       	st	Y, r24
    1a08:	c2 5f       	subi	r28, 0xF2	; 242
    1a0a:	d0 40       	sbci	r29, 0x00	; 0
    1a0c:	98 e0       	ldi	r25, 0x08	; 8
    1a0e:	cc 50       	subi	r28, 0x0C	; 12
    1a10:	df 4f       	sbci	r29, 0xFF	; 255
    1a12:	98 83       	st	Y, r25
    1a14:	c4 5f       	subi	r28, 0xF4	; 244
    1a16:	d0 40       	sbci	r29, 0x00	; 0
    1a18:	ce 50       	subi	r28, 0x0E	; 14
    1a1a:	df 4f       	sbci	r29, 0xFF	; 255
    1a1c:	e8 81       	ld	r30, Y
    1a1e:	f9 81       	ldd	r31, Y+1	; 0x01
    1a20:	c2 5f       	subi	r28, 0xF2	; 242
    1a22:	d0 40       	sbci	r29, 0x00	; 0
    1a24:	00 80       	ld	r0, Z
    1a26:	ce 50       	subi	r28, 0x0E	; 14
    1a28:	df 4f       	sbci	r29, 0xFF	; 255
    1a2a:	88 81       	ld	r24, Y
    1a2c:	99 81       	ldd	r25, Y+1	; 0x01
    1a2e:	c2 5f       	subi	r28, 0xF2	; 242
    1a30:	d0 40       	sbci	r29, 0x00	; 0
    1a32:	01 96       	adiw	r24, 0x01	; 1
    1a34:	ce 50       	subi	r28, 0x0E	; 14
    1a36:	df 4f       	sbci	r29, 0xFF	; 255
    1a38:	99 83       	std	Y+1, r25	; 0x01
    1a3a:	88 83       	st	Y, r24
    1a3c:	c2 5f       	subi	r28, 0xF2	; 242
    1a3e:	d0 40       	sbci	r29, 0x00	; 0
    1a40:	c0 51       	subi	r28, 0x10	; 16
    1a42:	df 4f       	sbci	r29, 0xFF	; 255
    1a44:	e8 81       	ld	r30, Y
    1a46:	f9 81       	ldd	r31, Y+1	; 0x01
    1a48:	c0 5f       	subi	r28, 0xF0	; 240
    1a4a:	d0 40       	sbci	r29, 0x00	; 0
    1a4c:	00 82       	st	Z, r0
    1a4e:	c0 51       	subi	r28, 0x10	; 16
    1a50:	df 4f       	sbci	r29, 0xFF	; 255
    1a52:	88 81       	ld	r24, Y
    1a54:	99 81       	ldd	r25, Y+1	; 0x01
    1a56:	c0 5f       	subi	r28, 0xF0	; 240
    1a58:	d0 40       	sbci	r29, 0x00	; 0
    1a5a:	01 96       	adiw	r24, 0x01	; 1
    1a5c:	c0 51       	subi	r28, 0x10	; 16
    1a5e:	df 4f       	sbci	r29, 0xFF	; 255
    1a60:	99 83       	std	Y+1, r25	; 0x01
    1a62:	88 83       	st	Y, r24
    1a64:	c0 5f       	subi	r28, 0xF0	; 240
    1a66:	d0 40       	sbci	r29, 0x00	; 0
    1a68:	cc 50       	subi	r28, 0x0C	; 12
    1a6a:	df 4f       	sbci	r29, 0xFF	; 255
    1a6c:	98 81       	ld	r25, Y
    1a6e:	c4 5f       	subi	r28, 0xF4	; 244
    1a70:	d0 40       	sbci	r29, 0x00	; 0
    1a72:	91 50       	subi	r25, 0x01	; 1
    1a74:	cc 50       	subi	r28, 0x0C	; 12
    1a76:	df 4f       	sbci	r29, 0xFF	; 255
    1a78:	98 83       	st	Y, r25
    1a7a:	c4 5f       	subi	r28, 0xF4	; 244
    1a7c:	d0 40       	sbci	r29, 0x00	; 0
    1a7e:	cc 50       	subi	r28, 0x0C	; 12
    1a80:	df 4f       	sbci	r29, 0xFF	; 255
    1a82:	e8 81       	ld	r30, Y
    1a84:	c4 5f       	subi	r28, 0xF4	; 244
    1a86:	d0 40       	sbci	r29, 0x00	; 0
    1a88:	ee 23       	and	r30, r30
    1a8a:	31 f6       	brne	.-116    	; 0x1a18 <main+0x18c>
	uint8 Local_u8BasketMode1[8]={0b00000100,0b00000100,0b00000111,0b00001101,0b00001100,0b00001010,0b00001010,0};
    1a8c:	ce 01       	movw	r24, r28
    1a8e:	8a 55       	subi	r24, 0x5A	; 90
    1a90:	9f 4f       	sbci	r25, 0xFF	; 255
    1a92:	cb 50       	subi	r28, 0x0B	; 11
    1a94:	df 4f       	sbci	r29, 0xFF	; 255
    1a96:	99 83       	std	Y+1, r25	; 0x01
    1a98:	88 83       	st	Y, r24
    1a9a:	c5 5f       	subi	r28, 0xF5	; 245
    1a9c:	d0 40       	sbci	r29, 0x00	; 0
    1a9e:	88 ef       	ldi	r24, 0xF8	; 248
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	c9 50       	subi	r28, 0x09	; 9
    1aa4:	df 4f       	sbci	r29, 0xFF	; 255
    1aa6:	99 83       	std	Y+1, r25	; 0x01
    1aa8:	88 83       	st	Y, r24
    1aaa:	c7 5f       	subi	r28, 0xF7	; 247
    1aac:	d0 40       	sbci	r29, 0x00	; 0
    1aae:	98 e0       	ldi	r25, 0x08	; 8
    1ab0:	c7 50       	subi	r28, 0x07	; 7
    1ab2:	df 4f       	sbci	r29, 0xFF	; 255
    1ab4:	98 83       	st	Y, r25
    1ab6:	c9 5f       	subi	r28, 0xF9	; 249
    1ab8:	d0 40       	sbci	r29, 0x00	; 0
    1aba:	c9 50       	subi	r28, 0x09	; 9
    1abc:	df 4f       	sbci	r29, 0xFF	; 255
    1abe:	e8 81       	ld	r30, Y
    1ac0:	f9 81       	ldd	r31, Y+1	; 0x01
    1ac2:	c7 5f       	subi	r28, 0xF7	; 247
    1ac4:	d0 40       	sbci	r29, 0x00	; 0
    1ac6:	00 80       	ld	r0, Z
    1ac8:	c9 50       	subi	r28, 0x09	; 9
    1aca:	df 4f       	sbci	r29, 0xFF	; 255
    1acc:	88 81       	ld	r24, Y
    1ace:	99 81       	ldd	r25, Y+1	; 0x01
    1ad0:	c7 5f       	subi	r28, 0xF7	; 247
    1ad2:	d0 40       	sbci	r29, 0x00	; 0
    1ad4:	01 96       	adiw	r24, 0x01	; 1
    1ad6:	c9 50       	subi	r28, 0x09	; 9
    1ad8:	df 4f       	sbci	r29, 0xFF	; 255
    1ada:	99 83       	std	Y+1, r25	; 0x01
    1adc:	88 83       	st	Y, r24
    1ade:	c7 5f       	subi	r28, 0xF7	; 247
    1ae0:	d0 40       	sbci	r29, 0x00	; 0
    1ae2:	cb 50       	subi	r28, 0x0B	; 11
    1ae4:	df 4f       	sbci	r29, 0xFF	; 255
    1ae6:	e8 81       	ld	r30, Y
    1ae8:	f9 81       	ldd	r31, Y+1	; 0x01
    1aea:	c5 5f       	subi	r28, 0xF5	; 245
    1aec:	d0 40       	sbci	r29, 0x00	; 0
    1aee:	00 82       	st	Z, r0
    1af0:	cb 50       	subi	r28, 0x0B	; 11
    1af2:	df 4f       	sbci	r29, 0xFF	; 255
    1af4:	88 81       	ld	r24, Y
    1af6:	99 81       	ldd	r25, Y+1	; 0x01
    1af8:	c5 5f       	subi	r28, 0xF5	; 245
    1afa:	d0 40       	sbci	r29, 0x00	; 0
    1afc:	01 96       	adiw	r24, 0x01	; 1
    1afe:	cb 50       	subi	r28, 0x0B	; 11
    1b00:	df 4f       	sbci	r29, 0xFF	; 255
    1b02:	99 83       	std	Y+1, r25	; 0x01
    1b04:	88 83       	st	Y, r24
    1b06:	c5 5f       	subi	r28, 0xF5	; 245
    1b08:	d0 40       	sbci	r29, 0x00	; 0
    1b0a:	c7 50       	subi	r28, 0x07	; 7
    1b0c:	df 4f       	sbci	r29, 0xFF	; 255
    1b0e:	98 81       	ld	r25, Y
    1b10:	c9 5f       	subi	r28, 0xF9	; 249
    1b12:	d0 40       	sbci	r29, 0x00	; 0
    1b14:	91 50       	subi	r25, 0x01	; 1
    1b16:	c7 50       	subi	r28, 0x07	; 7
    1b18:	df 4f       	sbci	r29, 0xFF	; 255
    1b1a:	98 83       	st	Y, r25
    1b1c:	c9 5f       	subi	r28, 0xF9	; 249
    1b1e:	d0 40       	sbci	r29, 0x00	; 0
    1b20:	c7 50       	subi	r28, 0x07	; 7
    1b22:	df 4f       	sbci	r29, 0xFF	; 255
    1b24:	e8 81       	ld	r30, Y
    1b26:	c9 5f       	subi	r28, 0xF9	; 249
    1b28:	d0 40       	sbci	r29, 0x00	; 0
    1b2a:	ee 23       	and	r30, r30
    1b2c:	31 f6       	brne	.-116    	; 0x1aba <main+0x22e>
	uint8 Local_u8BasketMode2[8]={0b00000100,0b00000100,0b00000111,0b00001100,0b00001100,0b00001010,0b00001011,0};
    1b2e:	ce 01       	movw	r24, r28
    1b30:	82 55       	subi	r24, 0x52	; 82
    1b32:	9f 4f       	sbci	r25, 0xFF	; 255
    1b34:	c6 50       	subi	r28, 0x06	; 6
    1b36:	df 4f       	sbci	r29, 0xFF	; 255
    1b38:	99 83       	std	Y+1, r25	; 0x01
    1b3a:	88 83       	st	Y, r24
    1b3c:	ca 5f       	subi	r28, 0xFA	; 250
    1b3e:	d0 40       	sbci	r29, 0x00	; 0
    1b40:	80 ef       	ldi	r24, 0xF0	; 240
    1b42:	90 e0       	ldi	r25, 0x00	; 0
    1b44:	c4 50       	subi	r28, 0x04	; 4
    1b46:	df 4f       	sbci	r29, 0xFF	; 255
    1b48:	99 83       	std	Y+1, r25	; 0x01
    1b4a:	88 83       	st	Y, r24
    1b4c:	cc 5f       	subi	r28, 0xFC	; 252
    1b4e:	d0 40       	sbci	r29, 0x00	; 0
    1b50:	98 e0       	ldi	r25, 0x08	; 8
    1b52:	c2 50       	subi	r28, 0x02	; 2
    1b54:	df 4f       	sbci	r29, 0xFF	; 255
    1b56:	98 83       	st	Y, r25
    1b58:	ce 5f       	subi	r28, 0xFE	; 254
    1b5a:	d0 40       	sbci	r29, 0x00	; 0
    1b5c:	c4 50       	subi	r28, 0x04	; 4
    1b5e:	df 4f       	sbci	r29, 0xFF	; 255
    1b60:	e8 81       	ld	r30, Y
    1b62:	f9 81       	ldd	r31, Y+1	; 0x01
    1b64:	cc 5f       	subi	r28, 0xFC	; 252
    1b66:	d0 40       	sbci	r29, 0x00	; 0
    1b68:	00 80       	ld	r0, Z
    1b6a:	c4 50       	subi	r28, 0x04	; 4
    1b6c:	df 4f       	sbci	r29, 0xFF	; 255
    1b6e:	88 81       	ld	r24, Y
    1b70:	99 81       	ldd	r25, Y+1	; 0x01
    1b72:	cc 5f       	subi	r28, 0xFC	; 252
    1b74:	d0 40       	sbci	r29, 0x00	; 0
    1b76:	01 96       	adiw	r24, 0x01	; 1
    1b78:	c4 50       	subi	r28, 0x04	; 4
    1b7a:	df 4f       	sbci	r29, 0xFF	; 255
    1b7c:	99 83       	std	Y+1, r25	; 0x01
    1b7e:	88 83       	st	Y, r24
    1b80:	cc 5f       	subi	r28, 0xFC	; 252
    1b82:	d0 40       	sbci	r29, 0x00	; 0
    1b84:	c6 50       	subi	r28, 0x06	; 6
    1b86:	df 4f       	sbci	r29, 0xFF	; 255
    1b88:	e8 81       	ld	r30, Y
    1b8a:	f9 81       	ldd	r31, Y+1	; 0x01
    1b8c:	ca 5f       	subi	r28, 0xFA	; 250
    1b8e:	d0 40       	sbci	r29, 0x00	; 0
    1b90:	00 82       	st	Z, r0
    1b92:	c6 50       	subi	r28, 0x06	; 6
    1b94:	df 4f       	sbci	r29, 0xFF	; 255
    1b96:	88 81       	ld	r24, Y
    1b98:	99 81       	ldd	r25, Y+1	; 0x01
    1b9a:	ca 5f       	subi	r28, 0xFA	; 250
    1b9c:	d0 40       	sbci	r29, 0x00	; 0
    1b9e:	01 96       	adiw	r24, 0x01	; 1
    1ba0:	c6 50       	subi	r28, 0x06	; 6
    1ba2:	df 4f       	sbci	r29, 0xFF	; 255
    1ba4:	99 83       	std	Y+1, r25	; 0x01
    1ba6:	88 83       	st	Y, r24
    1ba8:	ca 5f       	subi	r28, 0xFA	; 250
    1baa:	d0 40       	sbci	r29, 0x00	; 0
    1bac:	c2 50       	subi	r28, 0x02	; 2
    1bae:	df 4f       	sbci	r29, 0xFF	; 255
    1bb0:	98 81       	ld	r25, Y
    1bb2:	ce 5f       	subi	r28, 0xFE	; 254
    1bb4:	d0 40       	sbci	r29, 0x00	; 0
    1bb6:	91 50       	subi	r25, 0x01	; 1
    1bb8:	c2 50       	subi	r28, 0x02	; 2
    1bba:	df 4f       	sbci	r29, 0xFF	; 255
    1bbc:	98 83       	st	Y, r25
    1bbe:	ce 5f       	subi	r28, 0xFE	; 254
    1bc0:	d0 40       	sbci	r29, 0x00	; 0
    1bc2:	c2 50       	subi	r28, 0x02	; 2
    1bc4:	df 4f       	sbci	r29, 0xFF	; 255
    1bc6:	e8 81       	ld	r30, Y
    1bc8:	ce 5f       	subi	r28, 0xFE	; 254
    1bca:	d0 40       	sbci	r29, 0x00	; 0
    1bcc:	ee 23       	and	r30, r30
    1bce:	31 f6       	brne	.-116    	; 0x1b5c <main+0x2d0>
	uint8 Local_u8DanceMode1[8]={0b00000100,0b00000111,0b00000100,0b00011100,0b00000100,0b00001010,0b00001010,0};
    1bd0:	ce 01       	movw	r24, r28
    1bd2:	8a 54       	subi	r24, 0x4A	; 74
    1bd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd6:	c1 50       	subi	r28, 0x01	; 1
    1bd8:	df 4f       	sbci	r29, 0xFF	; 255
    1bda:	99 83       	std	Y+1, r25	; 0x01
    1bdc:	88 83       	st	Y, r24
    1bde:	cf 5f       	subi	r28, 0xFF	; 255
    1be0:	d0 40       	sbci	r29, 0x00	; 0
    1be2:	88 ee       	ldi	r24, 0xE8	; 232
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	cf 5f       	subi	r28, 0xFF	; 255
    1be8:	de 4f       	sbci	r29, 0xFE	; 254
    1bea:	99 83       	std	Y+1, r25	; 0x01
    1bec:	88 83       	st	Y, r24
    1bee:	c1 50       	subi	r28, 0x01	; 1
    1bf0:	d1 40       	sbci	r29, 0x01	; 1
    1bf2:	98 e0       	ldi	r25, 0x08	; 8
    1bf4:	cd 5f       	subi	r28, 0xFD	; 253
    1bf6:	de 4f       	sbci	r29, 0xFE	; 254
    1bf8:	98 83       	st	Y, r25
    1bfa:	c3 50       	subi	r28, 0x03	; 3
    1bfc:	d1 40       	sbci	r29, 0x01	; 1
    1bfe:	cf 5f       	subi	r28, 0xFF	; 255
    1c00:	de 4f       	sbci	r29, 0xFE	; 254
    1c02:	e8 81       	ld	r30, Y
    1c04:	f9 81       	ldd	r31, Y+1	; 0x01
    1c06:	c1 50       	subi	r28, 0x01	; 1
    1c08:	d1 40       	sbci	r29, 0x01	; 1
    1c0a:	00 80       	ld	r0, Z
    1c0c:	cf 5f       	subi	r28, 0xFF	; 255
    1c0e:	de 4f       	sbci	r29, 0xFE	; 254
    1c10:	88 81       	ld	r24, Y
    1c12:	99 81       	ldd	r25, Y+1	; 0x01
    1c14:	c1 50       	subi	r28, 0x01	; 1
    1c16:	d1 40       	sbci	r29, 0x01	; 1
    1c18:	01 96       	adiw	r24, 0x01	; 1
    1c1a:	cf 5f       	subi	r28, 0xFF	; 255
    1c1c:	de 4f       	sbci	r29, 0xFE	; 254
    1c1e:	99 83       	std	Y+1, r25	; 0x01
    1c20:	88 83       	st	Y, r24
    1c22:	c1 50       	subi	r28, 0x01	; 1
    1c24:	d1 40       	sbci	r29, 0x01	; 1
    1c26:	c1 50       	subi	r28, 0x01	; 1
    1c28:	df 4f       	sbci	r29, 0xFF	; 255
    1c2a:	e8 81       	ld	r30, Y
    1c2c:	f9 81       	ldd	r31, Y+1	; 0x01
    1c2e:	cf 5f       	subi	r28, 0xFF	; 255
    1c30:	d0 40       	sbci	r29, 0x00	; 0
    1c32:	00 82       	st	Z, r0
    1c34:	c1 50       	subi	r28, 0x01	; 1
    1c36:	df 4f       	sbci	r29, 0xFF	; 255
    1c38:	88 81       	ld	r24, Y
    1c3a:	99 81       	ldd	r25, Y+1	; 0x01
    1c3c:	cf 5f       	subi	r28, 0xFF	; 255
    1c3e:	d0 40       	sbci	r29, 0x00	; 0
    1c40:	01 96       	adiw	r24, 0x01	; 1
    1c42:	c1 50       	subi	r28, 0x01	; 1
    1c44:	df 4f       	sbci	r29, 0xFF	; 255
    1c46:	99 83       	std	Y+1, r25	; 0x01
    1c48:	88 83       	st	Y, r24
    1c4a:	cf 5f       	subi	r28, 0xFF	; 255
    1c4c:	d0 40       	sbci	r29, 0x00	; 0
    1c4e:	cd 5f       	subi	r28, 0xFD	; 253
    1c50:	de 4f       	sbci	r29, 0xFE	; 254
    1c52:	98 81       	ld	r25, Y
    1c54:	c3 50       	subi	r28, 0x03	; 3
    1c56:	d1 40       	sbci	r29, 0x01	; 1
    1c58:	91 50       	subi	r25, 0x01	; 1
    1c5a:	cd 5f       	subi	r28, 0xFD	; 253
    1c5c:	de 4f       	sbci	r29, 0xFE	; 254
    1c5e:	98 83       	st	Y, r25
    1c60:	c3 50       	subi	r28, 0x03	; 3
    1c62:	d1 40       	sbci	r29, 0x01	; 1
    1c64:	cd 5f       	subi	r28, 0xFD	; 253
    1c66:	de 4f       	sbci	r29, 0xFE	; 254
    1c68:	e8 81       	ld	r30, Y
    1c6a:	c3 50       	subi	r28, 0x03	; 3
    1c6c:	d1 40       	sbci	r29, 0x01	; 1
    1c6e:	ee 23       	and	r30, r30
    1c70:	31 f6       	brne	.-116    	; 0x1bfe <main+0x372>
	uint8 Local_u8DanceMode2[8]={0b00000100,0b00011100,0b00000100,0b00000111,0b00000100,0b00001010,0b00010001,0};
    1c72:	ce 01       	movw	r24, r28
    1c74:	82 54       	subi	r24, 0x42	; 66
    1c76:	9f 4f       	sbci	r25, 0xFF	; 255
    1c78:	cc 5f       	subi	r28, 0xFC	; 252
    1c7a:	de 4f       	sbci	r29, 0xFE	; 254
    1c7c:	99 83       	std	Y+1, r25	; 0x01
    1c7e:	88 83       	st	Y, r24
    1c80:	c4 50       	subi	r28, 0x04	; 4
    1c82:	d1 40       	sbci	r29, 0x01	; 1
    1c84:	80 ee       	ldi	r24, 0xE0	; 224
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	ca 5f       	subi	r28, 0xFA	; 250
    1c8a:	de 4f       	sbci	r29, 0xFE	; 254
    1c8c:	99 83       	std	Y+1, r25	; 0x01
    1c8e:	88 83       	st	Y, r24
    1c90:	c6 50       	subi	r28, 0x06	; 6
    1c92:	d1 40       	sbci	r29, 0x01	; 1
    1c94:	98 e0       	ldi	r25, 0x08	; 8
    1c96:	c8 5f       	subi	r28, 0xF8	; 248
    1c98:	de 4f       	sbci	r29, 0xFE	; 254
    1c9a:	98 83       	st	Y, r25
    1c9c:	c8 50       	subi	r28, 0x08	; 8
    1c9e:	d1 40       	sbci	r29, 0x01	; 1
    1ca0:	ca 5f       	subi	r28, 0xFA	; 250
    1ca2:	de 4f       	sbci	r29, 0xFE	; 254
    1ca4:	e8 81       	ld	r30, Y
    1ca6:	f9 81       	ldd	r31, Y+1	; 0x01
    1ca8:	c6 50       	subi	r28, 0x06	; 6
    1caa:	d1 40       	sbci	r29, 0x01	; 1
    1cac:	00 80       	ld	r0, Z
    1cae:	ca 5f       	subi	r28, 0xFA	; 250
    1cb0:	de 4f       	sbci	r29, 0xFE	; 254
    1cb2:	88 81       	ld	r24, Y
    1cb4:	99 81       	ldd	r25, Y+1	; 0x01
    1cb6:	c6 50       	subi	r28, 0x06	; 6
    1cb8:	d1 40       	sbci	r29, 0x01	; 1
    1cba:	01 96       	adiw	r24, 0x01	; 1
    1cbc:	ca 5f       	subi	r28, 0xFA	; 250
    1cbe:	de 4f       	sbci	r29, 0xFE	; 254
    1cc0:	99 83       	std	Y+1, r25	; 0x01
    1cc2:	88 83       	st	Y, r24
    1cc4:	c6 50       	subi	r28, 0x06	; 6
    1cc6:	d1 40       	sbci	r29, 0x01	; 1
    1cc8:	cc 5f       	subi	r28, 0xFC	; 252
    1cca:	de 4f       	sbci	r29, 0xFE	; 254
    1ccc:	e8 81       	ld	r30, Y
    1cce:	f9 81       	ldd	r31, Y+1	; 0x01
    1cd0:	c4 50       	subi	r28, 0x04	; 4
    1cd2:	d1 40       	sbci	r29, 0x01	; 1
    1cd4:	00 82       	st	Z, r0
    1cd6:	cc 5f       	subi	r28, 0xFC	; 252
    1cd8:	de 4f       	sbci	r29, 0xFE	; 254
    1cda:	88 81       	ld	r24, Y
    1cdc:	99 81       	ldd	r25, Y+1	; 0x01
    1cde:	c4 50       	subi	r28, 0x04	; 4
    1ce0:	d1 40       	sbci	r29, 0x01	; 1
    1ce2:	01 96       	adiw	r24, 0x01	; 1
    1ce4:	cc 5f       	subi	r28, 0xFC	; 252
    1ce6:	de 4f       	sbci	r29, 0xFE	; 254
    1ce8:	99 83       	std	Y+1, r25	; 0x01
    1cea:	88 83       	st	Y, r24
    1cec:	c4 50       	subi	r28, 0x04	; 4
    1cee:	d1 40       	sbci	r29, 0x01	; 1
    1cf0:	c8 5f       	subi	r28, 0xF8	; 248
    1cf2:	de 4f       	sbci	r29, 0xFE	; 254
    1cf4:	98 81       	ld	r25, Y
    1cf6:	c8 50       	subi	r28, 0x08	; 8
    1cf8:	d1 40       	sbci	r29, 0x01	; 1
    1cfa:	91 50       	subi	r25, 0x01	; 1
    1cfc:	c8 5f       	subi	r28, 0xF8	; 248
    1cfe:	de 4f       	sbci	r29, 0xFE	; 254
    1d00:	98 83       	st	Y, r25
    1d02:	c8 50       	subi	r28, 0x08	; 8
    1d04:	d1 40       	sbci	r29, 0x01	; 1
    1d06:	c8 5f       	subi	r28, 0xF8	; 248
    1d08:	de 4f       	sbci	r29, 0xFE	; 254
    1d0a:	e8 81       	ld	r30, Y
    1d0c:	c8 50       	subi	r28, 0x08	; 8
    1d0e:	d1 40       	sbci	r29, 0x01	; 1
    1d10:	ee 23       	and	r30, r30
    1d12:	31 f6       	brne	.-116    	; 0x1ca0 <main+0x414>
	uint8 Local_u8RunMode[8]={0b00000100,0b00000101,0b00011111,0b00010100,0b00010100,0b00001010,0b00000010,0};
    1d14:	ce 01       	movw	r24, r28
    1d16:	8a 53       	subi	r24, 0x3A	; 58
    1d18:	9f 4f       	sbci	r25, 0xFF	; 255
    1d1a:	c7 5f       	subi	r28, 0xF7	; 247
    1d1c:	de 4f       	sbci	r29, 0xFE	; 254
    1d1e:	99 83       	std	Y+1, r25	; 0x01
    1d20:	88 83       	st	Y, r24
    1d22:	c9 50       	subi	r28, 0x09	; 9
    1d24:	d1 40       	sbci	r29, 0x01	; 1
    1d26:	88 ed       	ldi	r24, 0xD8	; 216
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	c5 5f       	subi	r28, 0xF5	; 245
    1d2c:	de 4f       	sbci	r29, 0xFE	; 254
    1d2e:	99 83       	std	Y+1, r25	; 0x01
    1d30:	88 83       	st	Y, r24
    1d32:	cb 50       	subi	r28, 0x0B	; 11
    1d34:	d1 40       	sbci	r29, 0x01	; 1
    1d36:	98 e0       	ldi	r25, 0x08	; 8
    1d38:	c3 5f       	subi	r28, 0xF3	; 243
    1d3a:	de 4f       	sbci	r29, 0xFE	; 254
    1d3c:	98 83       	st	Y, r25
    1d3e:	cd 50       	subi	r28, 0x0D	; 13
    1d40:	d1 40       	sbci	r29, 0x01	; 1
    1d42:	c5 5f       	subi	r28, 0xF5	; 245
    1d44:	de 4f       	sbci	r29, 0xFE	; 254
    1d46:	e8 81       	ld	r30, Y
    1d48:	f9 81       	ldd	r31, Y+1	; 0x01
    1d4a:	cb 50       	subi	r28, 0x0B	; 11
    1d4c:	d1 40       	sbci	r29, 0x01	; 1
    1d4e:	00 80       	ld	r0, Z
    1d50:	c5 5f       	subi	r28, 0xF5	; 245
    1d52:	de 4f       	sbci	r29, 0xFE	; 254
    1d54:	88 81       	ld	r24, Y
    1d56:	99 81       	ldd	r25, Y+1	; 0x01
    1d58:	cb 50       	subi	r28, 0x0B	; 11
    1d5a:	d1 40       	sbci	r29, 0x01	; 1
    1d5c:	01 96       	adiw	r24, 0x01	; 1
    1d5e:	c5 5f       	subi	r28, 0xF5	; 245
    1d60:	de 4f       	sbci	r29, 0xFE	; 254
    1d62:	99 83       	std	Y+1, r25	; 0x01
    1d64:	88 83       	st	Y, r24
    1d66:	cb 50       	subi	r28, 0x0B	; 11
    1d68:	d1 40       	sbci	r29, 0x01	; 1
    1d6a:	c7 5f       	subi	r28, 0xF7	; 247
    1d6c:	de 4f       	sbci	r29, 0xFE	; 254
    1d6e:	e8 81       	ld	r30, Y
    1d70:	f9 81       	ldd	r31, Y+1	; 0x01
    1d72:	c9 50       	subi	r28, 0x09	; 9
    1d74:	d1 40       	sbci	r29, 0x01	; 1
    1d76:	00 82       	st	Z, r0
    1d78:	c7 5f       	subi	r28, 0xF7	; 247
    1d7a:	de 4f       	sbci	r29, 0xFE	; 254
    1d7c:	88 81       	ld	r24, Y
    1d7e:	99 81       	ldd	r25, Y+1	; 0x01
    1d80:	c9 50       	subi	r28, 0x09	; 9
    1d82:	d1 40       	sbci	r29, 0x01	; 1
    1d84:	01 96       	adiw	r24, 0x01	; 1
    1d86:	c7 5f       	subi	r28, 0xF7	; 247
    1d88:	de 4f       	sbci	r29, 0xFE	; 254
    1d8a:	99 83       	std	Y+1, r25	; 0x01
    1d8c:	88 83       	st	Y, r24
    1d8e:	c9 50       	subi	r28, 0x09	; 9
    1d90:	d1 40       	sbci	r29, 0x01	; 1
    1d92:	c3 5f       	subi	r28, 0xF3	; 243
    1d94:	de 4f       	sbci	r29, 0xFE	; 254
    1d96:	98 81       	ld	r25, Y
    1d98:	cd 50       	subi	r28, 0x0D	; 13
    1d9a:	d1 40       	sbci	r29, 0x01	; 1
    1d9c:	91 50       	subi	r25, 0x01	; 1
    1d9e:	c3 5f       	subi	r28, 0xF3	; 243
    1da0:	de 4f       	sbci	r29, 0xFE	; 254
    1da2:	98 83       	st	Y, r25
    1da4:	cd 50       	subi	r28, 0x0D	; 13
    1da6:	d1 40       	sbci	r29, 0x01	; 1
    1da8:	c3 5f       	subi	r28, 0xF3	; 243
    1daa:	de 4f       	sbci	r29, 0xFE	; 254
    1dac:	e8 81       	ld	r30, Y
    1dae:	cd 50       	subi	r28, 0x0D	; 13
    1db0:	d1 40       	sbci	r29, 0x01	; 1
    1db2:	ee 23       	and	r30, r30
    1db4:	31 f6       	brne	.-116    	; 0x1d42 <main+0x4b6>
	uint8 Local_u8Gun[8]={0b00011111,0b00010001,0b00011111,0b00011000,0b00011000,0b00011000,0,0};
    1db6:	ce 01       	movw	r24, r28
    1db8:	82 53       	subi	r24, 0x32	; 50
    1dba:	9f 4f       	sbci	r25, 0xFF	; 255
    1dbc:	c2 5f       	subi	r28, 0xF2	; 242
    1dbe:	de 4f       	sbci	r29, 0xFE	; 254
    1dc0:	99 83       	std	Y+1, r25	; 0x01
    1dc2:	88 83       	st	Y, r24
    1dc4:	ce 50       	subi	r28, 0x0E	; 14
    1dc6:	d1 40       	sbci	r29, 0x01	; 1
    1dc8:	80 ed       	ldi	r24, 0xD0	; 208
    1dca:	90 e0       	ldi	r25, 0x00	; 0
    1dcc:	c0 5f       	subi	r28, 0xF0	; 240
    1dce:	de 4f       	sbci	r29, 0xFE	; 254
    1dd0:	99 83       	std	Y+1, r25	; 0x01
    1dd2:	88 83       	st	Y, r24
    1dd4:	c0 51       	subi	r28, 0x10	; 16
    1dd6:	d1 40       	sbci	r29, 0x01	; 1
    1dd8:	98 e0       	ldi	r25, 0x08	; 8
    1dda:	ce 5e       	subi	r28, 0xEE	; 238
    1ddc:	de 4f       	sbci	r29, 0xFE	; 254
    1dde:	98 83       	st	Y, r25
    1de0:	c2 51       	subi	r28, 0x12	; 18
    1de2:	d1 40       	sbci	r29, 0x01	; 1
    1de4:	c0 5f       	subi	r28, 0xF0	; 240
    1de6:	de 4f       	sbci	r29, 0xFE	; 254
    1de8:	e8 81       	ld	r30, Y
    1dea:	f9 81       	ldd	r31, Y+1	; 0x01
    1dec:	c0 51       	subi	r28, 0x10	; 16
    1dee:	d1 40       	sbci	r29, 0x01	; 1
    1df0:	00 80       	ld	r0, Z
    1df2:	c0 5f       	subi	r28, 0xF0	; 240
    1df4:	de 4f       	sbci	r29, 0xFE	; 254
    1df6:	88 81       	ld	r24, Y
    1df8:	99 81       	ldd	r25, Y+1	; 0x01
    1dfa:	c0 51       	subi	r28, 0x10	; 16
    1dfc:	d1 40       	sbci	r29, 0x01	; 1
    1dfe:	01 96       	adiw	r24, 0x01	; 1
    1e00:	c0 5f       	subi	r28, 0xF0	; 240
    1e02:	de 4f       	sbci	r29, 0xFE	; 254
    1e04:	99 83       	std	Y+1, r25	; 0x01
    1e06:	88 83       	st	Y, r24
    1e08:	c0 51       	subi	r28, 0x10	; 16
    1e0a:	d1 40       	sbci	r29, 0x01	; 1
    1e0c:	c2 5f       	subi	r28, 0xF2	; 242
    1e0e:	de 4f       	sbci	r29, 0xFE	; 254
    1e10:	e8 81       	ld	r30, Y
    1e12:	f9 81       	ldd	r31, Y+1	; 0x01
    1e14:	ce 50       	subi	r28, 0x0E	; 14
    1e16:	d1 40       	sbci	r29, 0x01	; 1
    1e18:	00 82       	st	Z, r0
    1e1a:	c2 5f       	subi	r28, 0xF2	; 242
    1e1c:	de 4f       	sbci	r29, 0xFE	; 254
    1e1e:	88 81       	ld	r24, Y
    1e20:	99 81       	ldd	r25, Y+1	; 0x01
    1e22:	ce 50       	subi	r28, 0x0E	; 14
    1e24:	d1 40       	sbci	r29, 0x01	; 1
    1e26:	01 96       	adiw	r24, 0x01	; 1
    1e28:	c2 5f       	subi	r28, 0xF2	; 242
    1e2a:	de 4f       	sbci	r29, 0xFE	; 254
    1e2c:	99 83       	std	Y+1, r25	; 0x01
    1e2e:	88 83       	st	Y, r24
    1e30:	ce 50       	subi	r28, 0x0E	; 14
    1e32:	d1 40       	sbci	r29, 0x01	; 1
    1e34:	ce 5e       	subi	r28, 0xEE	; 238
    1e36:	de 4f       	sbci	r29, 0xFE	; 254
    1e38:	98 81       	ld	r25, Y
    1e3a:	c2 51       	subi	r28, 0x12	; 18
    1e3c:	d1 40       	sbci	r29, 0x01	; 1
    1e3e:	91 50       	subi	r25, 0x01	; 1
    1e40:	ce 5e       	subi	r28, 0xEE	; 238
    1e42:	de 4f       	sbci	r29, 0xFE	; 254
    1e44:	98 83       	st	Y, r25
    1e46:	c2 51       	subi	r28, 0x12	; 18
    1e48:	d1 40       	sbci	r29, 0x01	; 1
    1e4a:	ce 5e       	subi	r28, 0xEE	; 238
    1e4c:	de 4f       	sbci	r29, 0xFE	; 254
    1e4e:	e8 81       	ld	r30, Y
    1e50:	c2 51       	subi	r28, 0x12	; 18
    1e52:	d1 40       	sbci	r29, 0x01	; 1
    1e54:	ee 23       	and	r30, r30
    1e56:	31 f6       	brne	.-116    	; 0x1de4 <main+0x558>
	uint8 Local_u8Serounded[8]={0b00010101,0b000101001,0b00011111,0b00000100,0b00000100,0b00001010,0b00001010,0};
    1e58:	ce 01       	movw	r24, r28
    1e5a:	8a 52       	subi	r24, 0x2A	; 42
    1e5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e5e:	cd 5e       	subi	r28, 0xED	; 237
    1e60:	de 4f       	sbci	r29, 0xFE	; 254
    1e62:	99 83       	std	Y+1, r25	; 0x01
    1e64:	88 83       	st	Y, r24
    1e66:	c3 51       	subi	r28, 0x13	; 19
    1e68:	d1 40       	sbci	r29, 0x01	; 1
    1e6a:	88 ec       	ldi	r24, 0xC8	; 200
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	cb 5e       	subi	r28, 0xEB	; 235
    1e70:	de 4f       	sbci	r29, 0xFE	; 254
    1e72:	99 83       	std	Y+1, r25	; 0x01
    1e74:	88 83       	st	Y, r24
    1e76:	c5 51       	subi	r28, 0x15	; 21
    1e78:	d1 40       	sbci	r29, 0x01	; 1
    1e7a:	98 e0       	ldi	r25, 0x08	; 8
    1e7c:	c9 5e       	subi	r28, 0xE9	; 233
    1e7e:	de 4f       	sbci	r29, 0xFE	; 254
    1e80:	98 83       	st	Y, r25
    1e82:	c7 51       	subi	r28, 0x17	; 23
    1e84:	d1 40       	sbci	r29, 0x01	; 1
    1e86:	cb 5e       	subi	r28, 0xEB	; 235
    1e88:	de 4f       	sbci	r29, 0xFE	; 254
    1e8a:	e8 81       	ld	r30, Y
    1e8c:	f9 81       	ldd	r31, Y+1	; 0x01
    1e8e:	c5 51       	subi	r28, 0x15	; 21
    1e90:	d1 40       	sbci	r29, 0x01	; 1
    1e92:	00 80       	ld	r0, Z
    1e94:	cb 5e       	subi	r28, 0xEB	; 235
    1e96:	de 4f       	sbci	r29, 0xFE	; 254
    1e98:	88 81       	ld	r24, Y
    1e9a:	99 81       	ldd	r25, Y+1	; 0x01
    1e9c:	c5 51       	subi	r28, 0x15	; 21
    1e9e:	d1 40       	sbci	r29, 0x01	; 1
    1ea0:	01 96       	adiw	r24, 0x01	; 1
    1ea2:	cb 5e       	subi	r28, 0xEB	; 235
    1ea4:	de 4f       	sbci	r29, 0xFE	; 254
    1ea6:	99 83       	std	Y+1, r25	; 0x01
    1ea8:	88 83       	st	Y, r24
    1eaa:	c5 51       	subi	r28, 0x15	; 21
    1eac:	d1 40       	sbci	r29, 0x01	; 1
    1eae:	cd 5e       	subi	r28, 0xED	; 237
    1eb0:	de 4f       	sbci	r29, 0xFE	; 254
    1eb2:	e8 81       	ld	r30, Y
    1eb4:	f9 81       	ldd	r31, Y+1	; 0x01
    1eb6:	c3 51       	subi	r28, 0x13	; 19
    1eb8:	d1 40       	sbci	r29, 0x01	; 1
    1eba:	00 82       	st	Z, r0
    1ebc:	cd 5e       	subi	r28, 0xED	; 237
    1ebe:	de 4f       	sbci	r29, 0xFE	; 254
    1ec0:	88 81       	ld	r24, Y
    1ec2:	99 81       	ldd	r25, Y+1	; 0x01
    1ec4:	c3 51       	subi	r28, 0x13	; 19
    1ec6:	d1 40       	sbci	r29, 0x01	; 1
    1ec8:	01 96       	adiw	r24, 0x01	; 1
    1eca:	cd 5e       	subi	r28, 0xED	; 237
    1ecc:	de 4f       	sbci	r29, 0xFE	; 254
    1ece:	99 83       	std	Y+1, r25	; 0x01
    1ed0:	88 83       	st	Y, r24
    1ed2:	c3 51       	subi	r28, 0x13	; 19
    1ed4:	d1 40       	sbci	r29, 0x01	; 1
    1ed6:	c9 5e       	subi	r28, 0xE9	; 233
    1ed8:	de 4f       	sbci	r29, 0xFE	; 254
    1eda:	98 81       	ld	r25, Y
    1edc:	c7 51       	subi	r28, 0x17	; 23
    1ede:	d1 40       	sbci	r29, 0x01	; 1
    1ee0:	91 50       	subi	r25, 0x01	; 1
    1ee2:	c9 5e       	subi	r28, 0xE9	; 233
    1ee4:	de 4f       	sbci	r29, 0xFE	; 254
    1ee6:	98 83       	st	Y, r25
    1ee8:	c7 51       	subi	r28, 0x17	; 23
    1eea:	d1 40       	sbci	r29, 0x01	; 1
    1eec:	c9 5e       	subi	r28, 0xE9	; 233
    1eee:	de 4f       	sbci	r29, 0xFE	; 254
    1ef0:	e8 81       	ld	r30, Y
    1ef2:	c7 51       	subi	r28, 0x17	; 23
    1ef4:	d1 40       	sbci	r29, 0x01	; 1
    1ef6:	ee 23       	and	r30, r30
    1ef8:	31 f6       	brne	.-116    	; 0x1e86 <main+0x5fa>
	uint8 Local_u8Fire[8]={0b00000110,0b00000110,0,0,0,0,0,0};
    1efa:	ce 01       	movw	r24, r28
    1efc:	82 52       	subi	r24, 0x22	; 34
    1efe:	9f 4f       	sbci	r25, 0xFF	; 255
    1f00:	c8 5e       	subi	r28, 0xE8	; 232
    1f02:	de 4f       	sbci	r29, 0xFE	; 254
    1f04:	99 83       	std	Y+1, r25	; 0x01
    1f06:	88 83       	st	Y, r24
    1f08:	c8 51       	subi	r28, 0x18	; 24
    1f0a:	d1 40       	sbci	r29, 0x01	; 1
    1f0c:	80 ec       	ldi	r24, 0xC0	; 192
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	c6 5e       	subi	r28, 0xE6	; 230
    1f12:	de 4f       	sbci	r29, 0xFE	; 254
    1f14:	99 83       	std	Y+1, r25	; 0x01
    1f16:	88 83       	st	Y, r24
    1f18:	ca 51       	subi	r28, 0x1A	; 26
    1f1a:	d1 40       	sbci	r29, 0x01	; 1
    1f1c:	98 e0       	ldi	r25, 0x08	; 8
    1f1e:	c4 5e       	subi	r28, 0xE4	; 228
    1f20:	de 4f       	sbci	r29, 0xFE	; 254
    1f22:	98 83       	st	Y, r25
    1f24:	cc 51       	subi	r28, 0x1C	; 28
    1f26:	d1 40       	sbci	r29, 0x01	; 1
    1f28:	c6 5e       	subi	r28, 0xE6	; 230
    1f2a:	de 4f       	sbci	r29, 0xFE	; 254
    1f2c:	e8 81       	ld	r30, Y
    1f2e:	f9 81       	ldd	r31, Y+1	; 0x01
    1f30:	ca 51       	subi	r28, 0x1A	; 26
    1f32:	d1 40       	sbci	r29, 0x01	; 1
    1f34:	00 80       	ld	r0, Z
    1f36:	c6 5e       	subi	r28, 0xE6	; 230
    1f38:	de 4f       	sbci	r29, 0xFE	; 254
    1f3a:	88 81       	ld	r24, Y
    1f3c:	99 81       	ldd	r25, Y+1	; 0x01
    1f3e:	ca 51       	subi	r28, 0x1A	; 26
    1f40:	d1 40       	sbci	r29, 0x01	; 1
    1f42:	01 96       	adiw	r24, 0x01	; 1
    1f44:	c6 5e       	subi	r28, 0xE6	; 230
    1f46:	de 4f       	sbci	r29, 0xFE	; 254
    1f48:	99 83       	std	Y+1, r25	; 0x01
    1f4a:	88 83       	st	Y, r24
    1f4c:	ca 51       	subi	r28, 0x1A	; 26
    1f4e:	d1 40       	sbci	r29, 0x01	; 1
    1f50:	c8 5e       	subi	r28, 0xE8	; 232
    1f52:	de 4f       	sbci	r29, 0xFE	; 254
    1f54:	e8 81       	ld	r30, Y
    1f56:	f9 81       	ldd	r31, Y+1	; 0x01
    1f58:	c8 51       	subi	r28, 0x18	; 24
    1f5a:	d1 40       	sbci	r29, 0x01	; 1
    1f5c:	00 82       	st	Z, r0
    1f5e:	c8 5e       	subi	r28, 0xE8	; 232
    1f60:	de 4f       	sbci	r29, 0xFE	; 254
    1f62:	88 81       	ld	r24, Y
    1f64:	99 81       	ldd	r25, Y+1	; 0x01
    1f66:	c8 51       	subi	r28, 0x18	; 24
    1f68:	d1 40       	sbci	r29, 0x01	; 1
    1f6a:	01 96       	adiw	r24, 0x01	; 1
    1f6c:	c8 5e       	subi	r28, 0xE8	; 232
    1f6e:	de 4f       	sbci	r29, 0xFE	; 254
    1f70:	99 83       	std	Y+1, r25	; 0x01
    1f72:	88 83       	st	Y, r24
    1f74:	c8 51       	subi	r28, 0x18	; 24
    1f76:	d1 40       	sbci	r29, 0x01	; 1
    1f78:	c4 5e       	subi	r28, 0xE4	; 228
    1f7a:	de 4f       	sbci	r29, 0xFE	; 254
    1f7c:	98 81       	ld	r25, Y
    1f7e:	cc 51       	subi	r28, 0x1C	; 28
    1f80:	d1 40       	sbci	r29, 0x01	; 1
    1f82:	91 50       	subi	r25, 0x01	; 1
    1f84:	c4 5e       	subi	r28, 0xE4	; 228
    1f86:	de 4f       	sbci	r29, 0xFE	; 254
    1f88:	98 83       	st	Y, r25
    1f8a:	cc 51       	subi	r28, 0x1C	; 28
    1f8c:	d1 40       	sbci	r29, 0x01	; 1
    1f8e:	c4 5e       	subi	r28, 0xE4	; 228
    1f90:	de 4f       	sbci	r29, 0xFE	; 254
    1f92:	e8 81       	ld	r30, Y
    1f94:	cc 51       	subi	r28, 0x1C	; 28
    1f96:	d1 40       	sbci	r29, 0x01	; 1
    1f98:	ee 23       	and	r30, r30
    1f9a:	31 f6       	brne	.-116    	; 0x1f28 <main+0x69c>
	uint8 Local_u8LoopCounter=0;
    1f9c:	fe 01       	movw	r30, r28
    1f9e:	e3 57       	subi	r30, 0x73	; 115
    1fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa2:	10 82       	st	Z, r1
	PORT_voidInit();
    1fa4:	0e 94 26 0c 	call	0x184c	; 0x184c <PORT_voidInit>
	CLCD_voidInit();
    1fa8:	0e 94 90 06 	call	0xd20	; 0xd20 <CLCD_voidInit>

	while(1)
	{
		CLCD_viodGoToXY(2,0);
    1fac:	82 e0       	ldi	r24, 0x02	; 2
    1fae:	60 e0       	ldi	r22, 0x00	; 0
    1fb0:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("Hello..");
    1fb4:	80 e6       	ldi	r24, 0x60	; 96
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		CLCD_viodGoToXY(2,1);
    1fbc:	82 e0       	ldi	r24, 0x02	; 2
    1fbe:	61 e0       	ldi	r22, 0x01	; 1
    1fc0:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("I'm Hamoksha");
    1fc4:	88 e6       	ldi	r24, 0x68	; 104
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,0,0,0);
    1fcc:	ce 01       	movw	r24, r28
    1fce:	82 57       	subi	r24, 0x72	; 114
    1fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd2:	60 e0       	ldi	r22, 0x00	; 0
    1fd4:	40 e0       	ldi	r20, 0x00	; 0
    1fd6:	20 e0       	ldi	r18, 0x00	; 0
    1fd8:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		for (Local_u8LoopCounter=0;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    1fdc:	fe 01       	movw	r30, r28
    1fde:	e3 57       	subi	r30, 0x73	; 115
    1fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe2:	10 82       	st	Z, r1
    1fe4:	7f c1       	rjmp	.+766    	; 0x22e4 <main+0xa58>
		{
			CLCD_voidSendSpecialCharacter(Local_u8HamokshaHi1,2,0,1);
    1fe6:	ce 01       	movw	r24, r28
    1fe8:	8a 56       	subi	r24, 0x6A	; 106
    1fea:	9f 4f       	sbci	r25, 0xFF	; 255
    1fec:	62 e0       	ldi	r22, 0x02	; 2
    1fee:	40 e0       	ldi	r20, 0x00	; 0
    1ff0:	21 e0       	ldi	r18, 0x01	; 1
    1ff2:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	e7 57       	subi	r30, 0x77	; 119
    1ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffc:	80 e0       	ldi	r24, 0x00	; 0
    1ffe:	90 e0       	ldi	r25, 0x00	; 0
    2000:	aa e7       	ldi	r26, 0x7A	; 122
    2002:	b3 e4       	ldi	r27, 0x43	; 67
    2004:	80 83       	st	Z, r24
    2006:	91 83       	std	Z+1, r25	; 0x01
    2008:	a2 83       	std	Z+2, r26	; 0x02
    200a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    200c:	8e 01       	movw	r16, r28
    200e:	0b 57       	subi	r16, 0x7B	; 123
    2010:	1f 4f       	sbci	r17, 0xFF	; 255
    2012:	fe 01       	movw	r30, r28
    2014:	e7 57       	subi	r30, 0x77	; 119
    2016:	ff 4f       	sbci	r31, 0xFF	; 255
    2018:	60 81       	ld	r22, Z
    201a:	71 81       	ldd	r23, Z+1	; 0x01
    201c:	82 81       	ldd	r24, Z+2	; 0x02
    201e:	93 81       	ldd	r25, Z+3	; 0x03
    2020:	20 e0       	ldi	r18, 0x00	; 0
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	4a e7       	ldi	r20, 0x7A	; 122
    2026:	55 e4       	ldi	r21, 0x45	; 69
    2028:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    202c:	dc 01       	movw	r26, r24
    202e:	cb 01       	movw	r24, r22
    2030:	f8 01       	movw	r30, r16
    2032:	80 83       	st	Z, r24
    2034:	91 83       	std	Z+1, r25	; 0x01
    2036:	a2 83       	std	Z+2, r26	; 0x02
    2038:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    203a:	fe 01       	movw	r30, r28
    203c:	eb 57       	subi	r30, 0x7B	; 123
    203e:	ff 4f       	sbci	r31, 0xFF	; 255
    2040:	60 81       	ld	r22, Z
    2042:	71 81       	ldd	r23, Z+1	; 0x01
    2044:	82 81       	ldd	r24, Z+2	; 0x02
    2046:	93 81       	ldd	r25, Z+3	; 0x03
    2048:	20 e0       	ldi	r18, 0x00	; 0
    204a:	30 e0       	ldi	r19, 0x00	; 0
    204c:	40 e8       	ldi	r20, 0x80	; 128
    204e:	5f e3       	ldi	r21, 0x3F	; 63
    2050:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2054:	88 23       	and	r24, r24
    2056:	44 f4       	brge	.+16     	; 0x2068 <main+0x7dc>
		__ticks = 1;
    2058:	fe 01       	movw	r30, r28
    205a:	ed 57       	subi	r30, 0x7D	; 125
    205c:	ff 4f       	sbci	r31, 0xFF	; 255
    205e:	81 e0       	ldi	r24, 0x01	; 1
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	91 83       	std	Z+1, r25	; 0x01
    2064:	80 83       	st	Z, r24
    2066:	64 c0       	rjmp	.+200    	; 0x2130 <main+0x8a4>
	else if (__tmp > 65535)
    2068:	fe 01       	movw	r30, r28
    206a:	eb 57       	subi	r30, 0x7B	; 123
    206c:	ff 4f       	sbci	r31, 0xFF	; 255
    206e:	60 81       	ld	r22, Z
    2070:	71 81       	ldd	r23, Z+1	; 0x01
    2072:	82 81       	ldd	r24, Z+2	; 0x02
    2074:	93 81       	ldd	r25, Z+3	; 0x03
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	3f ef       	ldi	r19, 0xFF	; 255
    207a:	4f e7       	ldi	r20, 0x7F	; 127
    207c:	57 e4       	ldi	r21, 0x47	; 71
    207e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2082:	18 16       	cp	r1, r24
    2084:	0c f0       	brlt	.+2      	; 0x2088 <main+0x7fc>
    2086:	43 c0       	rjmp	.+134    	; 0x210e <main+0x882>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2088:	fe 01       	movw	r30, r28
    208a:	e7 57       	subi	r30, 0x77	; 119
    208c:	ff 4f       	sbci	r31, 0xFF	; 255
    208e:	60 81       	ld	r22, Z
    2090:	71 81       	ldd	r23, Z+1	; 0x01
    2092:	82 81       	ldd	r24, Z+2	; 0x02
    2094:	93 81       	ldd	r25, Z+3	; 0x03
    2096:	20 e0       	ldi	r18, 0x00	; 0
    2098:	30 e0       	ldi	r19, 0x00	; 0
    209a:	40 e2       	ldi	r20, 0x20	; 32
    209c:	51 e4       	ldi	r21, 0x41	; 65
    209e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20a2:	dc 01       	movw	r26, r24
    20a4:	cb 01       	movw	r24, r22
    20a6:	8e 01       	movw	r16, r28
    20a8:	0d 57       	subi	r16, 0x7D	; 125
    20aa:	1f 4f       	sbci	r17, 0xFF	; 255
    20ac:	bc 01       	movw	r22, r24
    20ae:	cd 01       	movw	r24, r26
    20b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20b4:	dc 01       	movw	r26, r24
    20b6:	cb 01       	movw	r24, r22
    20b8:	f8 01       	movw	r30, r16
    20ba:	91 83       	std	Z+1, r25	; 0x01
    20bc:	80 83       	st	Z, r24
    20be:	1f c0       	rjmp	.+62     	; 0x20fe <main+0x872>
    20c0:	fe 01       	movw	r30, r28
    20c2:	ef 57       	subi	r30, 0x7F	; 127
    20c4:	ff 4f       	sbci	r31, 0xFF	; 255
    20c6:	80 e9       	ldi	r24, 0x90	; 144
    20c8:	91 e0       	ldi	r25, 0x01	; 1
    20ca:	91 83       	std	Z+1, r25	; 0x01
    20cc:	80 83       	st	Z, r24
    20ce:	fe 01       	movw	r30, r28
    20d0:	ef 57       	subi	r30, 0x7F	; 127
    20d2:	ff 4f       	sbci	r31, 0xFF	; 255
    20d4:	80 81       	ld	r24, Z
    20d6:	91 81       	ldd	r25, Z+1	; 0x01
    20d8:	01 97       	sbiw	r24, 0x01	; 1
    20da:	f1 f7       	brne	.-4      	; 0x20d8 <main+0x84c>
    20dc:	fe 01       	movw	r30, r28
    20de:	ef 57       	subi	r30, 0x7F	; 127
    20e0:	ff 4f       	sbci	r31, 0xFF	; 255
    20e2:	91 83       	std	Z+1, r25	; 0x01
    20e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20e6:	de 01       	movw	r26, r28
    20e8:	ad 57       	subi	r26, 0x7D	; 125
    20ea:	bf 4f       	sbci	r27, 0xFF	; 255
    20ec:	fe 01       	movw	r30, r28
    20ee:	ed 57       	subi	r30, 0x7D	; 125
    20f0:	ff 4f       	sbci	r31, 0xFF	; 255
    20f2:	80 81       	ld	r24, Z
    20f4:	91 81       	ldd	r25, Z+1	; 0x01
    20f6:	01 97       	sbiw	r24, 0x01	; 1
    20f8:	11 96       	adiw	r26, 0x01	; 1
    20fa:	9c 93       	st	X, r25
    20fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20fe:	fe 01       	movw	r30, r28
    2100:	ed 57       	subi	r30, 0x7D	; 125
    2102:	ff 4f       	sbci	r31, 0xFF	; 255
    2104:	80 81       	ld	r24, Z
    2106:	91 81       	ldd	r25, Z+1	; 0x01
    2108:	00 97       	sbiw	r24, 0x00	; 0
    210a:	d1 f6       	brne	.-76     	; 0x20c0 <main+0x834>
    210c:	27 c0       	rjmp	.+78     	; 0x215c <main+0x8d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    210e:	8e 01       	movw	r16, r28
    2110:	0d 57       	subi	r16, 0x7D	; 125
    2112:	1f 4f       	sbci	r17, 0xFF	; 255
    2114:	fe 01       	movw	r30, r28
    2116:	eb 57       	subi	r30, 0x7B	; 123
    2118:	ff 4f       	sbci	r31, 0xFF	; 255
    211a:	60 81       	ld	r22, Z
    211c:	71 81       	ldd	r23, Z+1	; 0x01
    211e:	82 81       	ldd	r24, Z+2	; 0x02
    2120:	93 81       	ldd	r25, Z+3	; 0x03
    2122:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2126:	dc 01       	movw	r26, r24
    2128:	cb 01       	movw	r24, r22
    212a:	f8 01       	movw	r30, r16
    212c:	91 83       	std	Z+1, r25	; 0x01
    212e:	80 83       	st	Z, r24
    2130:	de 01       	movw	r26, r28
    2132:	a1 58       	subi	r26, 0x81	; 129
    2134:	bf 4f       	sbci	r27, 0xFF	; 255
    2136:	fe 01       	movw	r30, r28
    2138:	ed 57       	subi	r30, 0x7D	; 125
    213a:	ff 4f       	sbci	r31, 0xFF	; 255
    213c:	80 81       	ld	r24, Z
    213e:	91 81       	ldd	r25, Z+1	; 0x01
    2140:	8d 93       	st	X+, r24
    2142:	9c 93       	st	X, r25
    2144:	fe 01       	movw	r30, r28
    2146:	e1 58       	subi	r30, 0x81	; 129
    2148:	ff 4f       	sbci	r31, 0xFF	; 255
    214a:	80 81       	ld	r24, Z
    214c:	91 81       	ldd	r25, Z+1	; 0x01
    214e:	01 97       	sbiw	r24, 0x01	; 1
    2150:	f1 f7       	brne	.-4      	; 0x214e <main+0x8c2>
    2152:	fe 01       	movw	r30, r28
    2154:	e1 58       	subi	r30, 0x81	; 129
    2156:	ff 4f       	sbci	r31, 0xFF	; 255
    2158:	91 83       	std	Z+1, r25	; 0x01
    215a:	80 83       	st	Z, r24
			_delay_ms(250);
			CLCD_voidSendSpecialCharacter(Local_u8HamokshaHi2,3,0,1);
    215c:	ce 01       	movw	r24, r28
    215e:	82 56       	subi	r24, 0x62	; 98
    2160:	9f 4f       	sbci	r25, 0xFF	; 255
    2162:	63 e0       	ldi	r22, 0x03	; 3
    2164:	40 e0       	ldi	r20, 0x00	; 0
    2166:	21 e0       	ldi	r18, 0x01	; 1
    2168:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    216c:	fe 01       	movw	r30, r28
    216e:	e5 58       	subi	r30, 0x85	; 133
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	80 e0       	ldi	r24, 0x00	; 0
    2174:	90 e0       	ldi	r25, 0x00	; 0
    2176:	aa e7       	ldi	r26, 0x7A	; 122
    2178:	b3 e4       	ldi	r27, 0x43	; 67
    217a:	80 83       	st	Z, r24
    217c:	91 83       	std	Z+1, r25	; 0x01
    217e:	a2 83       	std	Z+2, r26	; 0x02
    2180:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2182:	8e 01       	movw	r16, r28
    2184:	09 58       	subi	r16, 0x89	; 137
    2186:	1f 4f       	sbci	r17, 0xFF	; 255
    2188:	fe 01       	movw	r30, r28
    218a:	e5 58       	subi	r30, 0x85	; 133
    218c:	ff 4f       	sbci	r31, 0xFF	; 255
    218e:	60 81       	ld	r22, Z
    2190:	71 81       	ldd	r23, Z+1	; 0x01
    2192:	82 81       	ldd	r24, Z+2	; 0x02
    2194:	93 81       	ldd	r25, Z+3	; 0x03
    2196:	20 e0       	ldi	r18, 0x00	; 0
    2198:	30 e0       	ldi	r19, 0x00	; 0
    219a:	4a e7       	ldi	r20, 0x7A	; 122
    219c:	55 e4       	ldi	r21, 0x45	; 69
    219e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21a2:	dc 01       	movw	r26, r24
    21a4:	cb 01       	movw	r24, r22
    21a6:	f8 01       	movw	r30, r16
    21a8:	80 83       	st	Z, r24
    21aa:	91 83       	std	Z+1, r25	; 0x01
    21ac:	a2 83       	std	Z+2, r26	; 0x02
    21ae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21b0:	fe 01       	movw	r30, r28
    21b2:	e9 58       	subi	r30, 0x89	; 137
    21b4:	ff 4f       	sbci	r31, 0xFF	; 255
    21b6:	60 81       	ld	r22, Z
    21b8:	71 81       	ldd	r23, Z+1	; 0x01
    21ba:	82 81       	ldd	r24, Z+2	; 0x02
    21bc:	93 81       	ldd	r25, Z+3	; 0x03
    21be:	20 e0       	ldi	r18, 0x00	; 0
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	40 e8       	ldi	r20, 0x80	; 128
    21c4:	5f e3       	ldi	r21, 0x3F	; 63
    21c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    21ca:	88 23       	and	r24, r24
    21cc:	44 f4       	brge	.+16     	; 0x21de <main+0x952>
		__ticks = 1;
    21ce:	fe 01       	movw	r30, r28
    21d0:	eb 58       	subi	r30, 0x8B	; 139
    21d2:	ff 4f       	sbci	r31, 0xFF	; 255
    21d4:	81 e0       	ldi	r24, 0x01	; 1
    21d6:	90 e0       	ldi	r25, 0x00	; 0
    21d8:	91 83       	std	Z+1, r25	; 0x01
    21da:	80 83       	st	Z, r24
    21dc:	64 c0       	rjmp	.+200    	; 0x22a6 <main+0xa1a>
	else if (__tmp > 65535)
    21de:	fe 01       	movw	r30, r28
    21e0:	e9 58       	subi	r30, 0x89	; 137
    21e2:	ff 4f       	sbci	r31, 0xFF	; 255
    21e4:	60 81       	ld	r22, Z
    21e6:	71 81       	ldd	r23, Z+1	; 0x01
    21e8:	82 81       	ldd	r24, Z+2	; 0x02
    21ea:	93 81       	ldd	r25, Z+3	; 0x03
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	3f ef       	ldi	r19, 0xFF	; 255
    21f0:	4f e7       	ldi	r20, 0x7F	; 127
    21f2:	57 e4       	ldi	r21, 0x47	; 71
    21f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    21f8:	18 16       	cp	r1, r24
    21fa:	0c f0       	brlt	.+2      	; 0x21fe <main+0x972>
    21fc:	43 c0       	rjmp	.+134    	; 0x2284 <main+0x9f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21fe:	fe 01       	movw	r30, r28
    2200:	e5 58       	subi	r30, 0x85	; 133
    2202:	ff 4f       	sbci	r31, 0xFF	; 255
    2204:	60 81       	ld	r22, Z
    2206:	71 81       	ldd	r23, Z+1	; 0x01
    2208:	82 81       	ldd	r24, Z+2	; 0x02
    220a:	93 81       	ldd	r25, Z+3	; 0x03
    220c:	20 e0       	ldi	r18, 0x00	; 0
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	40 e2       	ldi	r20, 0x20	; 32
    2212:	51 e4       	ldi	r21, 0x41	; 65
    2214:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2218:	dc 01       	movw	r26, r24
    221a:	cb 01       	movw	r24, r22
    221c:	8e 01       	movw	r16, r28
    221e:	0b 58       	subi	r16, 0x8B	; 139
    2220:	1f 4f       	sbci	r17, 0xFF	; 255
    2222:	bc 01       	movw	r22, r24
    2224:	cd 01       	movw	r24, r26
    2226:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    222a:	dc 01       	movw	r26, r24
    222c:	cb 01       	movw	r24, r22
    222e:	f8 01       	movw	r30, r16
    2230:	91 83       	std	Z+1, r25	; 0x01
    2232:	80 83       	st	Z, r24
    2234:	1f c0       	rjmp	.+62     	; 0x2274 <main+0x9e8>
    2236:	fe 01       	movw	r30, r28
    2238:	ed 58       	subi	r30, 0x8D	; 141
    223a:	ff 4f       	sbci	r31, 0xFF	; 255
    223c:	80 e9       	ldi	r24, 0x90	; 144
    223e:	91 e0       	ldi	r25, 0x01	; 1
    2240:	91 83       	std	Z+1, r25	; 0x01
    2242:	80 83       	st	Z, r24
    2244:	fe 01       	movw	r30, r28
    2246:	ed 58       	subi	r30, 0x8D	; 141
    2248:	ff 4f       	sbci	r31, 0xFF	; 255
    224a:	80 81       	ld	r24, Z
    224c:	91 81       	ldd	r25, Z+1	; 0x01
    224e:	01 97       	sbiw	r24, 0x01	; 1
    2250:	f1 f7       	brne	.-4      	; 0x224e <main+0x9c2>
    2252:	fe 01       	movw	r30, r28
    2254:	ed 58       	subi	r30, 0x8D	; 141
    2256:	ff 4f       	sbci	r31, 0xFF	; 255
    2258:	91 83       	std	Z+1, r25	; 0x01
    225a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    225c:	de 01       	movw	r26, r28
    225e:	ab 58       	subi	r26, 0x8B	; 139
    2260:	bf 4f       	sbci	r27, 0xFF	; 255
    2262:	fe 01       	movw	r30, r28
    2264:	eb 58       	subi	r30, 0x8B	; 139
    2266:	ff 4f       	sbci	r31, 0xFF	; 255
    2268:	80 81       	ld	r24, Z
    226a:	91 81       	ldd	r25, Z+1	; 0x01
    226c:	01 97       	sbiw	r24, 0x01	; 1
    226e:	11 96       	adiw	r26, 0x01	; 1
    2270:	9c 93       	st	X, r25
    2272:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2274:	fe 01       	movw	r30, r28
    2276:	eb 58       	subi	r30, 0x8B	; 139
    2278:	ff 4f       	sbci	r31, 0xFF	; 255
    227a:	80 81       	ld	r24, Z
    227c:	91 81       	ldd	r25, Z+1	; 0x01
    227e:	00 97       	sbiw	r24, 0x00	; 0
    2280:	d1 f6       	brne	.-76     	; 0x2236 <main+0x9aa>
    2282:	27 c0       	rjmp	.+78     	; 0x22d2 <main+0xa46>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2284:	8e 01       	movw	r16, r28
    2286:	0b 58       	subi	r16, 0x8B	; 139
    2288:	1f 4f       	sbci	r17, 0xFF	; 255
    228a:	fe 01       	movw	r30, r28
    228c:	e9 58       	subi	r30, 0x89	; 137
    228e:	ff 4f       	sbci	r31, 0xFF	; 255
    2290:	60 81       	ld	r22, Z
    2292:	71 81       	ldd	r23, Z+1	; 0x01
    2294:	82 81       	ldd	r24, Z+2	; 0x02
    2296:	93 81       	ldd	r25, Z+3	; 0x03
    2298:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    229c:	dc 01       	movw	r26, r24
    229e:	cb 01       	movw	r24, r22
    22a0:	f8 01       	movw	r30, r16
    22a2:	91 83       	std	Z+1, r25	; 0x01
    22a4:	80 83       	st	Z, r24
    22a6:	de 01       	movw	r26, r28
    22a8:	af 58       	subi	r26, 0x8F	; 143
    22aa:	bf 4f       	sbci	r27, 0xFF	; 255
    22ac:	fe 01       	movw	r30, r28
    22ae:	eb 58       	subi	r30, 0x8B	; 139
    22b0:	ff 4f       	sbci	r31, 0xFF	; 255
    22b2:	80 81       	ld	r24, Z
    22b4:	91 81       	ldd	r25, Z+1	; 0x01
    22b6:	8d 93       	st	X+, r24
    22b8:	9c 93       	st	X, r25
    22ba:	fe 01       	movw	r30, r28
    22bc:	ef 58       	subi	r30, 0x8F	; 143
    22be:	ff 4f       	sbci	r31, 0xFF	; 255
    22c0:	80 81       	ld	r24, Z
    22c2:	91 81       	ldd	r25, Z+1	; 0x01
    22c4:	01 97       	sbiw	r24, 0x01	; 1
    22c6:	f1 f7       	brne	.-4      	; 0x22c4 <main+0xa38>
    22c8:	fe 01       	movw	r30, r28
    22ca:	ef 58       	subi	r30, 0x8F	; 143
    22cc:	ff 4f       	sbci	r31, 0xFF	; 255
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	80 83       	st	Z, r24
		CLCD_viodGoToXY(2,0);
		CLCD_u8SendString("Hello..");
		CLCD_viodGoToXY(2,1);
		CLCD_u8SendString("I'm Hamoksha");
		CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,0,0,0);
		for (Local_u8LoopCounter=0;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    22d2:	de 01       	movw	r26, r28
    22d4:	a3 57       	subi	r26, 0x73	; 115
    22d6:	bf 4f       	sbci	r27, 0xFF	; 255
    22d8:	fe 01       	movw	r30, r28
    22da:	e3 57       	subi	r30, 0x73	; 115
    22dc:	ff 4f       	sbci	r31, 0xFF	; 255
    22de:	80 81       	ld	r24, Z
    22e0:	8f 5f       	subi	r24, 0xFF	; 255
    22e2:	8c 93       	st	X, r24
    22e4:	fe 01       	movw	r30, r28
    22e6:	e3 57       	subi	r30, 0x73	; 115
    22e8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ea:	80 81       	ld	r24, Z
    22ec:	80 31       	cpi	r24, 0x10	; 16
    22ee:	08 f4       	brcc	.+2      	; 0x22f2 <main+0xa66>
    22f0:	7a ce       	rjmp	.-780    	; 0x1fe6 <main+0x75a>
			CLCD_voidSendSpecialCharacter(Local_u8HamokshaHi1,2,0,1);
			_delay_ms(250);
			CLCD_voidSendSpecialCharacter(Local_u8HamokshaHi2,3,0,1);
			_delay_ms(250);
		}
		CLCD_voidSendCmd(1);
    22f2:	81 e0       	ldi	r24, 0x01	; 1
    22f4:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
		CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,0,0,0);
    22f8:	ce 01       	movw	r24, r28
    22fa:	82 57       	subi	r24, 0x72	; 114
    22fc:	9f 4f       	sbci	r25, 0xFF	; 255
    22fe:	60 e0       	ldi	r22, 0x00	; 0
    2300:	40 e0       	ldi	r20, 0x00	; 0
    2302:	20 e0       	ldi	r18, 0x00	; 0
    2304:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_voidSendSpecialCharacter(Local_u8BasketMode1,1,0,1);
    2308:	ce 01       	movw	r24, r28
    230a:	8a 55       	subi	r24, 0x5A	; 90
    230c:	9f 4f       	sbci	r25, 0xFF	; 255
    230e:	61 e0       	ldi	r22, 0x01	; 1
    2310:	40 e0       	ldi	r20, 0x00	; 0
    2312:	21 e0       	ldi	r18, 0x01	; 1
    2314:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_viodGoToXY(2,0);
    2318:	82 e0       	ldi	r24, 0x02	; 2
    231a:	60 e0       	ldi	r22, 0x00	; 0
    231c:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("I can play");
    2320:	85 e7       	ldi	r24, 0x75	; 117
    2322:	90 e0       	ldi	r25, 0x00	; 0
    2324:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		CLCD_viodGoToXY(2,1);
    2328:	82 e0       	ldi	r24, 0x02	; 2
    232a:	61 e0       	ldi	r22, 0x01	; 1
    232c:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("Basketball");
    2330:	80 e8       	ldi	r24, 0x80	; 128
    2332:	90 e0       	ldi	r25, 0x00	; 0
    2334:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		for (Local_u8LoopCounter=0;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    2338:	fe 01       	movw	r30, r28
    233a:	e3 57       	subi	r30, 0x73	; 115
    233c:	ff 4f       	sbci	r31, 0xFF	; 255
    233e:	10 82       	st	Z, r1
    2340:	7f c1       	rjmp	.+766    	; 0x2640 <main+0xdb4>
		{
			CLCD_voidSendSpecialCharacter(Local_u8BasketMode1,1,0,1);
    2342:	ce 01       	movw	r24, r28
    2344:	8a 55       	subi	r24, 0x5A	; 90
    2346:	9f 4f       	sbci	r25, 0xFF	; 255
    2348:	61 e0       	ldi	r22, 0x01	; 1
    234a:	40 e0       	ldi	r20, 0x00	; 0
    234c:	21 e0       	ldi	r18, 0x01	; 1
    234e:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    2352:	fe 01       	movw	r30, r28
    2354:	e3 59       	subi	r30, 0x93	; 147
    2356:	ff 4f       	sbci	r31, 0xFF	; 255
    2358:	80 e0       	ldi	r24, 0x00	; 0
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	aa e7       	ldi	r26, 0x7A	; 122
    235e:	b3 e4       	ldi	r27, 0x43	; 67
    2360:	80 83       	st	Z, r24
    2362:	91 83       	std	Z+1, r25	; 0x01
    2364:	a2 83       	std	Z+2, r26	; 0x02
    2366:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2368:	8e 01       	movw	r16, r28
    236a:	07 59       	subi	r16, 0x97	; 151
    236c:	1f 4f       	sbci	r17, 0xFF	; 255
    236e:	fe 01       	movw	r30, r28
    2370:	e3 59       	subi	r30, 0x93	; 147
    2372:	ff 4f       	sbci	r31, 0xFF	; 255
    2374:	60 81       	ld	r22, Z
    2376:	71 81       	ldd	r23, Z+1	; 0x01
    2378:	82 81       	ldd	r24, Z+2	; 0x02
    237a:	93 81       	ldd	r25, Z+3	; 0x03
    237c:	20 e0       	ldi	r18, 0x00	; 0
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	4a e7       	ldi	r20, 0x7A	; 122
    2382:	55 e4       	ldi	r21, 0x45	; 69
    2384:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2388:	dc 01       	movw	r26, r24
    238a:	cb 01       	movw	r24, r22
    238c:	f8 01       	movw	r30, r16
    238e:	80 83       	st	Z, r24
    2390:	91 83       	std	Z+1, r25	; 0x01
    2392:	a2 83       	std	Z+2, r26	; 0x02
    2394:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2396:	fe 01       	movw	r30, r28
    2398:	e7 59       	subi	r30, 0x97	; 151
    239a:	ff 4f       	sbci	r31, 0xFF	; 255
    239c:	60 81       	ld	r22, Z
    239e:	71 81       	ldd	r23, Z+1	; 0x01
    23a0:	82 81       	ldd	r24, Z+2	; 0x02
    23a2:	93 81       	ldd	r25, Z+3	; 0x03
    23a4:	20 e0       	ldi	r18, 0x00	; 0
    23a6:	30 e0       	ldi	r19, 0x00	; 0
    23a8:	40 e8       	ldi	r20, 0x80	; 128
    23aa:	5f e3       	ldi	r21, 0x3F	; 63
    23ac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23b0:	88 23       	and	r24, r24
    23b2:	44 f4       	brge	.+16     	; 0x23c4 <main+0xb38>
		__ticks = 1;
    23b4:	fe 01       	movw	r30, r28
    23b6:	e9 59       	subi	r30, 0x99	; 153
    23b8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ba:	81 e0       	ldi	r24, 0x01	; 1
    23bc:	90 e0       	ldi	r25, 0x00	; 0
    23be:	91 83       	std	Z+1, r25	; 0x01
    23c0:	80 83       	st	Z, r24
    23c2:	64 c0       	rjmp	.+200    	; 0x248c <main+0xc00>
	else if (__tmp > 65535)
    23c4:	fe 01       	movw	r30, r28
    23c6:	e7 59       	subi	r30, 0x97	; 151
    23c8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ca:	60 81       	ld	r22, Z
    23cc:	71 81       	ldd	r23, Z+1	; 0x01
    23ce:	82 81       	ldd	r24, Z+2	; 0x02
    23d0:	93 81       	ldd	r25, Z+3	; 0x03
    23d2:	20 e0       	ldi	r18, 0x00	; 0
    23d4:	3f ef       	ldi	r19, 0xFF	; 255
    23d6:	4f e7       	ldi	r20, 0x7F	; 127
    23d8:	57 e4       	ldi	r21, 0x47	; 71
    23da:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23de:	18 16       	cp	r1, r24
    23e0:	0c f0       	brlt	.+2      	; 0x23e4 <main+0xb58>
    23e2:	43 c0       	rjmp	.+134    	; 0x246a <main+0xbde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23e4:	fe 01       	movw	r30, r28
    23e6:	e3 59       	subi	r30, 0x93	; 147
    23e8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ea:	60 81       	ld	r22, Z
    23ec:	71 81       	ldd	r23, Z+1	; 0x01
    23ee:	82 81       	ldd	r24, Z+2	; 0x02
    23f0:	93 81       	ldd	r25, Z+3	; 0x03
    23f2:	20 e0       	ldi	r18, 0x00	; 0
    23f4:	30 e0       	ldi	r19, 0x00	; 0
    23f6:	40 e2       	ldi	r20, 0x20	; 32
    23f8:	51 e4       	ldi	r21, 0x41	; 65
    23fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23fe:	dc 01       	movw	r26, r24
    2400:	cb 01       	movw	r24, r22
    2402:	8e 01       	movw	r16, r28
    2404:	09 59       	subi	r16, 0x99	; 153
    2406:	1f 4f       	sbci	r17, 0xFF	; 255
    2408:	bc 01       	movw	r22, r24
    240a:	cd 01       	movw	r24, r26
    240c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2410:	dc 01       	movw	r26, r24
    2412:	cb 01       	movw	r24, r22
    2414:	f8 01       	movw	r30, r16
    2416:	91 83       	std	Z+1, r25	; 0x01
    2418:	80 83       	st	Z, r24
    241a:	1f c0       	rjmp	.+62     	; 0x245a <main+0xbce>
    241c:	fe 01       	movw	r30, r28
    241e:	eb 59       	subi	r30, 0x9B	; 155
    2420:	ff 4f       	sbci	r31, 0xFF	; 255
    2422:	80 e9       	ldi	r24, 0x90	; 144
    2424:	91 e0       	ldi	r25, 0x01	; 1
    2426:	91 83       	std	Z+1, r25	; 0x01
    2428:	80 83       	st	Z, r24
    242a:	fe 01       	movw	r30, r28
    242c:	eb 59       	subi	r30, 0x9B	; 155
    242e:	ff 4f       	sbci	r31, 0xFF	; 255
    2430:	80 81       	ld	r24, Z
    2432:	91 81       	ldd	r25, Z+1	; 0x01
    2434:	01 97       	sbiw	r24, 0x01	; 1
    2436:	f1 f7       	brne	.-4      	; 0x2434 <main+0xba8>
    2438:	fe 01       	movw	r30, r28
    243a:	eb 59       	subi	r30, 0x9B	; 155
    243c:	ff 4f       	sbci	r31, 0xFF	; 255
    243e:	91 83       	std	Z+1, r25	; 0x01
    2440:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2442:	de 01       	movw	r26, r28
    2444:	a9 59       	subi	r26, 0x99	; 153
    2446:	bf 4f       	sbci	r27, 0xFF	; 255
    2448:	fe 01       	movw	r30, r28
    244a:	e9 59       	subi	r30, 0x99	; 153
    244c:	ff 4f       	sbci	r31, 0xFF	; 255
    244e:	80 81       	ld	r24, Z
    2450:	91 81       	ldd	r25, Z+1	; 0x01
    2452:	01 97       	sbiw	r24, 0x01	; 1
    2454:	11 96       	adiw	r26, 0x01	; 1
    2456:	9c 93       	st	X, r25
    2458:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    245a:	fe 01       	movw	r30, r28
    245c:	e9 59       	subi	r30, 0x99	; 153
    245e:	ff 4f       	sbci	r31, 0xFF	; 255
    2460:	80 81       	ld	r24, Z
    2462:	91 81       	ldd	r25, Z+1	; 0x01
    2464:	00 97       	sbiw	r24, 0x00	; 0
    2466:	d1 f6       	brne	.-76     	; 0x241c <main+0xb90>
    2468:	27 c0       	rjmp	.+78     	; 0x24b8 <main+0xc2c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    246a:	8e 01       	movw	r16, r28
    246c:	09 59       	subi	r16, 0x99	; 153
    246e:	1f 4f       	sbci	r17, 0xFF	; 255
    2470:	fe 01       	movw	r30, r28
    2472:	e7 59       	subi	r30, 0x97	; 151
    2474:	ff 4f       	sbci	r31, 0xFF	; 255
    2476:	60 81       	ld	r22, Z
    2478:	71 81       	ldd	r23, Z+1	; 0x01
    247a:	82 81       	ldd	r24, Z+2	; 0x02
    247c:	93 81       	ldd	r25, Z+3	; 0x03
    247e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2482:	dc 01       	movw	r26, r24
    2484:	cb 01       	movw	r24, r22
    2486:	f8 01       	movw	r30, r16
    2488:	91 83       	std	Z+1, r25	; 0x01
    248a:	80 83       	st	Z, r24
    248c:	de 01       	movw	r26, r28
    248e:	ad 59       	subi	r26, 0x9D	; 157
    2490:	bf 4f       	sbci	r27, 0xFF	; 255
    2492:	fe 01       	movw	r30, r28
    2494:	e9 59       	subi	r30, 0x99	; 153
    2496:	ff 4f       	sbci	r31, 0xFF	; 255
    2498:	80 81       	ld	r24, Z
    249a:	91 81       	ldd	r25, Z+1	; 0x01
    249c:	8d 93       	st	X+, r24
    249e:	9c 93       	st	X, r25
    24a0:	fe 01       	movw	r30, r28
    24a2:	ed 59       	subi	r30, 0x9D	; 157
    24a4:	ff 4f       	sbci	r31, 0xFF	; 255
    24a6:	80 81       	ld	r24, Z
    24a8:	91 81       	ldd	r25, Z+1	; 0x01
    24aa:	01 97       	sbiw	r24, 0x01	; 1
    24ac:	f1 f7       	brne	.-4      	; 0x24aa <main+0xc1e>
    24ae:	fe 01       	movw	r30, r28
    24b0:	ed 59       	subi	r30, 0x9D	; 157
    24b2:	ff 4f       	sbci	r31, 0xFF	; 255
    24b4:	91 83       	std	Z+1, r25	; 0x01
    24b6:	80 83       	st	Z, r24
			_delay_ms(250);
			CLCD_voidSendSpecialCharacter(Local_u8BasketMode2,5,0,1);
    24b8:	ce 01       	movw	r24, r28
    24ba:	82 55       	subi	r24, 0x52	; 82
    24bc:	9f 4f       	sbci	r25, 0xFF	; 255
    24be:	65 e0       	ldi	r22, 0x05	; 5
    24c0:	40 e0       	ldi	r20, 0x00	; 0
    24c2:	21 e0       	ldi	r18, 0x01	; 1
    24c4:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    24c8:	fe 01       	movw	r30, r28
    24ca:	e1 5a       	subi	r30, 0xA1	; 161
    24cc:	ff 4f       	sbci	r31, 0xFF	; 255
    24ce:	80 e0       	ldi	r24, 0x00	; 0
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	aa e7       	ldi	r26, 0x7A	; 122
    24d4:	b3 e4       	ldi	r27, 0x43	; 67
    24d6:	80 83       	st	Z, r24
    24d8:	91 83       	std	Z+1, r25	; 0x01
    24da:	a2 83       	std	Z+2, r26	; 0x02
    24dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24de:	8e 01       	movw	r16, r28
    24e0:	05 5a       	subi	r16, 0xA5	; 165
    24e2:	1f 4f       	sbci	r17, 0xFF	; 255
    24e4:	fe 01       	movw	r30, r28
    24e6:	e1 5a       	subi	r30, 0xA1	; 161
    24e8:	ff 4f       	sbci	r31, 0xFF	; 255
    24ea:	60 81       	ld	r22, Z
    24ec:	71 81       	ldd	r23, Z+1	; 0x01
    24ee:	82 81       	ldd	r24, Z+2	; 0x02
    24f0:	93 81       	ldd	r25, Z+3	; 0x03
    24f2:	20 e0       	ldi	r18, 0x00	; 0
    24f4:	30 e0       	ldi	r19, 0x00	; 0
    24f6:	4a e7       	ldi	r20, 0x7A	; 122
    24f8:	55 e4       	ldi	r21, 0x45	; 69
    24fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24fe:	dc 01       	movw	r26, r24
    2500:	cb 01       	movw	r24, r22
    2502:	f8 01       	movw	r30, r16
    2504:	80 83       	st	Z, r24
    2506:	91 83       	std	Z+1, r25	; 0x01
    2508:	a2 83       	std	Z+2, r26	; 0x02
    250a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    250c:	fe 01       	movw	r30, r28
    250e:	e5 5a       	subi	r30, 0xA5	; 165
    2510:	ff 4f       	sbci	r31, 0xFF	; 255
    2512:	60 81       	ld	r22, Z
    2514:	71 81       	ldd	r23, Z+1	; 0x01
    2516:	82 81       	ldd	r24, Z+2	; 0x02
    2518:	93 81       	ldd	r25, Z+3	; 0x03
    251a:	20 e0       	ldi	r18, 0x00	; 0
    251c:	30 e0       	ldi	r19, 0x00	; 0
    251e:	40 e8       	ldi	r20, 0x80	; 128
    2520:	5f e3       	ldi	r21, 0x3F	; 63
    2522:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2526:	88 23       	and	r24, r24
    2528:	44 f4       	brge	.+16     	; 0x253a <main+0xcae>
		__ticks = 1;
    252a:	fe 01       	movw	r30, r28
    252c:	e7 5a       	subi	r30, 0xA7	; 167
    252e:	ff 4f       	sbci	r31, 0xFF	; 255
    2530:	81 e0       	ldi	r24, 0x01	; 1
    2532:	90 e0       	ldi	r25, 0x00	; 0
    2534:	91 83       	std	Z+1, r25	; 0x01
    2536:	80 83       	st	Z, r24
    2538:	64 c0       	rjmp	.+200    	; 0x2602 <main+0xd76>
	else if (__tmp > 65535)
    253a:	fe 01       	movw	r30, r28
    253c:	e5 5a       	subi	r30, 0xA5	; 165
    253e:	ff 4f       	sbci	r31, 0xFF	; 255
    2540:	60 81       	ld	r22, Z
    2542:	71 81       	ldd	r23, Z+1	; 0x01
    2544:	82 81       	ldd	r24, Z+2	; 0x02
    2546:	93 81       	ldd	r25, Z+3	; 0x03
    2548:	20 e0       	ldi	r18, 0x00	; 0
    254a:	3f ef       	ldi	r19, 0xFF	; 255
    254c:	4f e7       	ldi	r20, 0x7F	; 127
    254e:	57 e4       	ldi	r21, 0x47	; 71
    2550:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2554:	18 16       	cp	r1, r24
    2556:	0c f0       	brlt	.+2      	; 0x255a <main+0xcce>
    2558:	43 c0       	rjmp	.+134    	; 0x25e0 <main+0xd54>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    255a:	fe 01       	movw	r30, r28
    255c:	e1 5a       	subi	r30, 0xA1	; 161
    255e:	ff 4f       	sbci	r31, 0xFF	; 255
    2560:	60 81       	ld	r22, Z
    2562:	71 81       	ldd	r23, Z+1	; 0x01
    2564:	82 81       	ldd	r24, Z+2	; 0x02
    2566:	93 81       	ldd	r25, Z+3	; 0x03
    2568:	20 e0       	ldi	r18, 0x00	; 0
    256a:	30 e0       	ldi	r19, 0x00	; 0
    256c:	40 e2       	ldi	r20, 0x20	; 32
    256e:	51 e4       	ldi	r21, 0x41	; 65
    2570:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2574:	dc 01       	movw	r26, r24
    2576:	cb 01       	movw	r24, r22
    2578:	8e 01       	movw	r16, r28
    257a:	07 5a       	subi	r16, 0xA7	; 167
    257c:	1f 4f       	sbci	r17, 0xFF	; 255
    257e:	bc 01       	movw	r22, r24
    2580:	cd 01       	movw	r24, r26
    2582:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2586:	dc 01       	movw	r26, r24
    2588:	cb 01       	movw	r24, r22
    258a:	f8 01       	movw	r30, r16
    258c:	91 83       	std	Z+1, r25	; 0x01
    258e:	80 83       	st	Z, r24
    2590:	1f c0       	rjmp	.+62     	; 0x25d0 <main+0xd44>
    2592:	fe 01       	movw	r30, r28
    2594:	e9 5a       	subi	r30, 0xA9	; 169
    2596:	ff 4f       	sbci	r31, 0xFF	; 255
    2598:	80 e9       	ldi	r24, 0x90	; 144
    259a:	91 e0       	ldi	r25, 0x01	; 1
    259c:	91 83       	std	Z+1, r25	; 0x01
    259e:	80 83       	st	Z, r24
    25a0:	fe 01       	movw	r30, r28
    25a2:	e9 5a       	subi	r30, 0xA9	; 169
    25a4:	ff 4f       	sbci	r31, 0xFF	; 255
    25a6:	80 81       	ld	r24, Z
    25a8:	91 81       	ldd	r25, Z+1	; 0x01
    25aa:	01 97       	sbiw	r24, 0x01	; 1
    25ac:	f1 f7       	brne	.-4      	; 0x25aa <main+0xd1e>
    25ae:	fe 01       	movw	r30, r28
    25b0:	e9 5a       	subi	r30, 0xA9	; 169
    25b2:	ff 4f       	sbci	r31, 0xFF	; 255
    25b4:	91 83       	std	Z+1, r25	; 0x01
    25b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25b8:	de 01       	movw	r26, r28
    25ba:	a7 5a       	subi	r26, 0xA7	; 167
    25bc:	bf 4f       	sbci	r27, 0xFF	; 255
    25be:	fe 01       	movw	r30, r28
    25c0:	e7 5a       	subi	r30, 0xA7	; 167
    25c2:	ff 4f       	sbci	r31, 0xFF	; 255
    25c4:	80 81       	ld	r24, Z
    25c6:	91 81       	ldd	r25, Z+1	; 0x01
    25c8:	01 97       	sbiw	r24, 0x01	; 1
    25ca:	11 96       	adiw	r26, 0x01	; 1
    25cc:	9c 93       	st	X, r25
    25ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25d0:	fe 01       	movw	r30, r28
    25d2:	e7 5a       	subi	r30, 0xA7	; 167
    25d4:	ff 4f       	sbci	r31, 0xFF	; 255
    25d6:	80 81       	ld	r24, Z
    25d8:	91 81       	ldd	r25, Z+1	; 0x01
    25da:	00 97       	sbiw	r24, 0x00	; 0
    25dc:	d1 f6       	brne	.-76     	; 0x2592 <main+0xd06>
    25de:	27 c0       	rjmp	.+78     	; 0x262e <main+0xda2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25e0:	8e 01       	movw	r16, r28
    25e2:	07 5a       	subi	r16, 0xA7	; 167
    25e4:	1f 4f       	sbci	r17, 0xFF	; 255
    25e6:	fe 01       	movw	r30, r28
    25e8:	e5 5a       	subi	r30, 0xA5	; 165
    25ea:	ff 4f       	sbci	r31, 0xFF	; 255
    25ec:	60 81       	ld	r22, Z
    25ee:	71 81       	ldd	r23, Z+1	; 0x01
    25f0:	82 81       	ldd	r24, Z+2	; 0x02
    25f2:	93 81       	ldd	r25, Z+3	; 0x03
    25f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25f8:	dc 01       	movw	r26, r24
    25fa:	cb 01       	movw	r24, r22
    25fc:	f8 01       	movw	r30, r16
    25fe:	91 83       	std	Z+1, r25	; 0x01
    2600:	80 83       	st	Z, r24
    2602:	de 01       	movw	r26, r28
    2604:	ab 5a       	subi	r26, 0xAB	; 171
    2606:	bf 4f       	sbci	r27, 0xFF	; 255
    2608:	fe 01       	movw	r30, r28
    260a:	e7 5a       	subi	r30, 0xA7	; 167
    260c:	ff 4f       	sbci	r31, 0xFF	; 255
    260e:	80 81       	ld	r24, Z
    2610:	91 81       	ldd	r25, Z+1	; 0x01
    2612:	8d 93       	st	X+, r24
    2614:	9c 93       	st	X, r25
    2616:	fe 01       	movw	r30, r28
    2618:	eb 5a       	subi	r30, 0xAB	; 171
    261a:	ff 4f       	sbci	r31, 0xFF	; 255
    261c:	80 81       	ld	r24, Z
    261e:	91 81       	ldd	r25, Z+1	; 0x01
    2620:	01 97       	sbiw	r24, 0x01	; 1
    2622:	f1 f7       	brne	.-4      	; 0x2620 <main+0xd94>
    2624:	fe 01       	movw	r30, r28
    2626:	eb 5a       	subi	r30, 0xAB	; 171
    2628:	ff 4f       	sbci	r31, 0xFF	; 255
    262a:	91 83       	std	Z+1, r25	; 0x01
    262c:	80 83       	st	Z, r24
		CLCD_voidSendSpecialCharacter(Local_u8BasketMode1,1,0,1);
		CLCD_viodGoToXY(2,0);
		CLCD_u8SendString("I can play");
		CLCD_viodGoToXY(2,1);
		CLCD_u8SendString("Basketball");
		for (Local_u8LoopCounter=0;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    262e:	de 01       	movw	r26, r28
    2630:	a3 57       	subi	r26, 0x73	; 115
    2632:	bf 4f       	sbci	r27, 0xFF	; 255
    2634:	fe 01       	movw	r30, r28
    2636:	e3 57       	subi	r30, 0x73	; 115
    2638:	ff 4f       	sbci	r31, 0xFF	; 255
    263a:	80 81       	ld	r24, Z
    263c:	8f 5f       	subi	r24, 0xFF	; 255
    263e:	8c 93       	st	X, r24
    2640:	fe 01       	movw	r30, r28
    2642:	e3 57       	subi	r30, 0x73	; 115
    2644:	ff 4f       	sbci	r31, 0xFF	; 255
    2646:	80 81       	ld	r24, Z
    2648:	80 31       	cpi	r24, 0x10	; 16
    264a:	08 f4       	brcc	.+2      	; 0x264e <main+0xdc2>
    264c:	7a ce       	rjmp	.-780    	; 0x2342 <main+0xab6>
			CLCD_voidSendSpecialCharacter(Local_u8BasketMode1,1,0,1);
			_delay_ms(250);
			CLCD_voidSendSpecialCharacter(Local_u8BasketMode2,5,0,1);
			_delay_ms(250);
		}
		CLCD_voidSendCmd(1);
    264e:	81 e0       	ldi	r24, 0x01	; 1
    2650:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
		CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,0,0,0);
    2654:	ce 01       	movw	r24, r28
    2656:	82 57       	subi	r24, 0x72	; 114
    2658:	9f 4f       	sbci	r25, 0xFF	; 255
    265a:	60 e0       	ldi	r22, 0x00	; 0
    265c:	40 e0       	ldi	r20, 0x00	; 0
    265e:	20 e0       	ldi	r18, 0x00	; 0
    2660:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_voidSendSpecialCharacter(Local_u8DanceMode1,1,0,1);
    2664:	ce 01       	movw	r24, r28
    2666:	8a 54       	subi	r24, 0x4A	; 74
    2668:	9f 4f       	sbci	r25, 0xFF	; 255
    266a:	61 e0       	ldi	r22, 0x01	; 1
    266c:	40 e0       	ldi	r20, 0x00	; 0
    266e:	21 e0       	ldi	r18, 0x01	; 1
    2670:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_viodGoToXY(5,0);
    2674:	85 e0       	ldi	r24, 0x05	; 5
    2676:	60 e0       	ldi	r22, 0x00	; 0
    2678:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("I can");
    267c:	8b e8       	ldi	r24, 0x8B	; 139
    267e:	90 e0       	ldi	r25, 0x00	; 0
    2680:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		CLCD_viodGoToXY(5,1);
    2684:	85 e0       	ldi	r24, 0x05	; 5
    2686:	61 e0       	ldi	r22, 0x01	; 1
    2688:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("Dance");
    268c:	81 e9       	ldi	r24, 0x91	; 145
    268e:	90 e0       	ldi	r25, 0x00	; 0
    2690:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		for (Local_u8LoopCounter=0;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    2694:	fe 01       	movw	r30, r28
    2696:	e3 57       	subi	r30, 0x73	; 115
    2698:	ff 4f       	sbci	r31, 0xFF	; 255
    269a:	10 82       	st	Z, r1
    269c:	51 c1       	rjmp	.+674    	; 0x2940 <main+0x10b4>
		{
			CLCD_voidSendSpecialCharacter(Local_u8DanceMode1,1,0,1);
    269e:	ce 01       	movw	r24, r28
    26a0:	8a 54       	subi	r24, 0x4A	; 74
    26a2:	9f 4f       	sbci	r25, 0xFF	; 255
    26a4:	61 e0       	ldi	r22, 0x01	; 1
    26a6:	40 e0       	ldi	r20, 0x00	; 0
    26a8:	21 e0       	ldi	r18, 0x01	; 1
    26aa:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    26ae:	fe 01       	movw	r30, r28
    26b0:	ef 5a       	subi	r30, 0xAF	; 175
    26b2:	ff 4f       	sbci	r31, 0xFF	; 255
    26b4:	80 e0       	ldi	r24, 0x00	; 0
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	aa e7       	ldi	r26, 0x7A	; 122
    26ba:	b3 e4       	ldi	r27, 0x43	; 67
    26bc:	80 83       	st	Z, r24
    26be:	91 83       	std	Z+1, r25	; 0x01
    26c0:	a2 83       	std	Z+2, r26	; 0x02
    26c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26c4:	8e 01       	movw	r16, r28
    26c6:	03 5b       	subi	r16, 0xB3	; 179
    26c8:	1f 4f       	sbci	r17, 0xFF	; 255
    26ca:	fe 01       	movw	r30, r28
    26cc:	ef 5a       	subi	r30, 0xAF	; 175
    26ce:	ff 4f       	sbci	r31, 0xFF	; 255
    26d0:	60 81       	ld	r22, Z
    26d2:	71 81       	ldd	r23, Z+1	; 0x01
    26d4:	82 81       	ldd	r24, Z+2	; 0x02
    26d6:	93 81       	ldd	r25, Z+3	; 0x03
    26d8:	20 e0       	ldi	r18, 0x00	; 0
    26da:	30 e0       	ldi	r19, 0x00	; 0
    26dc:	4a e7       	ldi	r20, 0x7A	; 122
    26de:	55 e4       	ldi	r21, 0x45	; 69
    26e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26e4:	dc 01       	movw	r26, r24
    26e6:	cb 01       	movw	r24, r22
    26e8:	f8 01       	movw	r30, r16
    26ea:	80 83       	st	Z, r24
    26ec:	91 83       	std	Z+1, r25	; 0x01
    26ee:	a2 83       	std	Z+2, r26	; 0x02
    26f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26f2:	fe 01       	movw	r30, r28
    26f4:	e3 5b       	subi	r30, 0xB3	; 179
    26f6:	ff 4f       	sbci	r31, 0xFF	; 255
    26f8:	60 81       	ld	r22, Z
    26fa:	71 81       	ldd	r23, Z+1	; 0x01
    26fc:	82 81       	ldd	r24, Z+2	; 0x02
    26fe:	93 81       	ldd	r25, Z+3	; 0x03
    2700:	20 e0       	ldi	r18, 0x00	; 0
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	40 e8       	ldi	r20, 0x80	; 128
    2706:	5f e3       	ldi	r21, 0x3F	; 63
    2708:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    270c:	88 23       	and	r24, r24
    270e:	44 f4       	brge	.+16     	; 0x2720 <main+0xe94>
		__ticks = 1;
    2710:	fe 01       	movw	r30, r28
    2712:	e5 5b       	subi	r30, 0xB5	; 181
    2714:	ff 4f       	sbci	r31, 0xFF	; 255
    2716:	81 e0       	ldi	r24, 0x01	; 1
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	91 83       	std	Z+1, r25	; 0x01
    271c:	80 83       	st	Z, r24
    271e:	64 c0       	rjmp	.+200    	; 0x27e8 <main+0xf5c>
	else if (__tmp > 65535)
    2720:	fe 01       	movw	r30, r28
    2722:	e3 5b       	subi	r30, 0xB3	; 179
    2724:	ff 4f       	sbci	r31, 0xFF	; 255
    2726:	60 81       	ld	r22, Z
    2728:	71 81       	ldd	r23, Z+1	; 0x01
    272a:	82 81       	ldd	r24, Z+2	; 0x02
    272c:	93 81       	ldd	r25, Z+3	; 0x03
    272e:	20 e0       	ldi	r18, 0x00	; 0
    2730:	3f ef       	ldi	r19, 0xFF	; 255
    2732:	4f e7       	ldi	r20, 0x7F	; 127
    2734:	57 e4       	ldi	r21, 0x47	; 71
    2736:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    273a:	18 16       	cp	r1, r24
    273c:	0c f0       	brlt	.+2      	; 0x2740 <main+0xeb4>
    273e:	43 c0       	rjmp	.+134    	; 0x27c6 <main+0xf3a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2740:	fe 01       	movw	r30, r28
    2742:	ef 5a       	subi	r30, 0xAF	; 175
    2744:	ff 4f       	sbci	r31, 0xFF	; 255
    2746:	60 81       	ld	r22, Z
    2748:	71 81       	ldd	r23, Z+1	; 0x01
    274a:	82 81       	ldd	r24, Z+2	; 0x02
    274c:	93 81       	ldd	r25, Z+3	; 0x03
    274e:	20 e0       	ldi	r18, 0x00	; 0
    2750:	30 e0       	ldi	r19, 0x00	; 0
    2752:	40 e2       	ldi	r20, 0x20	; 32
    2754:	51 e4       	ldi	r21, 0x41	; 65
    2756:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    275a:	dc 01       	movw	r26, r24
    275c:	cb 01       	movw	r24, r22
    275e:	8e 01       	movw	r16, r28
    2760:	05 5b       	subi	r16, 0xB5	; 181
    2762:	1f 4f       	sbci	r17, 0xFF	; 255
    2764:	bc 01       	movw	r22, r24
    2766:	cd 01       	movw	r24, r26
    2768:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    276c:	dc 01       	movw	r26, r24
    276e:	cb 01       	movw	r24, r22
    2770:	f8 01       	movw	r30, r16
    2772:	91 83       	std	Z+1, r25	; 0x01
    2774:	80 83       	st	Z, r24
    2776:	1f c0       	rjmp	.+62     	; 0x27b6 <main+0xf2a>
    2778:	fe 01       	movw	r30, r28
    277a:	e7 5b       	subi	r30, 0xB7	; 183
    277c:	ff 4f       	sbci	r31, 0xFF	; 255
    277e:	80 e9       	ldi	r24, 0x90	; 144
    2780:	91 e0       	ldi	r25, 0x01	; 1
    2782:	91 83       	std	Z+1, r25	; 0x01
    2784:	80 83       	st	Z, r24
    2786:	fe 01       	movw	r30, r28
    2788:	e7 5b       	subi	r30, 0xB7	; 183
    278a:	ff 4f       	sbci	r31, 0xFF	; 255
    278c:	80 81       	ld	r24, Z
    278e:	91 81       	ldd	r25, Z+1	; 0x01
    2790:	01 97       	sbiw	r24, 0x01	; 1
    2792:	f1 f7       	brne	.-4      	; 0x2790 <main+0xf04>
    2794:	fe 01       	movw	r30, r28
    2796:	e7 5b       	subi	r30, 0xB7	; 183
    2798:	ff 4f       	sbci	r31, 0xFF	; 255
    279a:	91 83       	std	Z+1, r25	; 0x01
    279c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    279e:	de 01       	movw	r26, r28
    27a0:	a5 5b       	subi	r26, 0xB5	; 181
    27a2:	bf 4f       	sbci	r27, 0xFF	; 255
    27a4:	fe 01       	movw	r30, r28
    27a6:	e5 5b       	subi	r30, 0xB5	; 181
    27a8:	ff 4f       	sbci	r31, 0xFF	; 255
    27aa:	80 81       	ld	r24, Z
    27ac:	91 81       	ldd	r25, Z+1	; 0x01
    27ae:	01 97       	sbiw	r24, 0x01	; 1
    27b0:	11 96       	adiw	r26, 0x01	; 1
    27b2:	9c 93       	st	X, r25
    27b4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27b6:	fe 01       	movw	r30, r28
    27b8:	e5 5b       	subi	r30, 0xB5	; 181
    27ba:	ff 4f       	sbci	r31, 0xFF	; 255
    27bc:	80 81       	ld	r24, Z
    27be:	91 81       	ldd	r25, Z+1	; 0x01
    27c0:	00 97       	sbiw	r24, 0x00	; 0
    27c2:	d1 f6       	brne	.-76     	; 0x2778 <main+0xeec>
    27c4:	27 c0       	rjmp	.+78     	; 0x2814 <main+0xf88>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27c6:	8e 01       	movw	r16, r28
    27c8:	05 5b       	subi	r16, 0xB5	; 181
    27ca:	1f 4f       	sbci	r17, 0xFF	; 255
    27cc:	fe 01       	movw	r30, r28
    27ce:	e3 5b       	subi	r30, 0xB3	; 179
    27d0:	ff 4f       	sbci	r31, 0xFF	; 255
    27d2:	60 81       	ld	r22, Z
    27d4:	71 81       	ldd	r23, Z+1	; 0x01
    27d6:	82 81       	ldd	r24, Z+2	; 0x02
    27d8:	93 81       	ldd	r25, Z+3	; 0x03
    27da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27de:	dc 01       	movw	r26, r24
    27e0:	cb 01       	movw	r24, r22
    27e2:	f8 01       	movw	r30, r16
    27e4:	91 83       	std	Z+1, r25	; 0x01
    27e6:	80 83       	st	Z, r24
    27e8:	de 01       	movw	r26, r28
    27ea:	a9 5b       	subi	r26, 0xB9	; 185
    27ec:	bf 4f       	sbci	r27, 0xFF	; 255
    27ee:	fe 01       	movw	r30, r28
    27f0:	e5 5b       	subi	r30, 0xB5	; 181
    27f2:	ff 4f       	sbci	r31, 0xFF	; 255
    27f4:	80 81       	ld	r24, Z
    27f6:	91 81       	ldd	r25, Z+1	; 0x01
    27f8:	8d 93       	st	X+, r24
    27fa:	9c 93       	st	X, r25
    27fc:	fe 01       	movw	r30, r28
    27fe:	e9 5b       	subi	r30, 0xB9	; 185
    2800:	ff 4f       	sbci	r31, 0xFF	; 255
    2802:	80 81       	ld	r24, Z
    2804:	91 81       	ldd	r25, Z+1	; 0x01
    2806:	01 97       	sbiw	r24, 0x01	; 1
    2808:	f1 f7       	brne	.-4      	; 0x2806 <main+0xf7a>
    280a:	fe 01       	movw	r30, r28
    280c:	e9 5b       	subi	r30, 0xB9	; 185
    280e:	ff 4f       	sbci	r31, 0xFF	; 255
    2810:	91 83       	std	Z+1, r25	; 0x01
    2812:	80 83       	st	Z, r24
			_delay_ms(250);
			CLCD_voidSendSpecialCharacter(Local_u8DanceMode2,3,0,1);
    2814:	ce 01       	movw	r24, r28
    2816:	82 54       	subi	r24, 0x42	; 66
    2818:	9f 4f       	sbci	r25, 0xFF	; 255
    281a:	63 e0       	ldi	r22, 0x03	; 3
    281c:	40 e0       	ldi	r20, 0x00	; 0
    281e:	21 e0       	ldi	r18, 0x01	; 1
    2820:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    2824:	fe 01       	movw	r30, r28
    2826:	ed 5b       	subi	r30, 0xBD	; 189
    2828:	ff 4f       	sbci	r31, 0xFF	; 255
    282a:	80 e0       	ldi	r24, 0x00	; 0
    282c:	90 e0       	ldi	r25, 0x00	; 0
    282e:	aa e7       	ldi	r26, 0x7A	; 122
    2830:	b3 e4       	ldi	r27, 0x43	; 67
    2832:	80 83       	st	Z, r24
    2834:	91 83       	std	Z+1, r25	; 0x01
    2836:	a2 83       	std	Z+2, r26	; 0x02
    2838:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    283a:	8e 01       	movw	r16, r28
    283c:	01 5c       	subi	r16, 0xC1	; 193
    283e:	1f 4f       	sbci	r17, 0xFF	; 255
    2840:	fe 01       	movw	r30, r28
    2842:	ed 5b       	subi	r30, 0xBD	; 189
    2844:	ff 4f       	sbci	r31, 0xFF	; 255
    2846:	60 81       	ld	r22, Z
    2848:	71 81       	ldd	r23, Z+1	; 0x01
    284a:	82 81       	ldd	r24, Z+2	; 0x02
    284c:	93 81       	ldd	r25, Z+3	; 0x03
    284e:	20 e0       	ldi	r18, 0x00	; 0
    2850:	30 e0       	ldi	r19, 0x00	; 0
    2852:	4a e7       	ldi	r20, 0x7A	; 122
    2854:	55 e4       	ldi	r21, 0x45	; 69
    2856:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    285a:	dc 01       	movw	r26, r24
    285c:	cb 01       	movw	r24, r22
    285e:	f8 01       	movw	r30, r16
    2860:	80 83       	st	Z, r24
    2862:	91 83       	std	Z+1, r25	; 0x01
    2864:	a2 83       	std	Z+2, r26	; 0x02
    2866:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2868:	fe 01       	movw	r30, r28
    286a:	ff 96       	adiw	r30, 0x3f	; 63
    286c:	60 81       	ld	r22, Z
    286e:	71 81       	ldd	r23, Z+1	; 0x01
    2870:	82 81       	ldd	r24, Z+2	; 0x02
    2872:	93 81       	ldd	r25, Z+3	; 0x03
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	40 e8       	ldi	r20, 0x80	; 128
    287a:	5f e3       	ldi	r21, 0x3F	; 63
    287c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2880:	88 23       	and	r24, r24
    2882:	2c f4       	brge	.+10     	; 0x288e <main+0x1002>
		__ticks = 1;
    2884:	81 e0       	ldi	r24, 0x01	; 1
    2886:	90 e0       	ldi	r25, 0x00	; 0
    2888:	9e af       	std	Y+62, r25	; 0x3e
    288a:	8d af       	std	Y+61, r24	; 0x3d
    288c:	46 c0       	rjmp	.+140    	; 0x291a <main+0x108e>
	else if (__tmp > 65535)
    288e:	fe 01       	movw	r30, r28
    2890:	ff 96       	adiw	r30, 0x3f	; 63
    2892:	60 81       	ld	r22, Z
    2894:	71 81       	ldd	r23, Z+1	; 0x01
    2896:	82 81       	ldd	r24, Z+2	; 0x02
    2898:	93 81       	ldd	r25, Z+3	; 0x03
    289a:	20 e0       	ldi	r18, 0x00	; 0
    289c:	3f ef       	ldi	r19, 0xFF	; 255
    289e:	4f e7       	ldi	r20, 0x7F	; 127
    28a0:	57 e4       	ldi	r21, 0x47	; 71
    28a2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28a6:	18 16       	cp	r1, r24
    28a8:	64 f5       	brge	.+88     	; 0x2902 <main+0x1076>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28aa:	fe 01       	movw	r30, r28
    28ac:	ed 5b       	subi	r30, 0xBD	; 189
    28ae:	ff 4f       	sbci	r31, 0xFF	; 255
    28b0:	60 81       	ld	r22, Z
    28b2:	71 81       	ldd	r23, Z+1	; 0x01
    28b4:	82 81       	ldd	r24, Z+2	; 0x02
    28b6:	93 81       	ldd	r25, Z+3	; 0x03
    28b8:	20 e0       	ldi	r18, 0x00	; 0
    28ba:	30 e0       	ldi	r19, 0x00	; 0
    28bc:	40 e2       	ldi	r20, 0x20	; 32
    28be:	51 e4       	ldi	r21, 0x41	; 65
    28c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28c4:	dc 01       	movw	r26, r24
    28c6:	cb 01       	movw	r24, r22
    28c8:	bc 01       	movw	r22, r24
    28ca:	cd 01       	movw	r24, r26
    28cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28d0:	dc 01       	movw	r26, r24
    28d2:	cb 01       	movw	r24, r22
    28d4:	9e af       	std	Y+62, r25	; 0x3e
    28d6:	8d af       	std	Y+61, r24	; 0x3d
    28d8:	0f c0       	rjmp	.+30     	; 0x28f8 <main+0x106c>
    28da:	80 e9       	ldi	r24, 0x90	; 144
    28dc:	91 e0       	ldi	r25, 0x01	; 1
    28de:	9c af       	std	Y+60, r25	; 0x3c
    28e0:	8b af       	std	Y+59, r24	; 0x3b
    28e2:	8b ad       	ldd	r24, Y+59	; 0x3b
    28e4:	9c ad       	ldd	r25, Y+60	; 0x3c
    28e6:	01 97       	sbiw	r24, 0x01	; 1
    28e8:	f1 f7       	brne	.-4      	; 0x28e6 <main+0x105a>
    28ea:	9c af       	std	Y+60, r25	; 0x3c
    28ec:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28ee:	8d ad       	ldd	r24, Y+61	; 0x3d
    28f0:	9e ad       	ldd	r25, Y+62	; 0x3e
    28f2:	01 97       	sbiw	r24, 0x01	; 1
    28f4:	9e af       	std	Y+62, r25	; 0x3e
    28f6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28f8:	8d ad       	ldd	r24, Y+61	; 0x3d
    28fa:	9e ad       	ldd	r25, Y+62	; 0x3e
    28fc:	00 97       	sbiw	r24, 0x00	; 0
    28fe:	69 f7       	brne	.-38     	; 0x28da <main+0x104e>
    2900:	16 c0       	rjmp	.+44     	; 0x292e <main+0x10a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2902:	fe 01       	movw	r30, r28
    2904:	ff 96       	adiw	r30, 0x3f	; 63
    2906:	60 81       	ld	r22, Z
    2908:	71 81       	ldd	r23, Z+1	; 0x01
    290a:	82 81       	ldd	r24, Z+2	; 0x02
    290c:	93 81       	ldd	r25, Z+3	; 0x03
    290e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2912:	dc 01       	movw	r26, r24
    2914:	cb 01       	movw	r24, r22
    2916:	9e af       	std	Y+62, r25	; 0x3e
    2918:	8d af       	std	Y+61, r24	; 0x3d
    291a:	8d ad       	ldd	r24, Y+61	; 0x3d
    291c:	9e ad       	ldd	r25, Y+62	; 0x3e
    291e:	9a af       	std	Y+58, r25	; 0x3a
    2920:	89 af       	std	Y+57, r24	; 0x39
    2922:	89 ad       	ldd	r24, Y+57	; 0x39
    2924:	9a ad       	ldd	r25, Y+58	; 0x3a
    2926:	01 97       	sbiw	r24, 0x01	; 1
    2928:	f1 f7       	brne	.-4      	; 0x2926 <main+0x109a>
    292a:	9a af       	std	Y+58, r25	; 0x3a
    292c:	89 af       	std	Y+57, r24	; 0x39
		CLCD_voidSendSpecialCharacter(Local_u8DanceMode1,1,0,1);
		CLCD_viodGoToXY(5,0);
		CLCD_u8SendString("I can");
		CLCD_viodGoToXY(5,1);
		CLCD_u8SendString("Dance");
		for (Local_u8LoopCounter=0;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    292e:	de 01       	movw	r26, r28
    2930:	a3 57       	subi	r26, 0x73	; 115
    2932:	bf 4f       	sbci	r27, 0xFF	; 255
    2934:	fe 01       	movw	r30, r28
    2936:	e3 57       	subi	r30, 0x73	; 115
    2938:	ff 4f       	sbci	r31, 0xFF	; 255
    293a:	80 81       	ld	r24, Z
    293c:	8f 5f       	subi	r24, 0xFF	; 255
    293e:	8c 93       	st	X, r24
    2940:	fe 01       	movw	r30, r28
    2942:	e3 57       	subi	r30, 0x73	; 115
    2944:	ff 4f       	sbci	r31, 0xFF	; 255
    2946:	80 81       	ld	r24, Z
    2948:	80 31       	cpi	r24, 0x10	; 16
    294a:	08 f4       	brcc	.+2      	; 0x294e <main+0x10c2>
    294c:	a8 ce       	rjmp	.-688    	; 0x269e <main+0xe12>
			CLCD_voidSendSpecialCharacter(Local_u8DanceMode1,1,0,1);
			_delay_ms(250);
			CLCD_voidSendSpecialCharacter(Local_u8DanceMode2,3,0,1);
			_delay_ms(250);
		}
		CLCD_voidSendCmd(1);
    294e:	81 e0       	ldi	r24, 0x01	; 1
    2950:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
		CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,0,6,0);
    2954:	ce 01       	movw	r24, r28
    2956:	82 57       	subi	r24, 0x72	; 114
    2958:	9f 4f       	sbci	r25, 0xFF	; 255
    295a:	60 e0       	ldi	r22, 0x00	; 0
    295c:	46 e0       	ldi	r20, 0x06	; 6
    295e:	20 e0       	ldi	r18, 0x00	; 0
    2960:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_voidSendSpecialCharacter(Local_u8RunMode,1,6,1);
    2964:	ce 01       	movw	r24, r28
    2966:	8a 53       	subi	r24, 0x3A	; 58
    2968:	9f 4f       	sbci	r25, 0xFF	; 255
    296a:	61 e0       	ldi	r22, 0x01	; 1
    296c:	46 e0       	ldi	r20, 0x06	; 6
    296e:	21 e0       	ldi	r18, 0x01	; 1
    2970:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_viodGoToXY(0,0);
    2974:	80 e0       	ldi	r24, 0x00	; 0
    2976:	60 e0       	ldi	r22, 0x00	; 0
    2978:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("I can ");
    297c:	87 e9       	ldi	r24, 0x97	; 151
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		CLCD_viodGoToXY(0,1);
    2984:	80 e0       	ldi	r24, 0x00	; 0
    2986:	61 e0       	ldi	r22, 0x01	; 1
    2988:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("Run");
    298c:	8e e9       	ldi	r24, 0x9E	; 158
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		for (Local_u8LoopCounter=6;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    2994:	fe 01       	movw	r30, r28
    2996:	e3 57       	subi	r30, 0x73	; 115
    2998:	ff 4f       	sbci	r31, 0xFF	; 255
    299a:	86 e0       	ldi	r24, 0x06	; 6
    299c:	80 83       	st	Z, r24
    299e:	a5 c0       	rjmp	.+330    	; 0x2aea <main+0x125e>
		{
			CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,0,Local_u8LoopCounter,0);
    29a0:	ce 01       	movw	r24, r28
    29a2:	82 57       	subi	r24, 0x72	; 114
    29a4:	9f 4f       	sbci	r25, 0xFF	; 255
    29a6:	fe 01       	movw	r30, r28
    29a8:	e3 57       	subi	r30, 0x73	; 115
    29aa:	ff 4f       	sbci	r31, 0xFF	; 255
    29ac:	60 e0       	ldi	r22, 0x00	; 0
    29ae:	40 81       	ld	r20, Z
    29b0:	20 e0       	ldi	r18, 0x00	; 0
    29b2:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
			CLCD_voidSendSpecialCharacter(Local_u8RunMode,1,Local_u8LoopCounter,1);
    29b6:	ce 01       	movw	r24, r28
    29b8:	8a 53       	subi	r24, 0x3A	; 58
    29ba:	9f 4f       	sbci	r25, 0xFF	; 255
    29bc:	fe 01       	movw	r30, r28
    29be:	e3 57       	subi	r30, 0x73	; 115
    29c0:	ff 4f       	sbci	r31, 0xFF	; 255
    29c2:	61 e0       	ldi	r22, 0x01	; 1
    29c4:	40 81       	ld	r20, Z
    29c6:	21 e0       	ldi	r18, 0x01	; 1
    29c8:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    29cc:	80 e0       	ldi	r24, 0x00	; 0
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	aa e7       	ldi	r26, 0x7A	; 122
    29d2:	b3 e4       	ldi	r27, 0x43	; 67
    29d4:	8d ab       	std	Y+53, r24	; 0x35
    29d6:	9e ab       	std	Y+54, r25	; 0x36
    29d8:	af ab       	std	Y+55, r26	; 0x37
    29da:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29dc:	6d a9       	ldd	r22, Y+53	; 0x35
    29de:	7e a9       	ldd	r23, Y+54	; 0x36
    29e0:	8f a9       	ldd	r24, Y+55	; 0x37
    29e2:	98 ad       	ldd	r25, Y+56	; 0x38
    29e4:	20 e0       	ldi	r18, 0x00	; 0
    29e6:	30 e0       	ldi	r19, 0x00	; 0
    29e8:	4a e7       	ldi	r20, 0x7A	; 122
    29ea:	55 e4       	ldi	r21, 0x45	; 69
    29ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29f0:	dc 01       	movw	r26, r24
    29f2:	cb 01       	movw	r24, r22
    29f4:	89 ab       	std	Y+49, r24	; 0x31
    29f6:	9a ab       	std	Y+50, r25	; 0x32
    29f8:	ab ab       	std	Y+51, r26	; 0x33
    29fa:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    29fc:	69 a9       	ldd	r22, Y+49	; 0x31
    29fe:	7a a9       	ldd	r23, Y+50	; 0x32
    2a00:	8b a9       	ldd	r24, Y+51	; 0x33
    2a02:	9c a9       	ldd	r25, Y+52	; 0x34
    2a04:	20 e0       	ldi	r18, 0x00	; 0
    2a06:	30 e0       	ldi	r19, 0x00	; 0
    2a08:	40 e8       	ldi	r20, 0x80	; 128
    2a0a:	5f e3       	ldi	r21, 0x3F	; 63
    2a0c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a10:	88 23       	and	r24, r24
    2a12:	2c f4       	brge	.+10     	; 0x2a1e <main+0x1192>
		__ticks = 1;
    2a14:	81 e0       	ldi	r24, 0x01	; 1
    2a16:	90 e0       	ldi	r25, 0x00	; 0
    2a18:	98 ab       	std	Y+48, r25	; 0x30
    2a1a:	8f a7       	std	Y+47, r24	; 0x2f
    2a1c:	3f c0       	rjmp	.+126    	; 0x2a9c <main+0x1210>
	else if (__tmp > 65535)
    2a1e:	69 a9       	ldd	r22, Y+49	; 0x31
    2a20:	7a a9       	ldd	r23, Y+50	; 0x32
    2a22:	8b a9       	ldd	r24, Y+51	; 0x33
    2a24:	9c a9       	ldd	r25, Y+52	; 0x34
    2a26:	20 e0       	ldi	r18, 0x00	; 0
    2a28:	3f ef       	ldi	r19, 0xFF	; 255
    2a2a:	4f e7       	ldi	r20, 0x7F	; 127
    2a2c:	57 e4       	ldi	r21, 0x47	; 71
    2a2e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a32:	18 16       	cp	r1, r24
    2a34:	4c f5       	brge	.+82     	; 0x2a88 <main+0x11fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a36:	6d a9       	ldd	r22, Y+53	; 0x35
    2a38:	7e a9       	ldd	r23, Y+54	; 0x36
    2a3a:	8f a9       	ldd	r24, Y+55	; 0x37
    2a3c:	98 ad       	ldd	r25, Y+56	; 0x38
    2a3e:	20 e0       	ldi	r18, 0x00	; 0
    2a40:	30 e0       	ldi	r19, 0x00	; 0
    2a42:	40 e2       	ldi	r20, 0x20	; 32
    2a44:	51 e4       	ldi	r21, 0x41	; 65
    2a46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a4a:	dc 01       	movw	r26, r24
    2a4c:	cb 01       	movw	r24, r22
    2a4e:	bc 01       	movw	r22, r24
    2a50:	cd 01       	movw	r24, r26
    2a52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a56:	dc 01       	movw	r26, r24
    2a58:	cb 01       	movw	r24, r22
    2a5a:	98 ab       	std	Y+48, r25	; 0x30
    2a5c:	8f a7       	std	Y+47, r24	; 0x2f
    2a5e:	0f c0       	rjmp	.+30     	; 0x2a7e <main+0x11f2>
    2a60:	80 e9       	ldi	r24, 0x90	; 144
    2a62:	91 e0       	ldi	r25, 0x01	; 1
    2a64:	9e a7       	std	Y+46, r25	; 0x2e
    2a66:	8d a7       	std	Y+45, r24	; 0x2d
    2a68:	8d a5       	ldd	r24, Y+45	; 0x2d
    2a6a:	9e a5       	ldd	r25, Y+46	; 0x2e
    2a6c:	01 97       	sbiw	r24, 0x01	; 1
    2a6e:	f1 f7       	brne	.-4      	; 0x2a6c <main+0x11e0>
    2a70:	9e a7       	std	Y+46, r25	; 0x2e
    2a72:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a74:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a76:	98 a9       	ldd	r25, Y+48	; 0x30
    2a78:	01 97       	sbiw	r24, 0x01	; 1
    2a7a:	98 ab       	std	Y+48, r25	; 0x30
    2a7c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a7e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a80:	98 a9       	ldd	r25, Y+48	; 0x30
    2a82:	00 97       	sbiw	r24, 0x00	; 0
    2a84:	69 f7       	brne	.-38     	; 0x2a60 <main+0x11d4>
    2a86:	14 c0       	rjmp	.+40     	; 0x2ab0 <main+0x1224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a88:	69 a9       	ldd	r22, Y+49	; 0x31
    2a8a:	7a a9       	ldd	r23, Y+50	; 0x32
    2a8c:	8b a9       	ldd	r24, Y+51	; 0x33
    2a8e:	9c a9       	ldd	r25, Y+52	; 0x34
    2a90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a94:	dc 01       	movw	r26, r24
    2a96:	cb 01       	movw	r24, r22
    2a98:	98 ab       	std	Y+48, r25	; 0x30
    2a9a:	8f a7       	std	Y+47, r24	; 0x2f
    2a9c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2a9e:	98 a9       	ldd	r25, Y+48	; 0x30
    2aa0:	9c a7       	std	Y+44, r25	; 0x2c
    2aa2:	8b a7       	std	Y+43, r24	; 0x2b
    2aa4:	8b a5       	ldd	r24, Y+43	; 0x2b
    2aa6:	9c a5       	ldd	r25, Y+44	; 0x2c
    2aa8:	01 97       	sbiw	r24, 0x01	; 1
    2aaa:	f1 f7       	brne	.-4      	; 0x2aa8 <main+0x121c>
    2aac:	9c a7       	std	Y+44, r25	; 0x2c
    2aae:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(250);
			CLCD_viodGoToXY(Local_u8LoopCounter,0);
    2ab0:	fe 01       	movw	r30, r28
    2ab2:	e3 57       	subi	r30, 0x73	; 115
    2ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab6:	80 81       	ld	r24, Z
    2ab8:	60 e0       	ldi	r22, 0x00	; 0
    2aba:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
			CLCD_voidSendData(' ');
    2abe:	80 e2       	ldi	r24, 0x20	; 32
    2ac0:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
			CLCD_viodGoToXY(Local_u8LoopCounter,1);
    2ac4:	fe 01       	movw	r30, r28
    2ac6:	e3 57       	subi	r30, 0x73	; 115
    2ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aca:	80 81       	ld	r24, Z
    2acc:	61 e0       	ldi	r22, 0x01	; 1
    2ace:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
			CLCD_voidSendData(' ');
    2ad2:	80 e2       	ldi	r24, 0x20	; 32
    2ad4:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
		CLCD_voidSendSpecialCharacter(Local_u8RunMode,1,6,1);
		CLCD_viodGoToXY(0,0);
		CLCD_u8SendString("I can ");
		CLCD_viodGoToXY(0,1);
		CLCD_u8SendString("Run");
		for (Local_u8LoopCounter=6;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    2ad8:	de 01       	movw	r26, r28
    2ada:	a3 57       	subi	r26, 0x73	; 115
    2adc:	bf 4f       	sbci	r27, 0xFF	; 255
    2ade:	fe 01       	movw	r30, r28
    2ae0:	e3 57       	subi	r30, 0x73	; 115
    2ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae4:	80 81       	ld	r24, Z
    2ae6:	8f 5f       	subi	r24, 0xFF	; 255
    2ae8:	8c 93       	st	X, r24
    2aea:	fe 01       	movw	r30, r28
    2aec:	e3 57       	subi	r30, 0x73	; 115
    2aee:	ff 4f       	sbci	r31, 0xFF	; 255
    2af0:	80 81       	ld	r24, Z
    2af2:	80 31       	cpi	r24, 0x10	; 16
    2af4:	08 f4       	brcc	.+2      	; 0x2af8 <main+0x126c>
    2af6:	54 cf       	rjmp	.-344    	; 0x29a0 <main+0x1114>
			CLCD_viodGoToXY(Local_u8LoopCounter,0);
			CLCD_voidSendData(' ');
			CLCD_viodGoToXY(Local_u8LoopCounter,1);
			CLCD_voidSendData(' ');
		}
		CLCD_voidSendCmd(1);
    2af8:	81 e0       	ldi	r24, 0x01	; 1
    2afa:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
		CLCD_viodGoToXY(6,0);
    2afe:	86 e0       	ldi	r24, 0x06	; 6
    2b00:	60 e0       	ldi	r22, 0x00	; 0
    2b02:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("Don't");
    2b06:	82 ea       	ldi	r24, 0xA2	; 162
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		CLCD_viodGoToXY(6,1);
    2b0e:	86 e0       	ldi	r24, 0x06	; 6
    2b10:	61 e0       	ldi	r22, 0x01	; 1
    2b12:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("Kill me");
    2b16:	88 ea       	ldi	r24, 0xA8	; 168
    2b18:	90 e0       	ldi	r25, 0x00	; 0
    2b1a:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
		CLCD_voidSendSpecialCharacter(Local_u8Gun,7,0,0);
    2b1e:	ce 01       	movw	r24, r28
    2b20:	82 53       	subi	r24, 0x32	; 50
    2b22:	9f 4f       	sbci	r25, 0xFF	; 255
    2b24:	67 e0       	ldi	r22, 0x07	; 7
    2b26:	40 e0       	ldi	r20, 0x00	; 0
    2b28:	20 e0       	ldi	r18, 0x00	; 0
    2b2a:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    2b2e:	80 e0       	ldi	r24, 0x00	; 0
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	aa ef       	ldi	r26, 0xFA	; 250
    2b34:	b4 e4       	ldi	r27, 0x44	; 68
    2b36:	8f a3       	std	Y+39, r24	; 0x27
    2b38:	98 a7       	std	Y+40, r25	; 0x28
    2b3a:	a9 a7       	std	Y+41, r26	; 0x29
    2b3c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b3e:	6f a1       	ldd	r22, Y+39	; 0x27
    2b40:	78 a5       	ldd	r23, Y+40	; 0x28
    2b42:	89 a5       	ldd	r24, Y+41	; 0x29
    2b44:	9a a5       	ldd	r25, Y+42	; 0x2a
    2b46:	20 e0       	ldi	r18, 0x00	; 0
    2b48:	30 e0       	ldi	r19, 0x00	; 0
    2b4a:	4a e7       	ldi	r20, 0x7A	; 122
    2b4c:	55 e4       	ldi	r21, 0x45	; 69
    2b4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b52:	dc 01       	movw	r26, r24
    2b54:	cb 01       	movw	r24, r22
    2b56:	8b a3       	std	Y+35, r24	; 0x23
    2b58:	9c a3       	std	Y+36, r25	; 0x24
    2b5a:	ad a3       	std	Y+37, r26	; 0x25
    2b5c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2b5e:	6b a1       	ldd	r22, Y+35	; 0x23
    2b60:	7c a1       	ldd	r23, Y+36	; 0x24
    2b62:	8d a1       	ldd	r24, Y+37	; 0x25
    2b64:	9e a1       	ldd	r25, Y+38	; 0x26
    2b66:	20 e0       	ldi	r18, 0x00	; 0
    2b68:	30 e0       	ldi	r19, 0x00	; 0
    2b6a:	40 e8       	ldi	r20, 0x80	; 128
    2b6c:	5f e3       	ldi	r21, 0x3F	; 63
    2b6e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b72:	88 23       	and	r24, r24
    2b74:	2c f4       	brge	.+10     	; 0x2b80 <main+0x12f4>
		__ticks = 1;
    2b76:	81 e0       	ldi	r24, 0x01	; 1
    2b78:	90 e0       	ldi	r25, 0x00	; 0
    2b7a:	9a a3       	std	Y+34, r25	; 0x22
    2b7c:	89 a3       	std	Y+33, r24	; 0x21
    2b7e:	3f c0       	rjmp	.+126    	; 0x2bfe <main+0x1372>
	else if (__tmp > 65535)
    2b80:	6b a1       	ldd	r22, Y+35	; 0x23
    2b82:	7c a1       	ldd	r23, Y+36	; 0x24
    2b84:	8d a1       	ldd	r24, Y+37	; 0x25
    2b86:	9e a1       	ldd	r25, Y+38	; 0x26
    2b88:	20 e0       	ldi	r18, 0x00	; 0
    2b8a:	3f ef       	ldi	r19, 0xFF	; 255
    2b8c:	4f e7       	ldi	r20, 0x7F	; 127
    2b8e:	57 e4       	ldi	r21, 0x47	; 71
    2b90:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b94:	18 16       	cp	r1, r24
    2b96:	4c f5       	brge	.+82     	; 0x2bea <main+0x135e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b98:	6f a1       	ldd	r22, Y+39	; 0x27
    2b9a:	78 a5       	ldd	r23, Y+40	; 0x28
    2b9c:	89 a5       	ldd	r24, Y+41	; 0x29
    2b9e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2ba0:	20 e0       	ldi	r18, 0x00	; 0
    2ba2:	30 e0       	ldi	r19, 0x00	; 0
    2ba4:	40 e2       	ldi	r20, 0x20	; 32
    2ba6:	51 e4       	ldi	r21, 0x41	; 65
    2ba8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bac:	dc 01       	movw	r26, r24
    2bae:	cb 01       	movw	r24, r22
    2bb0:	bc 01       	movw	r22, r24
    2bb2:	cd 01       	movw	r24, r26
    2bb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bb8:	dc 01       	movw	r26, r24
    2bba:	cb 01       	movw	r24, r22
    2bbc:	9a a3       	std	Y+34, r25	; 0x22
    2bbe:	89 a3       	std	Y+33, r24	; 0x21
    2bc0:	0f c0       	rjmp	.+30     	; 0x2be0 <main+0x1354>
    2bc2:	80 e9       	ldi	r24, 0x90	; 144
    2bc4:	91 e0       	ldi	r25, 0x01	; 1
    2bc6:	98 a3       	std	Y+32, r25	; 0x20
    2bc8:	8f 8f       	std	Y+31, r24	; 0x1f
    2bca:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2bcc:	98 a1       	ldd	r25, Y+32	; 0x20
    2bce:	01 97       	sbiw	r24, 0x01	; 1
    2bd0:	f1 f7       	brne	.-4      	; 0x2bce <main+0x1342>
    2bd2:	98 a3       	std	Y+32, r25	; 0x20
    2bd4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bd6:	89 a1       	ldd	r24, Y+33	; 0x21
    2bd8:	9a a1       	ldd	r25, Y+34	; 0x22
    2bda:	01 97       	sbiw	r24, 0x01	; 1
    2bdc:	9a a3       	std	Y+34, r25	; 0x22
    2bde:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2be0:	89 a1       	ldd	r24, Y+33	; 0x21
    2be2:	9a a1       	ldd	r25, Y+34	; 0x22
    2be4:	00 97       	sbiw	r24, 0x00	; 0
    2be6:	69 f7       	brne	.-38     	; 0x2bc2 <main+0x1336>
    2be8:	14 c0       	rjmp	.+40     	; 0x2c12 <main+0x1386>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bea:	6b a1       	ldd	r22, Y+35	; 0x23
    2bec:	7c a1       	ldd	r23, Y+36	; 0x24
    2bee:	8d a1       	ldd	r24, Y+37	; 0x25
    2bf0:	9e a1       	ldd	r25, Y+38	; 0x26
    2bf2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bf6:	dc 01       	movw	r26, r24
    2bf8:	cb 01       	movw	r24, r22
    2bfa:	9a a3       	std	Y+34, r25	; 0x22
    2bfc:	89 a3       	std	Y+33, r24	; 0x21
    2bfe:	89 a1       	ldd	r24, Y+33	; 0x21
    2c00:	9a a1       	ldd	r25, Y+34	; 0x22
    2c02:	9e 8f       	std	Y+30, r25	; 0x1e
    2c04:	8d 8f       	std	Y+29, r24	; 0x1d
    2c06:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2c08:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2c0a:	01 97       	sbiw	r24, 0x01	; 1
    2c0c:	f1 f7       	brne	.-4      	; 0x2c0a <main+0x137e>
    2c0e:	9e 8f       	std	Y+30, r25	; 0x1e
    2c10:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(2000);
		CLCD_voidSendCmd(1);
    2c12:	81 e0       	ldi	r24, 0x01	; 1
    2c14:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
		CLCD_voidSendSpecialCharacter(Local_u8Gun,7,0,0);
    2c18:	ce 01       	movw	r24, r28
    2c1a:	82 53       	subi	r24, 0x32	; 50
    2c1c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c1e:	67 e0       	ldi	r22, 0x07	; 7
    2c20:	40 e0       	ldi	r20, 0x00	; 0
    2c22:	20 e0       	ldi	r18, 0x00	; 0
    2c24:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,1,3,0);
    2c28:	ce 01       	movw	r24, r28
    2c2a:	82 57       	subi	r24, 0x72	; 114
    2c2c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c2e:	61 e0       	ldi	r22, 0x01	; 1
    2c30:	43 e0       	ldi	r20, 0x03	; 3
    2c32:	20 e0       	ldi	r18, 0x00	; 0
    2c34:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		CLCD_voidSendSpecialCharacter(Local_u8Serounded,2,3,1);
    2c38:	ce 01       	movw	r24, r28
    2c3a:	8a 52       	subi	r24, 0x2A	; 42
    2c3c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c3e:	62 e0       	ldi	r22, 0x02	; 2
    2c40:	43 e0       	ldi	r20, 0x03	; 3
    2c42:	21 e0       	ldi	r18, 0x01	; 1
    2c44:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
		for (Local_u8LoopCounter=3;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    2c48:	fe 01       	movw	r30, r28
    2c4a:	e3 57       	subi	r30, 0x73	; 115
    2c4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4e:	83 e0       	ldi	r24, 0x03	; 3
    2c50:	80 83       	st	Z, r24
    2c52:	b3 c0       	rjmp	.+358    	; 0x2dba <main+0x152e>
		{

			CLCD_voidSendSpecialCharacter(Local_u8Fire,3,Local_u8LoopCounter-1,0);
    2c54:	fe 01       	movw	r30, r28
    2c56:	e3 57       	subi	r30, 0x73	; 115
    2c58:	ff 4f       	sbci	r31, 0xFF	; 255
    2c5a:	80 81       	ld	r24, Z
    2c5c:	28 2f       	mov	r18, r24
    2c5e:	21 50       	subi	r18, 0x01	; 1
    2c60:	ce 01       	movw	r24, r28
    2c62:	82 52       	subi	r24, 0x22	; 34
    2c64:	9f 4f       	sbci	r25, 0xFF	; 255
    2c66:	63 e0       	ldi	r22, 0x03	; 3
    2c68:	42 2f       	mov	r20, r18
    2c6a:	20 e0       	ldi	r18, 0x00	; 0
    2c6c:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
			CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,1,Local_u8LoopCounter,0);
    2c70:	ce 01       	movw	r24, r28
    2c72:	82 57       	subi	r24, 0x72	; 114
    2c74:	9f 4f       	sbci	r25, 0xFF	; 255
    2c76:	fe 01       	movw	r30, r28
    2c78:	e3 57       	subi	r30, 0x73	; 115
    2c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7c:	61 e0       	ldi	r22, 0x01	; 1
    2c7e:	40 81       	ld	r20, Z
    2c80:	20 e0       	ldi	r18, 0x00	; 0
    2c82:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
			CLCD_voidSendSpecialCharacter(Local_u8Serounded,2,Local_u8LoopCounter,1);
    2c86:	ce 01       	movw	r24, r28
    2c88:	8a 52       	subi	r24, 0x2A	; 42
    2c8a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c8c:	fe 01       	movw	r30, r28
    2c8e:	e3 57       	subi	r30, 0x73	; 115
    2c90:	ff 4f       	sbci	r31, 0xFF	; 255
    2c92:	62 e0       	ldi	r22, 0x02	; 2
    2c94:	40 81       	ld	r20, Z
    2c96:	21 e0       	ldi	r18, 0x01	; 1
    2c98:	0e 94 0a 08 	call	0x1014	; 0x1014 <CLCD_voidSendSpecialCharacter>
    2c9c:	80 e0       	ldi	r24, 0x00	; 0
    2c9e:	90 e0       	ldi	r25, 0x00	; 0
    2ca0:	aa e7       	ldi	r26, 0x7A	; 122
    2ca2:	b3 e4       	ldi	r27, 0x43	; 67
    2ca4:	89 8f       	std	Y+25, r24	; 0x19
    2ca6:	9a 8f       	std	Y+26, r25	; 0x1a
    2ca8:	ab 8f       	std	Y+27, r26	; 0x1b
    2caa:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cac:	69 8d       	ldd	r22, Y+25	; 0x19
    2cae:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2cb0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2cb2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2cb4:	20 e0       	ldi	r18, 0x00	; 0
    2cb6:	30 e0       	ldi	r19, 0x00	; 0
    2cb8:	4a e7       	ldi	r20, 0x7A	; 122
    2cba:	55 e4       	ldi	r21, 0x45	; 69
    2cbc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cc0:	dc 01       	movw	r26, r24
    2cc2:	cb 01       	movw	r24, r22
    2cc4:	8d 8b       	std	Y+21, r24	; 0x15
    2cc6:	9e 8b       	std	Y+22, r25	; 0x16
    2cc8:	af 8b       	std	Y+23, r26	; 0x17
    2cca:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2ccc:	6d 89       	ldd	r22, Y+21	; 0x15
    2cce:	7e 89       	ldd	r23, Y+22	; 0x16
    2cd0:	8f 89       	ldd	r24, Y+23	; 0x17
    2cd2:	98 8d       	ldd	r25, Y+24	; 0x18
    2cd4:	20 e0       	ldi	r18, 0x00	; 0
    2cd6:	30 e0       	ldi	r19, 0x00	; 0
    2cd8:	40 e8       	ldi	r20, 0x80	; 128
    2cda:	5f e3       	ldi	r21, 0x3F	; 63
    2cdc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ce0:	88 23       	and	r24, r24
    2ce2:	2c f4       	brge	.+10     	; 0x2cee <main+0x1462>
		__ticks = 1;
    2ce4:	81 e0       	ldi	r24, 0x01	; 1
    2ce6:	90 e0       	ldi	r25, 0x00	; 0
    2ce8:	9c 8b       	std	Y+20, r25	; 0x14
    2cea:	8b 8b       	std	Y+19, r24	; 0x13
    2cec:	3f c0       	rjmp	.+126    	; 0x2d6c <main+0x14e0>
	else if (__tmp > 65535)
    2cee:	6d 89       	ldd	r22, Y+21	; 0x15
    2cf0:	7e 89       	ldd	r23, Y+22	; 0x16
    2cf2:	8f 89       	ldd	r24, Y+23	; 0x17
    2cf4:	98 8d       	ldd	r25, Y+24	; 0x18
    2cf6:	20 e0       	ldi	r18, 0x00	; 0
    2cf8:	3f ef       	ldi	r19, 0xFF	; 255
    2cfa:	4f e7       	ldi	r20, 0x7F	; 127
    2cfc:	57 e4       	ldi	r21, 0x47	; 71
    2cfe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d02:	18 16       	cp	r1, r24
    2d04:	4c f5       	brge	.+82     	; 0x2d58 <main+0x14cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d06:	69 8d       	ldd	r22, Y+25	; 0x19
    2d08:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d0a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d0c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d0e:	20 e0       	ldi	r18, 0x00	; 0
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	40 e2       	ldi	r20, 0x20	; 32
    2d14:	51 e4       	ldi	r21, 0x41	; 65
    2d16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d1a:	dc 01       	movw	r26, r24
    2d1c:	cb 01       	movw	r24, r22
    2d1e:	bc 01       	movw	r22, r24
    2d20:	cd 01       	movw	r24, r26
    2d22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d26:	dc 01       	movw	r26, r24
    2d28:	cb 01       	movw	r24, r22
    2d2a:	9c 8b       	std	Y+20, r25	; 0x14
    2d2c:	8b 8b       	std	Y+19, r24	; 0x13
    2d2e:	0f c0       	rjmp	.+30     	; 0x2d4e <main+0x14c2>
    2d30:	80 e9       	ldi	r24, 0x90	; 144
    2d32:	91 e0       	ldi	r25, 0x01	; 1
    2d34:	9a 8b       	std	Y+18, r25	; 0x12
    2d36:	89 8b       	std	Y+17, r24	; 0x11
    2d38:	89 89       	ldd	r24, Y+17	; 0x11
    2d3a:	9a 89       	ldd	r25, Y+18	; 0x12
    2d3c:	01 97       	sbiw	r24, 0x01	; 1
    2d3e:	f1 f7       	brne	.-4      	; 0x2d3c <main+0x14b0>
    2d40:	9a 8b       	std	Y+18, r25	; 0x12
    2d42:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d44:	8b 89       	ldd	r24, Y+19	; 0x13
    2d46:	9c 89       	ldd	r25, Y+20	; 0x14
    2d48:	01 97       	sbiw	r24, 0x01	; 1
    2d4a:	9c 8b       	std	Y+20, r25	; 0x14
    2d4c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d4e:	8b 89       	ldd	r24, Y+19	; 0x13
    2d50:	9c 89       	ldd	r25, Y+20	; 0x14
    2d52:	00 97       	sbiw	r24, 0x00	; 0
    2d54:	69 f7       	brne	.-38     	; 0x2d30 <main+0x14a4>
    2d56:	14 c0       	rjmp	.+40     	; 0x2d80 <main+0x14f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d58:	6d 89       	ldd	r22, Y+21	; 0x15
    2d5a:	7e 89       	ldd	r23, Y+22	; 0x16
    2d5c:	8f 89       	ldd	r24, Y+23	; 0x17
    2d5e:	98 8d       	ldd	r25, Y+24	; 0x18
    2d60:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d64:	dc 01       	movw	r26, r24
    2d66:	cb 01       	movw	r24, r22
    2d68:	9c 8b       	std	Y+20, r25	; 0x14
    2d6a:	8b 8b       	std	Y+19, r24	; 0x13
    2d6c:	8b 89       	ldd	r24, Y+19	; 0x13
    2d6e:	9c 89       	ldd	r25, Y+20	; 0x14
    2d70:	98 8b       	std	Y+16, r25	; 0x10
    2d72:	8f 87       	std	Y+15, r24	; 0x0f
    2d74:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d76:	98 89       	ldd	r25, Y+16	; 0x10
    2d78:	01 97       	sbiw	r24, 0x01	; 1
    2d7a:	f1 f7       	brne	.-4      	; 0x2d78 <main+0x14ec>
    2d7c:	98 8b       	std	Y+16, r25	; 0x10
    2d7e:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(250);
			CLCD_viodGoToXY(Local_u8LoopCounter,0);
    2d80:	fe 01       	movw	r30, r28
    2d82:	e3 57       	subi	r30, 0x73	; 115
    2d84:	ff 4f       	sbci	r31, 0xFF	; 255
    2d86:	80 81       	ld	r24, Z
    2d88:	60 e0       	ldi	r22, 0x00	; 0
    2d8a:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
			CLCD_voidSendData(' ');
    2d8e:	80 e2       	ldi	r24, 0x20	; 32
    2d90:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
			CLCD_viodGoToXY(Local_u8LoopCounter,1);
    2d94:	fe 01       	movw	r30, r28
    2d96:	e3 57       	subi	r30, 0x73	; 115
    2d98:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9a:	80 81       	ld	r24, Z
    2d9c:	61 e0       	ldi	r22, 0x01	; 1
    2d9e:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
			CLCD_voidSendData(' ');
    2da2:	80 e2       	ldi	r24, 0x20	; 32
    2da4:	0e 94 75 06 	call	0xcea	; 0xcea <CLCD_voidSendData>
		_delay_ms(2000);
		CLCD_voidSendCmd(1);
		CLCD_voidSendSpecialCharacter(Local_u8Gun,7,0,0);
		CLCD_voidSendSpecialCharacter(Local_u8HamokshaFace,1,3,0);
		CLCD_voidSendSpecialCharacter(Local_u8Serounded,2,3,1);
		for (Local_u8LoopCounter=3;Local_u8LoopCounter<=15;Local_u8LoopCounter++)
    2da8:	de 01       	movw	r26, r28
    2daa:	a3 57       	subi	r26, 0x73	; 115
    2dac:	bf 4f       	sbci	r27, 0xFF	; 255
    2dae:	fe 01       	movw	r30, r28
    2db0:	e3 57       	subi	r30, 0x73	; 115
    2db2:	ff 4f       	sbci	r31, 0xFF	; 255
    2db4:	80 81       	ld	r24, Z
    2db6:	8f 5f       	subi	r24, 0xFF	; 255
    2db8:	8c 93       	st	X, r24
    2dba:	fe 01       	movw	r30, r28
    2dbc:	e3 57       	subi	r30, 0x73	; 115
    2dbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc0:	80 81       	ld	r24, Z
    2dc2:	80 31       	cpi	r24, 0x10	; 16
    2dc4:	08 f4       	brcc	.+2      	; 0x2dc8 <main+0x153c>
    2dc6:	46 cf       	rjmp	.-372    	; 0x2c54 <main+0x13c8>
			CLCD_viodGoToXY(Local_u8LoopCounter,0);
			CLCD_voidSendData(' ');
			CLCD_viodGoToXY(Local_u8LoopCounter,1);
			CLCD_voidSendData(' ');
		}
		CLCD_voidSendCmd(1);
    2dc8:	81 e0       	ldi	r24, 0x01	; 1
    2dca:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
		CLCD_viodGoToXY(5,0);
    2dce:	85 e0       	ldi	r24, 0x05	; 5
    2dd0:	60 e0       	ldi	r22, 0x00	; 0
    2dd2:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <CLCD_viodGoToXY>
		CLCD_u8SendString("THE END");
    2dd6:	80 eb       	ldi	r24, 0xB0	; 176
    2dd8:	90 e0       	ldi	r25, 0x00	; 0
    2dda:	0e 94 2a 07 	call	0xe54	; 0xe54 <CLCD_u8SendString>
    2dde:	80 e0       	ldi	r24, 0x00	; 0
    2de0:	90 e4       	ldi	r25, 0x40	; 64
    2de2:	ac e9       	ldi	r26, 0x9C	; 156
    2de4:	b5 e4       	ldi	r27, 0x45	; 69
    2de6:	8b 87       	std	Y+11, r24	; 0x0b
    2de8:	9c 87       	std	Y+12, r25	; 0x0c
    2dea:	ad 87       	std	Y+13, r26	; 0x0d
    2dec:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dee:	6b 85       	ldd	r22, Y+11	; 0x0b
    2df0:	7c 85       	ldd	r23, Y+12	; 0x0c
    2df2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2df4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2df6:	20 e0       	ldi	r18, 0x00	; 0
    2df8:	30 e0       	ldi	r19, 0x00	; 0
    2dfa:	4a e7       	ldi	r20, 0x7A	; 122
    2dfc:	55 e4       	ldi	r21, 0x45	; 69
    2dfe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e02:	dc 01       	movw	r26, r24
    2e04:	cb 01       	movw	r24, r22
    2e06:	8f 83       	std	Y+7, r24	; 0x07
    2e08:	98 87       	std	Y+8, r25	; 0x08
    2e0a:	a9 87       	std	Y+9, r26	; 0x09
    2e0c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2e0e:	6f 81       	ldd	r22, Y+7	; 0x07
    2e10:	78 85       	ldd	r23, Y+8	; 0x08
    2e12:	89 85       	ldd	r24, Y+9	; 0x09
    2e14:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e16:	20 e0       	ldi	r18, 0x00	; 0
    2e18:	30 e0       	ldi	r19, 0x00	; 0
    2e1a:	40 e8       	ldi	r20, 0x80	; 128
    2e1c:	5f e3       	ldi	r21, 0x3F	; 63
    2e1e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e22:	88 23       	and	r24, r24
    2e24:	2c f4       	brge	.+10     	; 0x2e30 <main+0x15a4>
		__ticks = 1;
    2e26:	81 e0       	ldi	r24, 0x01	; 1
    2e28:	90 e0       	ldi	r25, 0x00	; 0
    2e2a:	9e 83       	std	Y+6, r25	; 0x06
    2e2c:	8d 83       	std	Y+5, r24	; 0x05
    2e2e:	3f c0       	rjmp	.+126    	; 0x2eae <main+0x1622>
	else if (__tmp > 65535)
    2e30:	6f 81       	ldd	r22, Y+7	; 0x07
    2e32:	78 85       	ldd	r23, Y+8	; 0x08
    2e34:	89 85       	ldd	r24, Y+9	; 0x09
    2e36:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e38:	20 e0       	ldi	r18, 0x00	; 0
    2e3a:	3f ef       	ldi	r19, 0xFF	; 255
    2e3c:	4f e7       	ldi	r20, 0x7F	; 127
    2e3e:	57 e4       	ldi	r21, 0x47	; 71
    2e40:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e44:	18 16       	cp	r1, r24
    2e46:	4c f5       	brge	.+82     	; 0x2e9a <main+0x160e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e48:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e4a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e50:	20 e0       	ldi	r18, 0x00	; 0
    2e52:	30 e0       	ldi	r19, 0x00	; 0
    2e54:	40 e2       	ldi	r20, 0x20	; 32
    2e56:	51 e4       	ldi	r21, 0x41	; 65
    2e58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e5c:	dc 01       	movw	r26, r24
    2e5e:	cb 01       	movw	r24, r22
    2e60:	bc 01       	movw	r22, r24
    2e62:	cd 01       	movw	r24, r26
    2e64:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e68:	dc 01       	movw	r26, r24
    2e6a:	cb 01       	movw	r24, r22
    2e6c:	9e 83       	std	Y+6, r25	; 0x06
    2e6e:	8d 83       	std	Y+5, r24	; 0x05
    2e70:	0f c0       	rjmp	.+30     	; 0x2e90 <main+0x1604>
    2e72:	80 e9       	ldi	r24, 0x90	; 144
    2e74:	91 e0       	ldi	r25, 0x01	; 1
    2e76:	9c 83       	std	Y+4, r25	; 0x04
    2e78:	8b 83       	std	Y+3, r24	; 0x03
    2e7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2e7c:	9c 81       	ldd	r25, Y+4	; 0x04
    2e7e:	01 97       	sbiw	r24, 0x01	; 1
    2e80:	f1 f7       	brne	.-4      	; 0x2e7e <main+0x15f2>
    2e82:	9c 83       	std	Y+4, r25	; 0x04
    2e84:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e86:	8d 81       	ldd	r24, Y+5	; 0x05
    2e88:	9e 81       	ldd	r25, Y+6	; 0x06
    2e8a:	01 97       	sbiw	r24, 0x01	; 1
    2e8c:	9e 83       	std	Y+6, r25	; 0x06
    2e8e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e90:	8d 81       	ldd	r24, Y+5	; 0x05
    2e92:	9e 81       	ldd	r25, Y+6	; 0x06
    2e94:	00 97       	sbiw	r24, 0x00	; 0
    2e96:	69 f7       	brne	.-38     	; 0x2e72 <main+0x15e6>
    2e98:	14 c0       	rjmp	.+40     	; 0x2ec2 <main+0x1636>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e9a:	6f 81       	ldd	r22, Y+7	; 0x07
    2e9c:	78 85       	ldd	r23, Y+8	; 0x08
    2e9e:	89 85       	ldd	r24, Y+9	; 0x09
    2ea0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ea2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ea6:	dc 01       	movw	r26, r24
    2ea8:	cb 01       	movw	r24, r22
    2eaa:	9e 83       	std	Y+6, r25	; 0x06
    2eac:	8d 83       	std	Y+5, r24	; 0x05
    2eae:	8d 81       	ldd	r24, Y+5	; 0x05
    2eb0:	9e 81       	ldd	r25, Y+6	; 0x06
    2eb2:	9a 83       	std	Y+2, r25	; 0x02
    2eb4:	89 83       	std	Y+1, r24	; 0x01
    2eb6:	89 81       	ldd	r24, Y+1	; 0x01
    2eb8:	9a 81       	ldd	r25, Y+2	; 0x02
    2eba:	01 97       	sbiw	r24, 0x01	; 1
    2ebc:	f1 f7       	brne	.-4      	; 0x2eba <main+0x162e>
    2ebe:	9a 83       	std	Y+2, r25	; 0x02
    2ec0:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(5000);
		CLCD_voidSendCmd(1);
    2ec2:	81 e0       	ldi	r24, 0x01	; 1
    2ec4:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <CLCD_voidSendCmd>
    2ec8:	71 c8       	rjmp	.-3870   	; 0x1fac <main+0x720>

00002eca <__divmodsi4>:
    2eca:	97 fb       	bst	r25, 7
    2ecc:	09 2e       	mov	r0, r25
    2ece:	05 26       	eor	r0, r21
    2ed0:	0e d0       	rcall	.+28     	; 0x2eee <__divmodsi4_neg1>
    2ed2:	57 fd       	sbrc	r21, 7
    2ed4:	04 d0       	rcall	.+8      	; 0x2ede <__divmodsi4_neg2>
    2ed6:	14 d0       	rcall	.+40     	; 0x2f00 <__udivmodsi4>
    2ed8:	0a d0       	rcall	.+20     	; 0x2eee <__divmodsi4_neg1>
    2eda:	00 1c       	adc	r0, r0
    2edc:	38 f4       	brcc	.+14     	; 0x2eec <__divmodsi4_exit>

00002ede <__divmodsi4_neg2>:
    2ede:	50 95       	com	r21
    2ee0:	40 95       	com	r20
    2ee2:	30 95       	com	r19
    2ee4:	21 95       	neg	r18
    2ee6:	3f 4f       	sbci	r19, 0xFF	; 255
    2ee8:	4f 4f       	sbci	r20, 0xFF	; 255
    2eea:	5f 4f       	sbci	r21, 0xFF	; 255

00002eec <__divmodsi4_exit>:
    2eec:	08 95       	ret

00002eee <__divmodsi4_neg1>:
    2eee:	f6 f7       	brtc	.-4      	; 0x2eec <__divmodsi4_exit>
    2ef0:	90 95       	com	r25
    2ef2:	80 95       	com	r24
    2ef4:	70 95       	com	r23
    2ef6:	61 95       	neg	r22
    2ef8:	7f 4f       	sbci	r23, 0xFF	; 255
    2efa:	8f 4f       	sbci	r24, 0xFF	; 255
    2efc:	9f 4f       	sbci	r25, 0xFF	; 255
    2efe:	08 95       	ret

00002f00 <__udivmodsi4>:
    2f00:	a1 e2       	ldi	r26, 0x21	; 33
    2f02:	1a 2e       	mov	r1, r26
    2f04:	aa 1b       	sub	r26, r26
    2f06:	bb 1b       	sub	r27, r27
    2f08:	fd 01       	movw	r30, r26
    2f0a:	0d c0       	rjmp	.+26     	; 0x2f26 <__udivmodsi4_ep>

00002f0c <__udivmodsi4_loop>:
    2f0c:	aa 1f       	adc	r26, r26
    2f0e:	bb 1f       	adc	r27, r27
    2f10:	ee 1f       	adc	r30, r30
    2f12:	ff 1f       	adc	r31, r31
    2f14:	a2 17       	cp	r26, r18
    2f16:	b3 07       	cpc	r27, r19
    2f18:	e4 07       	cpc	r30, r20
    2f1a:	f5 07       	cpc	r31, r21
    2f1c:	20 f0       	brcs	.+8      	; 0x2f26 <__udivmodsi4_ep>
    2f1e:	a2 1b       	sub	r26, r18
    2f20:	b3 0b       	sbc	r27, r19
    2f22:	e4 0b       	sbc	r30, r20
    2f24:	f5 0b       	sbc	r31, r21

00002f26 <__udivmodsi4_ep>:
    2f26:	66 1f       	adc	r22, r22
    2f28:	77 1f       	adc	r23, r23
    2f2a:	88 1f       	adc	r24, r24
    2f2c:	99 1f       	adc	r25, r25
    2f2e:	1a 94       	dec	r1
    2f30:	69 f7       	brne	.-38     	; 0x2f0c <__udivmodsi4_loop>
    2f32:	60 95       	com	r22
    2f34:	70 95       	com	r23
    2f36:	80 95       	com	r24
    2f38:	90 95       	com	r25
    2f3a:	9b 01       	movw	r18, r22
    2f3c:	ac 01       	movw	r20, r24
    2f3e:	bd 01       	movw	r22, r26
    2f40:	cf 01       	movw	r24, r30
    2f42:	08 95       	ret

00002f44 <__prologue_saves__>:
    2f44:	2f 92       	push	r2
    2f46:	3f 92       	push	r3
    2f48:	4f 92       	push	r4
    2f4a:	5f 92       	push	r5
    2f4c:	6f 92       	push	r6
    2f4e:	7f 92       	push	r7
    2f50:	8f 92       	push	r8
    2f52:	9f 92       	push	r9
    2f54:	af 92       	push	r10
    2f56:	bf 92       	push	r11
    2f58:	cf 92       	push	r12
    2f5a:	df 92       	push	r13
    2f5c:	ef 92       	push	r14
    2f5e:	ff 92       	push	r15
    2f60:	0f 93       	push	r16
    2f62:	1f 93       	push	r17
    2f64:	cf 93       	push	r28
    2f66:	df 93       	push	r29
    2f68:	cd b7       	in	r28, 0x3d	; 61
    2f6a:	de b7       	in	r29, 0x3e	; 62
    2f6c:	ca 1b       	sub	r28, r26
    2f6e:	db 0b       	sbc	r29, r27
    2f70:	0f b6       	in	r0, 0x3f	; 63
    2f72:	f8 94       	cli
    2f74:	de bf       	out	0x3e, r29	; 62
    2f76:	0f be       	out	0x3f, r0	; 63
    2f78:	cd bf       	out	0x3d, r28	; 61
    2f7a:	09 94       	ijmp

00002f7c <__epilogue_restores__>:
    2f7c:	2a 88       	ldd	r2, Y+18	; 0x12
    2f7e:	39 88       	ldd	r3, Y+17	; 0x11
    2f80:	48 88       	ldd	r4, Y+16	; 0x10
    2f82:	5f 84       	ldd	r5, Y+15	; 0x0f
    2f84:	6e 84       	ldd	r6, Y+14	; 0x0e
    2f86:	7d 84       	ldd	r7, Y+13	; 0x0d
    2f88:	8c 84       	ldd	r8, Y+12	; 0x0c
    2f8a:	9b 84       	ldd	r9, Y+11	; 0x0b
    2f8c:	aa 84       	ldd	r10, Y+10	; 0x0a
    2f8e:	b9 84       	ldd	r11, Y+9	; 0x09
    2f90:	c8 84       	ldd	r12, Y+8	; 0x08
    2f92:	df 80       	ldd	r13, Y+7	; 0x07
    2f94:	ee 80       	ldd	r14, Y+6	; 0x06
    2f96:	fd 80       	ldd	r15, Y+5	; 0x05
    2f98:	0c 81       	ldd	r16, Y+4	; 0x04
    2f9a:	1b 81       	ldd	r17, Y+3	; 0x03
    2f9c:	aa 81       	ldd	r26, Y+2	; 0x02
    2f9e:	b9 81       	ldd	r27, Y+1	; 0x01
    2fa0:	ce 0f       	add	r28, r30
    2fa2:	d1 1d       	adc	r29, r1
    2fa4:	0f b6       	in	r0, 0x3f	; 63
    2fa6:	f8 94       	cli
    2fa8:	de bf       	out	0x3e, r29	; 62
    2faa:	0f be       	out	0x3f, r0	; 63
    2fac:	cd bf       	out	0x3d, r28	; 61
    2fae:	ed 01       	movw	r28, r26
    2fb0:	08 95       	ret

00002fb2 <_exit>:
    2fb2:	f8 94       	cli

00002fb4 <__stop_program>:
    2fb4:	ff cf       	rjmp	.-2      	; 0x2fb4 <__stop_program>
